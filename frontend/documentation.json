{
    "pipes": [],
    "interfaces": [
        {
            "name": "Categories",
            "id": "interface-Categories-9c07e32cedc61cd2073702c81e7fa877678f7d3d392493ff2691554f60fc8240dfd607b2576938c4ea05060a0b90f033bb74d67b23e22dbbf2d85ef027b47bf7",
            "file": "src/stories/interfaces/radiobutton.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Categories {\r\n    name: string;\r\n    key: \"male\" | \"female\" | \"other\";\r\n    checked: boolean\r\n  }",
            "properties": [
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"male\" | \"female\" | \"other\"",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "examplePersonalTrainerModel",
            "id": "interface-examplePersonalTrainerModel-76536f75268b615226548061fc3f6a7d3e95f0a7f85c09ca6e9eaab84f24ebecd7114e44c4b05f668d51d9e7e2e83a528d28c37a5fb03ae20f6a4634841a1ca3",
            "file": "src/stories/interfaces/autocomplete.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface examplePersonalTrainerModel {\r\n    id: number,\r\n    name?: string,\r\n    age?: string,\r\n    trainerSkills?: trainerSkillsModel,\r\n    maxClients?: number,\r\n}\r\n\r\nenum trainerSkillsModel {\r\n    \"high\" = 3,\r\n    \"medium\" = 2,\r\n    \"low\" = 1 \r\n}",
            "properties": [
                {
                    "name": "age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "maxClients",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "trainerSkills",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "trainerSkillsModel",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "inputIconConfig",
            "id": "interface-inputIconConfig-6ca1be06ba33b393f68d8026f23e43b5391d3f3f695870c243ddffb3a2c80fa21940c7fa64312c18d77293e15d8f5b64a97b8b76d84647b7b1d29dc38fd143aa",
            "file": "src/stories/interfaces/input.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { EnumIconFloat } from \"../enums/input.enum\";\r\n\r\nexport interface inputIconConfig {\r\n    iconClassName:string,\r\n    iconFloat: EnumIconFloat\r\n}\r\n",
            "properties": [
                {
                    "name": "iconClassName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "iconFloat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EnumIconFloat",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "InputTextareaSizeModel",
            "id": "interface-InputTextareaSizeModel-791e58f76cbbe6cbd066fa40b913de3221994f7eb4f42749c2b1662b8aa0cc8f9c0d4408dbf74aa94518103605e5846e94c8a1f367cc2bbc5095e6af498d13b1",
            "file": "src/stories/interfaces/inputtextarea.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface InputTextareaSizeModel {\r\n    rows?: number,\r\n    cols?: number\r\n}\r\n",
            "properties": [
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "LanguageModel",
            "id": "interface-LanguageModel-f06849dc9bddc0694ba5f0dc4e59a91b5310c4fb3d3d76b0a04c14a8ce133109e9d9f3377ec393f7fbe060898b47984756b910e2871d6ee7f398f09ab81d2a52",
            "file": "src/stories/components/languageChanger/language.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface LanguageModel{ \r\n    id:string,\r\n    name:string\r\n}",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TableHeaderModel",
            "id": "interface-TableHeaderModel-24457b355fd28981f748d3635647e6fca15f00b49f91ea9039d2e4ff7c915d1efef57a95e26a07af8729c31c504d2e6c9e3d15d8f74fc68e23557de0e8c32069",
            "file": "src/stories/interfaces/table.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TableHeaderModel{\r\n    field?: string,\r\n    header?: string;\r\n}",
            "properties": [
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AfMessageService",
            "id": "injectable-AfMessageService-d7a6479473461a60daa40224ffa94c19fd8cf286f2ccaaebeb330da0cad87fc4f0c5b39707b71520bee5a5ffb2d9cb57f8545238a7a83dd0abbf1c373c31204f",
            "file": "src/app/features/services/message.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addErrorMessage",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "header",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "header",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addSuccesMessage",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "header",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "header",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n })\r\nexport class AfMessageService {\r\n  constructor(private messageService: MessageService) { }\r\n  public addErrorMessage(message:string,header?: string): void {\r\n    this.messageService.add({ severity: 'error',summary:header, detail: message });\r\n      setTimeout(()=>{\r\n        this.messageService.clear();\r\n      },2000);\r\n  }\r\n\r\n  public addSuccesMessage(message:string,header?: string): void {\r\n    this.messageService.add({ severity: 'success',summary:header, detail: message });\r\n      setTimeout(()=>{\r\n        this.messageService.clear();\r\n      },2000);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-b57f04661f0e56820706aa6cc2114677288c879a0c9c19a805c7728cb766ed83a661bb8f5387a5ea06fb11f19ca141516bb274002cb6ff5351c10d8f310dba19",
            "file": "src/app/auth/auth.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\nimport { LoginService } from '../api/login.service';\nimport { AfMessageService } from '../features/services/message.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard {\n\n  constructor(private loginService: LoginService, private message: AfMessageService) {}\n  canActivate(): boolean {\n    const isLoggedIn = this.loginService.isLoggedIn(); \n    if (isLoggedIn) {\n        return true;\n    } else {\n        this.message.addErrorMessage(\"Wystąpił problem z logowaniem\",\"Błąd\")\n        return false;\n    }\n  }\n\n  \n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loginService",
                        "type": "LoginService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "message",
                        "type": "AfMessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "loginService",
                        "type": "LoginService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "message",
                        "type": "AfMessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "BlogService",
            "id": "injectable-BlogService-ff8763af4f3aa118d666f3a56b1a918d0dc2ef0bd3d4af2eb1208604a7b7084da9f1344048542053bef674a2d952ed4777d272989ccff12de6d9c3e3e29c3ca0",
            "file": "src/app/api/blog.service.ts",
            "properties": [
                {
                    "name": "url",
                    "defaultValue": "'http://localhost:5000'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addNewPost",
                    "args": [
                        {
                            "name": "data",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<FormData>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getBlogData",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "size",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "searchData",
                            "type": "PostSearchModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ApiPostsModel>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "size",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "searchData",
                            "type": "PostSearchModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { ApiPostsModel, PostModel, PostSearchModel } from '../features/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n  private url: string = 'http://localhost:5000';\n\n  constructor(private http: HttpClient) { }\n\n  public getBlogData(page: number, size: number, searchData?: PostSearchModel): Observable<ApiPostsModel> {\n    let params;\n    if(searchData){\n      const {title, userName } = searchData;\n      params = new HttpParams().set(\"title\",title!).set(\"userName\",userName!).set('page', page).set('size', size);\n    }\n    else{\n      params = new HttpParams().set('page', page).set('size', size);\n    }\n    return this.http.get<ApiPostsModel>(this.url + \"/getBlog\", { params });\n  }\n\n  public addNewPost(data: FormData): Observable<FormData> {\n    data.append('userId',sessionStorage.getItem(\"id\")!)\n    return this.http.post<FormData>(this.url + \"/addPost\", data);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GymPassesService",
            "id": "injectable-GymPassesService-6658b6490859bd23d65f807648f23ff633433500eeea53fc3c20d76a05a119d4aba199e0c90dffa94109346cd6ed00f8e91e783a4f3fc5335b35e201ed1c6b7f",
            "file": "src/app/api/gym-passes.service.ts",
            "properties": [
                {
                    "name": "url",
                    "defaultValue": "'http://localhost:5000'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "userDataSignal",
                    "defaultValue": "signal<GymPassModel[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WritableSignal<GymPassModel[]>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getGymPasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable, signal, WritableSignal } from '@angular/core';\nimport { Observable, shareReplay } from 'rxjs';\nimport { GymPassModel } from '../features/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GymPassesService {\n  private userDataSignal: WritableSignal<GymPassModel[]> = signal<GymPassModel[]>([]);\n\nprivate url: string = 'http://localhost:5000';\n\nconstructor(private http: HttpClient) { }\n\npublic getGymPasses(): void {\n   this.http.get<GymPassModel[]>(`${this.url}/gym-passes`).subscribe(data => this.userDataSignal.set(data));\n}\n\npublic get gymPasses(): GymPassModel[] {\n    return this.userDataSignal();\n}\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "gymPasses": {
                    "name": "gymPasses",
                    "getSignature": {
                        "name": "gymPasses",
                        "type": "[]",
                        "returnType": "GymPassModel[]",
                        "line": 20
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "LoginService",
            "id": "injectable-LoginService-d65b068bedea0185233046aaffa1e9e3f902cf0424251bf8e8c92d93668159e72c825bca2f456ee4553267bb37b59f36cde8c801b1a398bc4fcc2daf948a3cd5",
            "file": "src/app/api/login.service.ts",
            "properties": [
                {
                    "name": "httpOptions",
                    "defaultValue": "{\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "loginUrl",
                    "defaultValue": "'http://localhost:5000/login'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "isLoggedIn",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "login",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<LoginModel>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "login",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLoggedUserId",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setToken",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, tap } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { LoginModel, userDataModel } from '../features/models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  private httpOptions: object = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  };\n\n  private loginUrl: string = 'http://localhost:5000/login';\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  public login(login: string, password: string): Observable<LoginModel> {\n    const loginData =  JSON.stringify({\n      login: login,\n      password: password\n    });\n    return this.http.post<LoginModel>(this.loginUrl,loginData, this.httpOptions).pipe(tap((res) => this.setToken(res.authToken)));\n  }\n\n  public setLoggedUserId(id: string): void {\n    sessionStorage.setItem(\"id\", id)\n  }\n  \n  public isLoggedIn(): boolean {\n    const token = sessionStorage.getItem('authToken');\n    return !!token;\n  }\n  \n  private setToken(token: string) {\n    sessionStorage.setItem('authToken', token);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProfileService",
            "id": "injectable-ProfileService-7474e0663fe2fb9003a66c04e98c7969672e829385c1b4270c275ccf8493cec9d5c13b606b8de4ab5cda9193f882a42bb82d6658accb07d99ad1cba55d0ab0ff",
            "file": "src/app/api/profile.service.ts",
            "properties": [
                {
                    "name": "url",
                    "defaultValue": "'http://localhost:5000'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "userDataSignal",
                    "defaultValue": "signal<userDataModel>({} as userDataModel)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WritableSignal<userDataModel>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "userId",
                    "defaultValue": "sessionStorage.getItem(\"id\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "changeUserData",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUserData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "photoUpdate",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeUser",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable, signal, WritableSignal } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { userDataModel } from '../features/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n  private userDataSignal: WritableSignal<userDataModel>  = signal<userDataModel>({} as userDataModel)\n  private url: string = 'http://localhost:5000';\n  private userId: string | null = sessionStorage.getItem(\"id\");\n\n  constructor(private http: HttpClient) {}\n\n  public getUserData(): void {\n    this.http.get<any>(`${this.url}/getUser/${this.userId}`).subscribe(val=>{\n      this.userDataSignal.set(val);\n    });\n  }\n\n  public changeUserData(data: any): Observable<any> {\n    return this.http.post<any>(this.url + \"/changeUserData/\" + this.userId, data);\n  }\n\n  public removeUser(): Observable<any> {\n    console.log(this.url + `/deleteUser/${this.userId}`);\n    return this.http.delete<any>(this.url + `/deleteUser/${this.userId}`);\n  }\n\n  public photoUpdate(event: any): Observable<any> {\n    const file = event.files[0];\n    const formData = new FormData();\n    formData.append('photo', file);\n    return this.http.put<any>(this.url + \"/uploadPhoto/\" + this.userId, formData)\n  }\n\n  public get userData():userDataModel {\n    return this.userDataSignal();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "userData": {
                    "name": "userData",
                    "getSignature": {
                        "name": "userData",
                        "type": "",
                        "returnType": "userDataModel",
                        "line": 38
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "RegisterService",
            "id": "injectable-RegisterService-7efc9da5b075fbe77874c8614d172838186e6e93b9da08a2a2462cd397bf8d856cdc0a6de5333f118cc57175a252435198c458e090d3d85a0c6250c1315d55de",
            "file": "src/app/api/register.service.ts",
            "properties": [
                {
                    "name": "loginUrl",
                    "defaultValue": "'http://localhost:5000/addUser'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "register",
                    "args": [
                        {
                            "name": "data",
                            "type": "userDataModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "userDataModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setToken",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { userDataModel } from '../features/models/user.model';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n  private loginUrl: string = 'http://localhost:5000/addUser';\n\n  constructor(private http: HttpClient) {}\n\n  public register(data: userDataModel) : Observable<any>{\n    return this.http.post<any>(this.loginUrl, data).pipe(tap((res) => this.setToken(res.authToken)));\n  }\n  private setToken(token: string) {\n    sessionStorage.setItem('authToken', token);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TrainersService",
            "id": "injectable-TrainersService-d5ecca6d9b49733fce013134e0a749592d549f03c987b5bf1627a25e985cb6458d9200de44f75f393bc4b60535aaead182322d1f0e70cc9e1260ff3c7e704f05",
            "file": "src/app/api/trainers.service.ts",
            "properties": [
                {
                    "name": "url",
                    "defaultValue": "'http://localhost:5000'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getTrainers",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<userDataModel[]>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { userDataModel } from '../features/models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrainersService {\n  private url: string = 'http://localhost:5000';\n  constructor(private http: HttpClient) { }\n\n  public getTrainers(): Observable<userDataModel[]> {\n    return this.http.get<userDataModel[]>(this.url + \"/getCoaches\");\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AdminPageComponent",
            "id": "component-AdminPageComponent-54b5ba10401a9800b607d92565ac07abed6e1ae5b7aab7b6b2a320ad0b25b3eaf73c63b7faef56841de81bb6551af681c85097dbd6dfcf7c799b253488cc3cb6",
            "file": "src/app/sites/profile/admin-page/admin-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-admin-page",
            "styleUrls": [
                "./admin-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./admin-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'af-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.scss']\n})\nexport class AdminPageComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./admin-page.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>admin-page works!</p>\n"
        },
        {
            "name": "AFGymPassCardComponent",
            "id": "component-AFGymPassCardComponent-d0e7ed7ffe40356743785a3a3e9a804e70490ec80b65799609eccba19fb7689c1ca9235722a4b8a9986d5e99385a43dac7bbae6e9d71d8e0a5dec9cf6138f503",
            "file": "src/stories/components/gym-pass-card/gym-pass-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-gym-pass-card",
            "styleUrls": [
                "./gym-pass-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gym-pass-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "smallerCard",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getOptions",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "routeToGymPasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'af-gym-pass-card',\r\n  templateUrl: \"./gym-pass-card.component.html\",\r\n  styleUrls: ['./gym-pass-card.component.scss'],\r\n})\r\nexport class AFGymPassCardComponent implements OnInit{\r\n  @Input() public title: string;\r\n  @Input() public subtitle: string;\r\n  @Input() public price: string;\r\n  @Input() public name: string;\r\n  @Input() public buttonId: string;\r\n  @Input() public smallerCard: boolean = false;\r\n\r\n  public options: string[];\r\n\r\n  constructor(private router: Router){}\r\n\r\n  public ngOnInit(): void {\r\n      this.options = this.getOptions(this.name);\r\n  }\r\n\r\n  public routeToGymPasses(): void  {\r\n    this.router.navigate([\"profile/gym-pass\"]);\r\n    }\r\n    private getOptions(name: string): string[] {\r\n  switch (name) {\r\n    case 'development':\r\n      return ['gymPass.developmentPass.access', 'gymPass.developmentPass.monthlyPay', 'gymPass.shared.FirstPay', 'gymPass.shared.Water'];\r\n    case 'fun':\r\n      return ['gymPass.shared.Unlimited', 'gymPass.funPass.access', 'gymPass.shared.guarantee', 'gymPass.shared.FirstPay', 'gymPass.shared.freeze', 'gymPass.shared.cancel', 'gymPass.shared.Water'];\r\n    case 'health':\r\n      return ['gymPass.shared.Unlimited', 'gymPass.healthPass.allday', 'gymPass.shared.guarantee', 'gymPass.healthPass.Lackfirstpay', 'gymPass.healthPass.freetraining', 'gymPass.shared.freeze', 'gymPass.shared.cancel', 'gymPass.shared.Water'];\r\n    default:\r\n      return [];\r\n  }\r\n}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../constants/constants.scss\";\r\n\r\n.gym-pass {\r\n  &-content {\r\n    af-tile {\r\n      ::ng-deep .tile_container {\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    }\r\n\r\n    &-header {\r\n      box-shadow: 0 4px 10px -10px $darker-gray;\r\n      width: 100%;\r\n      background-color: $background-dark;\r\n      color: $input-text-accent;\r\n      font-weight: $font-weight-bold;\r\n      padding: 10px 40px 40px 40px;\r\n\r\n      h3 {\r\n        text-align: center;\r\n        font-size: 32px;\r\n        color: $input-text-light;\r\n      }\r\n\r\n      .subtitle {\r\n        padding-top: 5px;\r\n        text-align: center;\r\n        font-size: 18px;\r\n      }\r\n\r\n      .price {\r\n        padding-top: 15px;\r\n        font-size: 28px;\r\n      }\r\n\r\n      .type-of-gym-pass {\r\n        padding-top: 10px;\r\n        font-size: 16px;\r\n        color: $input-text-light;\r\n      }\r\n      &-small{\r\n        padding: 10px 30px 30px 30px;\r\n        h3{\r\n          font-size: 26px;\r\n        }\r\n        .subtitle{\r\n          font-size: 14px;\r\n        }\r\n        .price {\r\n          padding-top: 10px;\r\n          font-size: 22px;\r\n        }\r\n  \r\n        .type-of-gym-pass {\r\n          font-size: 12px;\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    &-content {\r\n      height: 60%;\r\n\r\n      p {\r\n        font-weight: $font-weight-bold;\r\n        font-size: 18px;\r\n        padding: 10px 40px ;\r\n        \r\n\r\n        i {\r\n          font-weight: $font-weight-bold;\r\n          color: $input-text-accent;\r\n          padding-right: 10px;\r\n        }\r\n      }\r\n      &-small{\r\n        p {\r\n          font-size: 14px;\r\n          padding: 10px 30px;\r\n        }\r\n      }\r\n    }\r\n\r\n    &-button {\r\n      display: flex;\r\n      justify-content: center;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (orientation: landscape) and (max-width: 1024px) {\r\n  .gym-pass {\r\n    &-content {\r\n      &-header {\r\n        h3 {\r\n\r\n          text-align: center;\r\n          font-size: 30px;\r\n          color: $input-text-light;\r\n        }\r\n\r\n        .subtitle {\r\n          padding-top: 5px;\r\n          text-align: center;\r\n          font-size: 18px;\r\n        }\r\n\r\n        .price {\r\n          padding-top: 15px;\r\n          font-size: 24px;\r\n        }\r\n\r\n        .type-of-gym-pass {\r\n          padding-top: 10px;\r\n          font-size: 13px;\r\n          color: $input-text-light;\r\n        }\r\n      }\r\n\r\n      &-content {\r\n        height: 55%;\r\n\r\n        p {\r\n          font-size: 15px;\r\n          padding: 0 40px 0 40px;\r\n\r\n        }\r\n      }\r\n\r\n      &-button {\r\n        width: 70%;\r\n        margin: 0 auto 20px auto;\r\n\r\n        af-button {\r\n          ::ng-deep .button__container .p-element .p-button {\r\n            .p-button-label {\r\n              font-size: 29px !important;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
                    "styleUrl": "./gym-pass-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<af-tile>\r\n    <div class=\"gym-pass-content-header\" [ngClass]=\"{'gym-pass-content-header-small': smallerCard}\">\r\n      <h3>{{ title | translate }}</h3>\r\n      <p class=\"subtitle\"><span class=\"quotes\">&bdquo;</span>{{ subtitle | translate }}<span class=\"quotes\">&rdquo;</span></p>\r\n      <p class=\"price\">{{ price }}</p>\r\n      <p class=\"type-of-gym-pass\">\r\n        <span *ngIf=\"buttonId == 'development'\">/ {{\"gymPass.developmentPass.monthlyPay\" | translate}}</span> \r\n        / {{\"gymPass.shared.sub\" | translate}} /</p>\r\n    </div>\r\n    <div class=\"gym-pass-content-content\" [ngClass]=\"{'gym-pass-content-content-small': smallerCard}\">\r\n      <p *ngFor=\"let option of options\">\r\n        <i class=\"pi pi-check\"></i> {{ option | translate }}\r\n      </p>\r\n    </div>\r\n    <div class=\"gym-pass-content-button\" [ngClass]=\"{'gym-pass-content-button-small': smallerCard}\">\r\n      <af-button [label]=\"'button.orderonline' | translate\" [buttonId]=\"buttonId\" [fontSize]=\"smallerCard ? 20 : 30\" (onClick)=\"routeToGymPasses()\"></af-button>\r\n    </div>\r\n  </af-tile>"
        },
        {
            "name": "AFIconShadowComponent",
            "id": "component-AFIconShadowComponent-62c7c9a8fa1a7d6bcd9f67f4e962a59c0ed8e797fec68512900908dd49fc12e7616c81fe6996fcba782bd7b1e74f5ad8ec16423f3ff9b2254dcd19ff1a1ef115",
            "file": "src/stories/components/iconShadow/iconShadow.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-floatlabel",
            "styleUrls": [
                "./iconShadow.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./iconShadow.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "iconClassName",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "link",
                    "defaultValue": "\"#\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-floatlabel',\r\n  templateUrl: './iconShadow.component.html',\r\n  styleUrls: ['./iconShadow.component.scss'],\r\n})\r\nexport class AFIconShadowComponent  {\r\n@Input() link:string = \"#\";\r\n@Input() iconClassName:string = \"\";\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section{\r\n    display: grid;\r\n    place-items: center;\r\n    height: 100vh;\r\n}\r\n\r\n.iconShadow__container {\r\n  cursor: pointer;\r\n  position: relative;\r\n\r\n  .iconShadow__content {\r\n    text-decoration: none;\r\n    overflow: hidden;\r\n    color: #dc2743;\r\n    \r\n    .pi{\r\n        color: #222;\r\n        font-size: 60px;\r\n        padding:  2px 5px 0 5px;\r\n        &:hover{\r\n            z-index: 1001;\r\n        }\r\n            \r\n        \r\n    }\r\n      \r\n      &::before {\r\n        font-family: 'primeicons';\r\n        content: \"\\e908\"; // tutaj dana ikonka\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        font-size: 60px;\r\n        height: 0;\r\n        overflow: hidden;\r\n        transition: 0.5s ease-in-out;\r\n        border-bottom: 4px solid #dc2743;\r\n        padding: 2px 5px 0 5px;\r\n      }\r\n  }\r\n  &:hover .iconShadow__content::before{\r\n    height: 60px;\r\n  }\r\n}",
                    "styleUrl": "./iconShadow.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "templateData": "<section>\r\n    <div class=\"iconShadow__container\">\r\n        <a [href]=\"link\" class=\"iconShadow__content\"><i class=\"pi {{iconClassName}} iconShadow__content--icon\"></i></a>\r\n    </div> \r\n</section>\r\n"
        },
        {
            "name": "AFProfileMenuComponent",
            "id": "component-AFProfileMenuComponent-4d448eab52fa35b194b6ce5de5e6fcd69cbfcff0ae5fc5307143b1fe92688155b578641b24c1441f2e133cefeffd7b3eb527115630e256413fafb1776f1a46ad",
            "file": "src/stories/components/profile-menu/profile-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-profile-menu",
            "styleUrls": [
                "./profile-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isAdmin",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "BackEmmiter",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "navigateWithData",
                    "args": [
                        {
                            "name": "route",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "undo",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProfileService } from 'src/app/api';\nimport { userDataModel } from 'src/app/features/models';\n\n@Component({\n  selector: 'af-profile-menu',\n  templateUrl: './profile-menu.component.html',\n  styleUrls: ['./profile-menu.component.scss']\n})\nexport class AFProfileMenuComponent implements OnInit {\n  @Output() BackEmmiter: EventEmitter<void> = new EventEmitter();\n  @Input() isAdmin: boolean = false;\n\n  constructor(private router: Router, private proflieService: ProfileService) { }\n\n  public ngOnInit(): void {\n   \n  }\n\n  public logout(): void {\n    sessionStorage.clear();\n    this.router.navigate(['/welcome']);\n  }\n\n  public navigateWithData(route: string): void {\n    this.router.navigate([`/profile/${route}`]);\n  }\n\n  public undo(): void {\n    this.BackEmmiter.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../constants/constants.scss\";\r\n\r\n.profile-menu {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: flex-end;\r\n    padding: 10px;\r\n    width: 100%;\r\n    min-height: 49vh;\r\n\r\n    .navi-item {\r\n      padding: 10px;\r\n      display: flex;\r\n      align-items: center;\r\n      margin: 5px 0;\r\n      cursor: pointer;\r\n      width: 100%;\r\n      transition: .3s;\r\n      border-radius: 10px;\r\n      &:hover{\r\n        background-color: $darker-gray;\r\n        color: $input-text-accent;\r\n      }\r\n\r\n      &--bottom {\r\n        width: 100%;\r\n        margin-top: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        gap: 10px;\r\n      }\r\n    }\r\n\r\n    i {\r\n      margin-right: 10px;\r\n    }\r\n  }",
                    "styleUrl": "./profile-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "proflieService",
                        "type": "ProfileService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "proflieService",
                        "type": "ProfileService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ul class=\"profile-menu\">\n        <li class=\"navi-item\" (click)=\"navigateWithData('my-profile')\">\n          <i class=\"fa-solid fa-user\" style=\"font-size: 2rem\"></i> {{\"profile.menu.my-profile\" | translate}}\n        </li>\n        <li class=\"navi-item\" (click)=\"navigateWithData('gym-pass')\">\n          <i class=\"fa-solid fa-ticket\"  style=\"font-size: 2rem\"></i> {{\"profile.menu.my-gym-pass\" | translate}}\n        </li>\n        <li class=\"navi-item\" (click)=\"navigateWithData('personal-trainers')\">\n          <i class=\"fa-solid fa-dumbbell\"  style=\"font-size: 2rem\"></i> {{\"profile.menu.my-trainings\" | translate}}\n        </li>\n        <li class=\"navi-item\" (click)=\"navigateWithData('diets')\">\n          <i class=\"fa-solid fa-utensils\" style=\"font-size: 2rem\"></i> {{\"profile.menu.my-diets\" | translate}}\n        </li>\n        <li *ngIf=\"isAdmin\" class=\"navi-item\" (click)=\"navigateWithData('admin')\">\n          <i class=\"fa-solid fa-screwdriver-wrench\" style=\"font-size: 2rem\"></i> {{\"profile.menu.admin\" | translate}}\n        </li>\n        <li class=\"navi-item--bottom\">\n            <af-button iconClassName=\"pi-undo\" [label]=\"'button.back' | translate\" (onClick)=\"undo()\"></af-button>\n            <af-button iconClassName=\"pi-sign-out\"[label]=\"'button.logout' | translate\" (onClick)=\"logout()\"></af-button>\n        </li>\n    </ul>"
        },
        {
            "name": "AFTableComponent",
            "id": "component-AFTableComponent-9d84b2ad0e0ecf068b3e267be79169ca9b8354b129cd935ba638d035be16ab3dd7acb2accea50eee2e94b43c9dfc9c8ba9602a17f8e0accf6e40144b45e2ed5d",
            "file": "src/stories/components/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-table",
            "styleUrls": [
                "./table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "columns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "TableHeaderModel[]",
                    "decorators": []
                },
                {
                    "name": "paginator",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rows",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "values",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "firstPage",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { TableHeaderModel } from 'src/stories/interfaces/table.model';\n\n@Component({\n  selector: 'af-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class AFTableComponent implements OnInit {\n  @Input() public columns: TableHeaderModel[]=[];\n  @Input() public values: any;\n  @Input() public paginator: boolean = false; \n  @Input() public rows: number = 2;\n  public firstPage: number = 0;\nconstructor(){\n\n}\n public ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-table \n[(first)]=\"firstPage\"\n[columns]=\"columns\" \n[value]=\"values\" \n[tableStyle]=\"{ 'min-width': '50rem' }\"  \n[paginator]=\"paginator\"\n[rows]=\"rows\">\n    <ng-template pTemplate=\"header\" let-columns>\n        <tr>\n            <th *ngFor=\"let header of columns\">\n                {{header.field}}\n            </th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-rowData  let-columns=\"columns\">\n        <tr> \n            <td *ngFor=\"let col of columns\">\n            {{ rowData[col.field] }}\n            </td>\n        </tr>\n    </ng-template>\n</p-table>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-a5a1c5d2fe841acc361f80bafdfbf14779b4e9f6b3aa261952a8af5361df611b3f16b54a2ba8eae5bdaa1579171daad6e677ad66d4b5498e58253429c76a3ecb",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private router: Router) { }\r\n  public ngOnInit(): void {\r\n    sessionStorage.setItem(\"language\", sessionStorage.getItem(\"language\") || (\"en\"));\r\n    this.router.events.subscribe((evt) => {\r\n      if (!(evt instanceof NavigationEnd)) {\r\n        return;\r\n      }\r\n      window.scrollTo(0, 0)\r\n    });\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>"
        },
        {
            "name": "AutocompleteComponent",
            "id": "component-AutocompleteComponent-d5eda871235c11389f0ed37d8892427db73c7425b5f1a901ebd30166400d8d95d4a60e44ef0810059627b9ca4bbcb1634522a06f4edfa1c76eb642384cf35120",
            "file": "src/stories/components/autocompete/autocomplete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-autocomplete",
            "styleUrls": [
                "./autocomplete.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./autocomplete.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dropdown",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "filedName",
                    "defaultValue": "\"name\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxLength",
                    "defaultValue": "255",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minLength",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "suggestions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "examplePersonalTrainerModel[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filteredValues",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "examplePersonalTrainerModel[]",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedValue",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgStyle } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { examplePersonalTrainerModel } from '../../interfaces/autocomplete.model';\r\n\r\n@Component({\r\n  selector: 'af-autocomplete',\r\n  templateUrl: './autocomplete.component.html',\r\n  styleUrls: ['./autocomplete.component.scss']\r\n})\r\nexport class AutocompleteComponent {\r\n\r\n@Input() public suggestions: examplePersonalTrainerModel[] = [];\r\n@Input() public dropdown: boolean = false;\r\n@Input() public filedName: string = \"name\";\r\n@Input() public minLength: number = 1;\r\n@Input() public maxLength: number = 255;\r\n@Input() public multiple: boolean = false; \r\n\r\npublic filteredValues: examplePersonalTrainerModel[] = [];\r\npublic selectedValue: string = \"\";\r\nconstructor() {\r\n}\r\n\r\n\r\n\r\n\r\npublic filter(event: any) {\r\n  this.filteredValues = this.suggestions.filter(value => {\r\n    return value.name?.toLowerCase().indexOf(event.query.toLowerCase()) !== -1;\r\n  });\r\n}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./autocomplete.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "templateData": "<section class=\"autocomplete-container\">\r\n  <p-autoComplete [(ngModel)]=\"selectedValue\" \r\n  [suggestions]=\"filteredValues\" \r\n  [dropdown]=\"dropdown\"\r\n  [field]=\"filedName\"\r\n  [multiple]=\"multiple\"\r\n  [minLength]=\"minLength\"\r\n  [maxlength]=\"maxLength\"\r\n  (completeMethod)=\"filter($event)\"\r\n  ></p-autoComplete>\r\n  <ng-template let-object pTemplate=\"item\">\r\n    {{ object.name }}\r\n  </ng-template>\r\n</section>"
        },
        {
            "name": "AvatarComponent",
            "id": "component-AvatarComponent-09880c37ede45ba0d3c3dde1297bc6d0eb1aaf0f776bd0702fb4e87cbe16bf44dac8f30e1849bd6ff3d7924c4e7479d14322cdd90b23c11a63949b70ff84faea",
            "file": "src/stories/components/avatar/avatar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-floatlabel",
            "styleUrls": [
                "./avatar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./avatar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "login",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "shape",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "shapeType",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "letterOfLogin",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\ntype shapeType = \"square\" | \"circle\" | undefined;\r\n@Component({\r\n  selector: 'app-floatlabel',\r\n  templateUrl: './avatar.component.html',\r\n  styleUrls: ['./avatar.component.scss'],\r\n})\r\nexport class AvatarComponent implements OnInit {\r\n  @Input() public login: string =\"\";\r\n  @Input() public size: string = \"\";\r\n  @Input() public shape:shapeType = undefined;\r\n  public letterOfLogin:string = \"\";\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {\r\n   this.letterOfLogin = this.login[0].toUpperCase();\r\n  }\r\n\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./avatar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-avatar\r\npBadge\r\n[label]=\"letterOfLogin\"\r\n[size]=\"size\"\r\n[shape]=\"shape\"\r\nvalue=\"5\"\r\n></p-avatar>"
        },
        {
            "name": "BlogComponent",
            "id": "component-BlogComponent-4003d9ecc74960bbfdc35a3f618e14252b1c1bd1129e535033acfd7c26241b5b3aba376307f46f55dccd1165abbdae08d288a976dacb35da6e270dd55aef626a",
            "file": "src/app/sites/blog/blog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-blog",
            "styleUrls": [
                "./blog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./blog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentPage",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pageSize",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "posts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PostModel[]",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "searchForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "searchIconConfig",
                    "defaultValue": "{\n    iconClassName: \"pi-search\",\n    iconFloat: EnumIconFloat.left\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "inputIconConfig",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "totalRecords",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addNewPost",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "loadDefault",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadPosts",
                    "args": [
                        {
                            "name": "searchData",
                            "type": "PostSearchModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "searchData",
                            "type": "PostSearchModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onPageChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "PageEventModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PageEventModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openPost",
                    "args": [
                        {
                            "name": "post",
                            "type": "PostModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "post",
                            "type": "PostModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "search",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { PostModel, PageEventModel, PostSearchModel } from 'src/app/features/models';\nimport { EnumIconFloat } from 'src/stories/enums/input.enum';\nimport { inputIconConfig } from 'src/stories/interfaces/input.model';\nimport { DialogService, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { NewPostFormComponent } from 'src/app/features/components';\nimport { BlogService } from 'src/app/api';\nimport { AfMessageService, dialogConfig, OneRequiredValidator } from 'src/app/features';\nimport { delay } from 'rxjs';\nimport { PostDetailsComponent } from 'src/app/features/components/post-details/post-details.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DatePipe } from '@angular/common';\n@Component({\n  selector: 'af-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.scss']\n})\nexport class BlogComponent implements OnInit, OnDestroy {\n  public posts: PostModel[];\n  public currentPage: number = 0;\n  public totalRecords: number;\n  public pageSize: number = 5;\n  public searchForm: FormGroup;\n  public searchIconConfig: inputIconConfig = {\n    iconClassName: \"pi-search\",\n    iconFloat: EnumIconFloat.left\n  }\n  private  ref: DynamicDialogRef | undefined;\n\n  constructor(private blogService: BlogService,\n    private formBuilder: FormBuilder,\n    private dialogService: DialogService,\n    private message: AfMessageService) { }\n\n  public ngOnInit(): void {\n    this.initForm();\n    this.loadPosts();  \n  }\n\n  public ngOnDestroy():void {\n    if (this.ref) {\n        this.ref.close();\n    }\n}\n\n  public onPageChange(event: PageEventModel):void {\n    this.currentPage = event.page!;\n    this.pageSize = event.rows!;\n    this.loadPosts();\n  }\n\n  public loadDefault(): void {\n    if (this.searchForm.valid) {\n      this.searchForm.reset();\n      this.searchForm.updateValueAndValidity();\n      this.loadPosts();\n    }\n  }\n\n  public openPost(post: PostModel): void {\n    this.dialogService.open(PostDetailsComponent,{\n      data: post,\n      header: post.title,\n      ...dialogConfig\n    })\n  }\n\n  public search(): void {\n    if (this.searchForm.valid) {\n      this.loadPosts({ ...this.searchForm.value });\n    }\n  }\n\n  public addNewPost(): void {\n    this.ref = this.dialogService.open(NewPostFormComponent, {\n      header: \"Add new Post\",\n      ...dialogConfig\n    })\n    this.ref.onClose.pipe(delay(1000)).subscribe((value) => {\n      if(value){\n      this.message.addSuccesMessage(\"dodano post\");\n      this.loadPosts();\n      }\n    })\n  }\n\n  private loadPosts(searchData?: PostSearchModel): void {\n    this.blogService.getBlogData(this.currentPage + 1, this.pageSize, searchData).subscribe(data => {\n      this.posts = data.posts;\n      this.totalRecords = data.totalRecords;\n    })\n  }\n\n  private initForm(): void {\n    this.searchForm = this.formBuilder.group({\n      title: [null],\n      userName: [null]\n    },{validators: OneRequiredValidator()})\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../stories/constants/constants.scss\";\r\n\r\n.navi-bar {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  z-index: 1001;\r\n}\r\n\r\n.logo {\r\n  display: block;\r\n  margin: 0 auto;\r\n  padding-top: 100px;\r\n  text-align: center;\r\n  height: 40vh;\r\n}\r\n\r\n.blog {\r\n  background-image: url('../../../assets/backgrounds/blogBackgorund.png');\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-attachment: fixed;\r\n\r\n\r\n  &__container {\r\n    max-width: 1357px;\r\n    margin: 0 auto 80px auto;\r\n    min-height: 100vh;\r\n\r\n    &--header {\r\n      @include header-style;\r\n    }\r\n\r\n    &--search {\r\n      margin-top: 40px;\r\n      margin-bottom: 60px;\r\n      &--content{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        height: 100px;\r\n        margin: 0 30px;\r\n        .reset{\r\n          margin-top: 8px;\r\n        }\r\n       .inputs{\r\n        width: 50%;\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        gap:20px;\r\n        margin-right: 10px;\r\n       }\r\n      }\r\n      .buttons{\r\n        width: 40%;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin-top: 8px;\r\n      }\r\n    }\r\n\r\n    &--post {\r\n      cursor: pointer;\r\n      margin-bottom: 60px;\r\n      animation:appear linear;\r\n      animation-timeline: view();\r\n      animation-range: entry 0% cover 15%;\r\n\r\n      &-content {\r\n        display: flex;\r\n      \r\n      \r\n\r\n        &-img {\r\n          img {\r\n            width: 150px;\r\n          }\r\n        }\r\n\r\n        &-text {\r\n          padding: 20px;\r\n\r\n          .header {\r\n            font-size: 24px;\r\n          }\r\n\r\n          .subheader {\r\n            margin-bottom: 10px;\r\n            font-style: italic; \r\n          }\r\n\r\n          .content {\r\n            width: 1100px;\r\n            overflow:hidden; \r\n            white-space:nowrap; \r\n            text-overflow:ellipsis; \r\n            margin-right: 30px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    &--paginator {\r\n      p-paginator::ng-deep {\r\n        .p-paginator {\r\n          padding: 10px 0;\r\n          background: rgba(255, 255, 255, 0.8);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.validoation__container {\r\n  position: fixed;\r\n  top: 90px;\r\n  right:20px;\r\n  }",
                    "styleUrl": "./blog.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "blogService",
                        "type": "BlogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "message",
                        "type": "AfMessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "blogService",
                        "type": "BlogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogService",
                        "type": "DialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "message",
                        "type": "AfMessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<section class=\"blog\">\n    <div class=\"navi-bar\">\n        <af-menuStatic></af-menuStatic>\n    </div>\n    <section class=\"blog__container\">\n        <img class=\"logo\" src=\"../../../assets/logo/logoLightText.svg\" alt=\"logo\">\n        <h2 class=\"blog__container--header\">{{\"blog.posts\" | translate}}</h2>\n        <div class=\"blog__container--search\">\n            <af-tile>\n                <form [formGroup]=\"searchForm\">\n              <div class=\"blog__container--search--content\">\n               <div class=\"reset\">\n                <af-button [label]=\"'blog.search.reset' | translate\" (onClick)=\"loadDefault()\" [fontSize]=\"10\" iconClassName=\"pi-undo\" iconPos=\"top\" [transparentButton]=\"true\"></af-button>\n               </div>\n                <div class=\"inputs\">\n                    <af-input formControlName=\"title\" [iconConfig]=\"searchIconConfig\" [floatLabel]=\"true\" [floatLabelText]=\"'blog.search.title' | translate\"></af-input>\n                    <af-input formControlName=\"userName\" [iconConfig]=\"searchIconConfig\" [floatLabel]=\"true\" [floatLabelText]=\"'blog.search.user' | translate\"></af-input>\n               </div>\n               <div class=\"buttons\">\n                <af-button [label]=\"'blog.search.searchLabel' | translate\" (onClick)=\"search()\"></af-button>\n               <af-button [label]=\"'blog.addPost' | translate\" iconClassName=\"pi pi-plus\" (onClick)=\"addNewPost()\"></af-button>\n               </div>\n              </div>\n            </form>\n            </af-tile>\n        </div>\n        <div *ngFor=\"let post of posts\" class=\"blog__container--post\">\n          <af-tile>\n            <div class=\"blog__container--post-content\" (click)=\"openPost(post)\">\n              <div class=\"blog__container--post-content-img\">\n                <div *ngIf=\"post.photo; else defaultAvatar\" class=\"avatar\">\n                  <img class=\"custom-avatar\" [src]=\"'data:image/jpeg;base64,' + post.photo\" alt=\"Post Photo\" />\n                </div>\n                <ng-template #defaultAvatar>\n                  <img src=\"../../../assets/backgrounds/jedzonko.png\" alt=\"image\">\n                </ng-template>\n              </div>\n              <div class=\"blog__container--post-content-text\">\n                <h4 class=\"header\">{{post.title}}</h4>\n                <p class=\"subheader\">{{\"blog.post.createAt\" | translate}}: {{post.userName}},\n                  {{\"blog.post.date\" | translate}}:\n                  {{post.createdAt ? (post.createdAt | date: 'dd-MM-yyyy hh:mm'): (\"blog.post.someTimeAgo\" | translate) }}\n                </p>\n                <p class=\"content\">{{post.content}}</p>\n              </div>\n            </div>\n          </af-tile>\n        </div>\n        <div class=\"blog__container--paginator\">\n            <p-paginator \n        (onPageChange)=\"onPageChange($event)\" \n        [rows]=\"pageSize\" \n        [totalRecords]=\"totalRecords\"  \n        />\n        </div>\n    </section>\n    <af-footer></af-footer>\n</section>\n<div class=\"validoation__container\">\n    <af-messages [closable]=\"true\"></af-messages>\n</div>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-be57007ed5abb401beafe3d17ca1609decf46603663b1efb8de939822b23aaf00c54327e05eea9e14cb669a7ab2f0a0a791dc4e5692e2469c6ebeff6caa856a9",
            "file": "src/stories/components/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fontSize",
                    "defaultValue": "20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "iconClassName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "ButtonIconPosition",
                    "decorators": []
                },
                {
                    "name": "iconSize",
                    "defaultValue": "20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "transparentButton",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "whiteButton",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "changeFontsize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "changeIconsize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ButtonIconPosition } from 'src/stories/enums/button.enum';\r\n@Component({\r\n  selector: 'af-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ButtonComponent implements AfterViewInit {\r\n  @Input() public label: string = '';\r\n  @Input() public iconClassName: string = '';\r\n  @Input() public iconPos: ButtonIconPosition = 'left';\r\n  @Input() public fontSize: number = 20;\r\n  @Input() public iconSize: number = 20;\r\n  @Input() public buttonId: string = '';\r\n  @Input() public disabled: boolean = false;\r\n  @Input() public whiteButton: boolean = false;\r\n  @Input() public transparentButton: boolean = false;\r\n  @Output() onClick: EventEmitter<void> = new EventEmitter();\r\n\r\n  constructor() {\r\n  }\r\n  public ngAfterViewInit(): void {\r\n    if(!!this.buttonId){\r\n    setTimeout(()=>{\r\n      this.changeFontsize();\r\n      this.changeIconsize();\r\n    });\r\n    }\r\n  }\r\n\r\n  public click(): void {\r\n    this.onClick.emit();\r\n  }\r\n  public changeFontsize():void {\r\n   const element: HTMLElement= document.querySelector(`.${this.buttonId} p-button button.p-button span.p-button-label`) as HTMLElement;\r\n   element.style.fontSize = this.fontSize + \"px\";\r\n  };\r\n\r\n  public changeIconsize():void {\r\n    const element: HTMLElement= document.querySelector(`.${this.buttonId} p-button button.p-button span.p-button-icon`) as HTMLElement;\r\n    element.style.fontSize = this.iconSize + \"px\";\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../constants/constants.scss\";\r\n\r\n.button__container {\r\n  .button__content {\r\n    ::ng-deep .p-button {\r\n      background-color: $darker-gray;\r\n      border-color: transparent;\r\n      box-shadow: 0 0 8px 1px $darker-gray;\r\n      font-family: $font-family;\r\n      font-weight: $font-weight-bold;\r\n      border-radius: 14px;\r\n      padding: 10px 40px;\r\n      transition: .2s;\r\n\r\n      .p-button-icon-top {\r\n        margin-bottom: 0.5rem;\r\n      }\r\n\r\n      .p-button-icon-bottom {\r\n        margin-top: 0.5rem;\r\n      }\r\n\r\n      .p-button-icon-left {\r\n        margin-right: 0.5rem;\r\n        margin-bottom: 2px;\r\n      }\r\n\r\n      .p-button-icon-right {\r\n        margin-left: 0.5rem;\r\n      }\r\n\r\n      .p-button-label {\r\n        transition-duration: 0s;\r\n      }\r\n\r\n      &:hover {\r\n        color: $input-main-color;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  .transparent-button {\r\n    ::ng-deep .p-button {\r\n      background-color: transparent;\r\n      box-shadow: none;\r\n      color: $input-main-color;\r\n      padding: 0;\r\n      border-radius: 0;\r\n    }\r\n\r\n  }\r\n\r\n  .white-button {\r\n    ::ng-deep .p-button {\r\n      background-color: $background-light;\r\n      border-color: transparent;\r\n      box-shadow: none;\r\n      font-family: $font-family;\r\n      font-weight: $font-weight-bold;\r\n      border-radius: 14px;\r\n      padding: 10px 40px;\r\n      transition: .2s;\r\n      color: $darker-gray;\r\n\r\n      .p-button-label {\r\n        transition-duration: 0s;\r\n      }\r\n\r\n      &:hover {\r\n        color: $input-main-color;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n}",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<section class=\"button__container\" [ngClass]=\"buttonId ? buttonId:''\">\r\n    <p-button \r\n    class=\"button__content\"\r\n    [ngClass]=\"{'transparent-button':transparentButton,\r\n    'white-button': whiteButton}\"\r\n      [label]=\"label.toUpperCase()\"\r\n      [iconPos]=\"iconPos\"\r\n      [icon]=\"'pi ' + iconClassName\"\r\n      (click)=\"click()\"\r\n      [disabled]=\"disabled\"\r\n      >\r\n    </p-button>\r\n  </section>"
        },
        {
            "name": "CalendarComponent",
            "id": "component-CalendarComponent-36f172e7e44cae50ce925e80ab2ad79fd05f9a0bea81ec2e13e9e47797f52a9afe867b13b555aa3e4b98fcf452c0645476d1c1991975476b9dd17c17246429f4",
            "file": "src/stories/components/calendar/calendar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-calendar",
            "styleUrls": [
                "./calendar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./calendar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "Date | undefined",
                    "decorators": []
                },
                {
                    "name": "readonlyInput",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showButtonBar",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showSeconds",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showTime",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'af-calendar',\r\n  templateUrl: './calendar.component.html',\r\n  styleUrls: ['./calendar.component.scss']\r\n})\r\nexport class CalendarComponent {\r\n  @Input() public date: Date | undefined;\r\n  @Input() public showIcon: boolean = false;\r\n  @Input() public showButtonBar: boolean = false;\r\n  @Input() public readonlyInput: boolean = false;\r\n  @Input() public showTime: boolean = false;\r\n  @Input() public showSeconds: boolean = false;\r\n  constructor(){}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./calendar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "templateData": "<section>\r\n    <p-calendar\r\n    [(ngModel)]=\"date\"\r\n    [showIcon]=\"showIcon\"\r\n    [showButtonBar]=\"showButtonBar\"\r\n    [readonlyInput]=\"readonlyInput\"\r\n    [showTime]=\"showTime\"\r\n    [showSeconds]=\"showSeconds\"\r\n    >Basic</p-calendar>\r\n</section>\r\n\r\n\r\n\r\n    "
        },
        {
            "name": "ChartBarsComponent",
            "id": "component-ChartBarsComponent-418b8c68ab1a7dd18f2f240a1413a7c86bec529ce574d2e80d5afb29316dc5004f54f2d07fd705a4a9c2167274c654cd00e9316003070aa824b186a28724880a",
            "file": "src/stories/components/chart-bars/chart-bars.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-chartBars",
            "styleUrls": [
                "./chart-bars.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chart-bars.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "ChartBarsType | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { ChartBarsType } from 'src/stories/interfaces/chartBars.model';\r\n\r\n@Component({\r\n  selector: 'af-chartBars',\r\n  templateUrl: './chart-bars.component.html',\r\n  styleUrls: ['./chart-bars.component.scss']\r\n})\r\nexport class ChartBarsComponent implements OnInit {\r\n@Input() public type: ChartBarsType | undefined;\r\n@Input() public data: any;\r\n@Input() public options: any;\r\n\r\n  constructor(){\r\n\r\n  }\r\n public ngOnInit() {\r\n    const documentStyle = getComputedStyle(document.documentElement);\r\n    const textColor = \"blue\";\r\n    const textColorSecondary = \"red\";\r\n    const surfaceBorder = \"green\";\r\n\r\n    this.data = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [\r\n            {\r\n                label: 'First Dataset',\r\n                data: [65, 59, 80, 81, 56, 55, 40],\r\n                fill: false,\r\n                borderColor: \"red\",\r\n                tension: 0.4\r\n            },\r\n            {\r\n                label: 'Second Dataset',\r\n                data: [28, 48, 40, 19, 86, 27, 90],\r\n                fill: false,\r\n                borderColor: \"blue\",\r\n                tension: 0.4\r\n            }\r\n        ]\r\n    };\r\n\r\n    this.options = {\r\n        maintainAspectRatio: false,\r\n        aspectRatio: 0.6,\r\n        plugins: {\r\n            legend: {\r\n                labels: {\r\n                    color: textColor\r\n                }\r\n            }\r\n        },\r\n        scales: {\r\n            x: {\r\n                ticks: {\r\n                    color: textColorSecondary\r\n                },\r\n                grid: {\r\n                    color: surfaceBorder,\r\n                    drawBorder: false\r\n                }\r\n            },\r\n            y: {\r\n                ticks: {\r\n                    color: textColorSecondary\r\n                },\r\n                grid: {\r\n                    color: surfaceBorder,\r\n                    drawBorder: false\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./chart-bars.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"chartBars-container\">\r\n    <p-chart type=\"bar\" [data]=\"data\" [options]=\"options\"></p-chart>\r\n</section>"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-ba56c95bbafc55c6bdac77f5d420c407c23028f73ca7527626008f0608ca86f764d129d1b270381d640f3d7207dda7c0704cc2129de69ecc508934bcc878b621",
            "file": "src/stories/components/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "checkedToggler",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "checkedTogglerEmiter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'af-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss']\r\n})\r\nexport class CheckboxComponent {\r\n\r\n  \r\n  @Input() public label: string = \"\";\r\n  @Input() public disabled: boolean = false;\r\n  @Output() public checkedToggler: EventEmitter<boolean> = new EventEmitter();\r\n  public checked: boolean = false;\r\n  constructor() {\r\n  }\r\n\r\n  public checkedTogglerEmiter():void{\r\n    this.checkedToggler.emit(this.checked);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../constants/constants.scss\";\r\n\r\n.checkbox--container{\r\n    ::ng-deep p-checkbox {\r\n        .p-checkbox{\r\n            &-box{\r\n               border: 2px solid $input-main-color !important;\r\n            }\r\n        }\r\n        .p-highlight{\r\n            background-color: $input-main-color !important;\r\n        }\r\n        .p-focus{\r\n            box-shadow: none !important;\r\n        }\r\n        .p-checkbox-label {\r\n            margin-left: 0.5rem;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "templateData": "<section class=\"checkbox--container\">\r\n    <p-checkbox \r\n    (onChange)=\"checkedTogglerEmiter()\"\r\n    [(ngModel)]=\"checked\" \r\n    [binary]=\"true\" \r\n    [disabled]=\"disabled\"\r\n    [label]=\"label\">\r\n    </p-checkbox>\r\n</section>"
        },
        {
            "name": "DietsComponent",
            "id": "component-DietsComponent-f592eafb111ca6731b096eeb04d2ff94999abbe35a97f488388834e91ecf4e0f37a8daca991b8874ae2284b5431a4e1f29dc6f54375a4c4b5a909cce4d8d2e9e",
            "file": "src/app/sites/profile/diets/diets.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-diets",
            "styleUrls": [
                "./diets.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./diets.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-diets',\n  templateUrl: './diets.component.html',\n  styleUrls: ['./diets.component.scss']\n})\nexport class DietsComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./diets.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>diets works!</p>\n"
        },
        {
            "name": "DropdownComponent",
            "id": "component-DropdownComponent-1df17dc3b60a7fe225d19a76f241d840e3601f5e0817a6207fb9a29f26904d97da297abf796db46d17e936198cf30aab051df2abf218995cd66549c0aa01fb86",
            "file": "src/stories/components/dropdown/dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-dropdown",
            "styleUrls": [
                "./dropdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "filter",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "filterName",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "floatText",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isFloatlabel",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "optionLabelName",
                    "defaultValue": "\"name\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showClear",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "virtualScroll",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "virtualScrollItemSize",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'af-dropdown',\r\n  templateUrl: './dropdown.component.html',\r\n  styleUrls: ['./dropdown.component.scss']\r\n})\r\nexport class DropdownComponent {\r\n  @Input() public optionLabelName:string = \"name\";\r\n  @Input() public showClear:boolean = false;\r\n  @Input() public filter:boolean = false;\r\n  @Input() public virtualScroll:boolean = false;\r\n  @Input() public isFloatlabel:boolean = false;\r\n  @Input() public disabled:boolean = false;\r\n  @Input() public placeholder: string = \"\";\r\n  @Input() public floatText: string = \"\";\r\n  @Input() public filterName: string = \"\";\r\n  @Input() public virtualScrollItemSize: number = 1;\r\n  @Input() public data:any;\r\n  public selected:any;\r\n  constructor(){}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dropdown.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "templateData": "<div *ngIf=\"!isFloatlabel\">\n  <p-dropdown [(ngModel)]=\"selected\" \n  [options]=\"data\" \n  [optionLabel]=\"optionLabelName\" \n[placeholder]=\"placeholder\" \n[filter]=\"filter\" \n[filterBy]=\"filterName\" \n[showClear]=\"showClear\"\n[virtualScroll]=\"virtualScroll\" \n[virtualScrollItemSize]=\"virtualScrollItemSize\" \n[disabled]=\"disabled\">\n\n  </p-dropdown>\n</div>\n<div *ngIf=\"isFloatlabel\">\n  <span class=\"p-float-label\">\n    <p-dropdown [(ngModel)]=\"selected\" \n  [options]=\"data\" \n  [optionLabel]=\"optionLabelName\" \n[placeholder]=\"placeholder\" \n[filter]=\"filter\" \n[filterBy]=\"filterName\" \n[showClear]=\"showClear\"\n[virtualScroll]=\"virtualScroll\" \n[virtualScrollItemSize]=\"virtualScrollItemSize\" \n[disabled]=\"disabled\">\n\n  </p-dropdown>\n    <label for=\"float-label\">{{floatText}}</label>\n  </span>\n</div>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-0e1d6a4434a0eaf9fec802b105517b44614810503cd507301865a0b87bf117838a354314736896140e3b08aa56b7ca72cd57eec94568553cdbec24e7ff1ce04c",
            "file": "src/stories/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'af-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent {\r\nconstructor(private translateService: TranslateService){\r\n  this.translateService.setDefaultLang(sessionStorage.getItem(\"language\") || (\"en\"));\r\n}\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../constants/constants.scss\";\r\n\r\n.footer__container {\r\n  background-color: $darker-gray;\r\n  font-family: $font-family;\r\n  color: $input-main-color;\r\n  font-size: 16px;\r\n  display: flex;\r\n  justify-content: center;\r\n  box-shadow: 0px 0px 32px 16px rgba(34, 40, 49, 0.75);\r\n  box-sizing: border-box;\r\n}\r\n\r\n.footer__content {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 75px;\r\n  padding: 80px 0;\r\n  max-width: 1530px;\r\n  margin: 20px;\r\n\r\n  &--info {\r\n    max-width: 230px;\r\n  }\r\n\r\n  &--contact {\r\n    text-align: center;\r\n\r\n    p {\r\n      max-width: 160px;\r\n      overflow-wrap: normal;\r\n    }\r\n  }\r\n\r\n  &--social-media {\r\n    text-align: center;\r\n\r\n    .links {\r\n      margin: 20px 0;\r\n\r\n      a {\r\n        text-decoration: none;\r\n        color: $input-main-color;\r\n\r\n        i {\r\n          font-size: 40px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &--links {\r\n    text-align: center;\r\n\r\n    .links {\r\n      margin-top: 45px;\r\n\r\n      a {\r\n        text-decoration: none;\r\n        color: $input-main-color;\r\n      }\r\n    }\r\n  }\r\n\r\n  &--map {\r\n    text-align: center;\r\n\r\n    &__content {\r\n      max-width: 500px;\r\n      width: 500px;\r\n      height: 180px;\r\n\r\n      iframe {\r\n        border: 0;\r\n        border-radius: 15px;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.footer_header {\r\n  color: $input-background-color;\r\n  font-weight: $font-weight-bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n@media (orientation:portrait) and (max-width: 1280px) {\r\n  .footer__content {\r\n    padding: 20px;\r\n    margin: 20px;\r\n    gap: 20px;\r\n    flex-wrap: wrap;\r\n    flex-direction: row;\r\n    align-items: flex-start;\r\n    width: 100%;\r\n\r\n    &--info {\r\n      width: 100%;\r\n      max-width: none;\r\n      text-align: center;\r\n\r\n      p {\r\n        margin: 0 auto;\r\n        max-width: 80%;\r\n      }\r\n    }\r\n\r\n    &--contact {\r\n      justify-self: baseline;\r\n      width: 25%;\r\n\r\n      p {\r\n        text-align: left;\r\n        max-width: 500px;\r\n        overflow-wrap: normal;\r\n        padding-bottom: 20px;\r\n      }\r\n    }\r\n\r\n    &--social-media {\r\n      display: block;\r\n      width: 25%;\r\n\r\n      .links {\r\n        display: block;\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n        margin: 0;\r\n        padding-bottom: 20px;\r\n      }\r\n\r\n      .icon {\r\n        width: 40px;\r\n        height: 40px;\r\n      }\r\n    }\r\n\r\n    &--links {\r\n      display: block;\r\n      width: 25%;\r\n\r\n      .links {\r\n        display: block;\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n        margin: 20px 0;\r\n\r\n        a {\r\n          margin: 0 10px;\r\n        }\r\n      }\r\n    }\r\n\r\n    &--map {\r\n      text-align: center;\r\n      width: calc(80% - 20px);\r\n      max-width: none;\r\n\r\n      &__content {\r\n        max-width: none;\r\n        width: 100%;\r\n        height: 180px;\r\n\r\n        iframe {\r\n          border: 0;\r\n          border-radius: 15px;\r\n          width: 100%;\r\n          height: 100%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@media (orientation:portrait) and (max-width: 500px) {\r\n  .footer__content {\r\n    &--contact {\r\n      width: 100%;\r\n\r\n      p {\r\n        text-align: center;\r\n      }\r\n    }\r\n\r\n    &--social-media {\r\n      width: 100%;\r\n\r\n      .links {\r\n        display: inline;\r\n        padding: 20px;\r\n\r\n        a {\r\n          display: inline;\r\n          margin: 0 auto;\r\n        }\r\n      }\r\n\r\n      .icon {\r\n        display: block;\r\n        margin: 0 auto;\r\n        width: 30px;\r\n        height: 30px;\r\n      }\r\n    }\r\n\r\n    &--links {\r\n      display: block;\r\n      width: 100%;\r\n\r\n      .links {\r\n        display: inline;\r\n        justify-content: center;\r\n        margin: 20px 0;\r\n\r\n        a {\r\n          margin: 0 10px;\r\n        }\r\n      }\r\n    }\r\n\r\n    &--map {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n\r\n@media (orientation:landscape) and (max-width: 1280px){\r\n  .footer__content {\r\n    padding: 20px;\r\n    margin: 20px;\r\n    gap: 20px;\r\n    flex-wrap: wrap;\r\n    flex-direction: row;\r\n    align-items: flex-start;\r\n    width: 100%;\r\n\r\n    &--info {\r\n      width: 100%;\r\n      max-width: none;\r\n      text-align: center;\r\n\r\n      p {\r\n        margin: 0 auto;\r\n        max-width: 80%;\r\n      }\r\n    }\r\n\r\n    &--contact {\r\n      justify-self: baseline;\r\n      width: 25%;\r\n\r\n      p {\r\n        text-align: left;\r\n        max-width: 500px;\r\n        overflow-wrap: normal;\r\n        padding-bottom: 20px;\r\n      }\r\n    }\r\n\r\n    &--social-media {\r\n      display: block;\r\n      width: 25%;\r\n\r\n      .links {\r\n        display: block;\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n        margin: 0;\r\n        padding-bottom: 20px;\r\n      }\r\n\r\n      .icon {\r\n        width: 40px;\r\n        height: 40px;\r\n      }\r\n    }\r\n\r\n    &--links {\r\n      display: block;\r\n      width: 25%;\r\n\r\n      .links {\r\n        display: block;\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n        margin: 20px 0;\r\n\r\n        a {\r\n          margin: 0 10px;\r\n        }\r\n      }\r\n    }\r\n\r\n    &--map {\r\n      text-align: center;\r\n      width: calc(80% - 20px);\r\n      max-width: none;\r\n\r\n      &__content {\r\n        max-width: none;\r\n        width: 100%;\r\n        height: 180px;\r\n\r\n        iframe {\r\n          border: 0;\r\n          border-radius: 15px;\r\n          width: 100%;\r\n          height: 100%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<section class=\"footer__container\">\r\n  <div class=\"footer__content\">\r\n    <div class=\"footer__content--info\">\r\n      <h3 class=\"footer_header\">\r\n        {{\"footer.header\"| translate}}\r\n      </h3>\r\n      <p>{{\"footer.info\" | translate}} </p>\r\n    </div>\r\n    <div class=\"footer__content--contact\">\r\n      <h3 class=\"footer_header\">\r\n        {{\"footer.contact\" | translate}}\r\n      </h3>\r\n      <p class=\"footer__content--contact__addres\">{{\"footer.address\"| translate}}</p>\r\n      <p class=\"footer__content--contact__email\"> {{\"footer.mail\"| translate}} <br>\r\n        {{\"footer.constant.email\"| translate}}</p>\r\n      <p class=\"footer__content--contact__phone\">{{\"footer.phone\"| translate}} <br>\r\n        {{\"footer.constant.firstPhoneNumber\"| translate}} <br>\r\n        {{\"footer.constant.secondPhoneNumber\"| translate}}\r\n      </p>\r\n    </div>\r\n    <div class=\"footer__content--social-media\">\r\n      <h3 class=\"footer_header\">\r\n        {{\"footer.socialMedia\"| translate}}\r\n      </h3>\r\n      <div class=\"links\">\r\n        <a href=\"https://www.facebook.com/\"><i class=\"pi pi-facebook\"></i></a>\r\n      </div>\r\n      <div class=\"links\">\r\n        <a href=\"https://www.instagram.com/\"><i class=\"pi pi-instagram\"></i></a>\r\n      </div>\r\n      <div class=\"links\">\r\n        <a href=\"https://twitter.com/\"><i class=\"pi pi-twitter\"></i></a>\r\n      </div>\r\n    </div>\r\n    <div class=\"footer__content--links\">\r\n      <h3 class=\"footer_header\">\r\n        {{\"footer.links\"| translate}}\r\n      </h3>\r\n      <div class=\"links\">\r\n        <a href=\"#\">{{\"footer.statute\"| translate}}</a>\r\n      </div>\r\n      <div class=\"links\">\r\n        <a href=\"#\">{{\"footer.faq\"| translate}}</a>\r\n      </div>\r\n    </div>\r\n    <div class=\"footer__content--map\">\r\n      <h3 class=\"footer_header\">\r\n        {{\"footer.location\"| translate}}\r\n      </h3>\r\n      <div class=\"footer__content--map__content\">\r\n        <iframe src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d9992.252350543244!2d22.500818!3d51.236333!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x4722583469e163c1%3A0xcd2340f2a6afcce4!2sWydzia%C5%82%20Nauk%20Przyrodniczych%20i%20Technicznych%20KUL!5e0!3m2!1spl!2spl!4v1729857584035!5m2!1spl!2spl\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>"
        },
        {
            "name": "GymPassComponent",
            "id": "component-GymPassComponent-d95147da0589dd214eee1ad7e411bd0c7e541a21fa71e06e89da7b1a253835b51af35f2956bc810e9f43bb6dc48984cd9874627cf2ae8343d8ecf73577cf9542",
            "file": "src/app/sites/gym-pass/gym-pass.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-gym-pass",
            "styleUrls": [
                "./gym-pass.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gym-pass.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { GymPassesService } from 'src/app/api';\r\nimport { GymPassModel } from 'src/app/features/models';\r\n\r\n@Component({\r\n  selector: 'app-gym-pass',\r\n  templateUrl: './gym-pass.component.html',\r\n  styleUrls: ['./gym-pass.component.scss']\r\n})\r\nexport class GymPassComponent  {\r\n  constructor(private gymPassesService:GymPassesService){\r\n    this.gymPassesService.getGymPasses();\r\n  }\r\n\r\n  public get gymPasses(): GymPassModel[]{\r\n    return this.gymPassesService.gymPasses\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../stories/constants/constants.scss\";\r\n\r\n.gym-pass-page {\r\n  min-height: 100vh;\r\n  background-image: url('../../../assets/backgrounds/AF-desktop-main-background.png');\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-attachment: fixed;\r\n\r\n  .navi-bar {\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    left: 0;\r\n    z-index: 1001;\r\n  }\r\n\r\n  .gym-pass__container {\r\n    min-height: 100vh;\r\n    margin-bottom: 50px;\r\n\r\n    &--header {\r\n      &-logo {\r\n        padding-top: 100px;\r\n        text-align: center;\r\n        height: 40vh;\r\n\r\n        img {\r\n          height: 270px;\r\n\r\n        }\r\n      }\r\n\r\n      &-text {\r\n        @include header-style;\r\n      }\r\n    }\r\n\r\n    .gym-pass-cards {\r\n      margin-top: 40px;\r\n      display: flex;\r\n      justify-content: center;\r\n      gap: 20px;\r\n\r\n      .gym-pass-card {\r\n        height: 75vh;\r\n        width: 32%;\r\n      }\r\n    }\r\n\r\n    &--gym-pass {\r\n      margin: 0 auto;\r\n      max-width: 1205px;\r\n      font-weight: $font-weight-bold;\r\n    }\r\n  }\r\n}\r\n\r\n.quotes {\r\n  color: $input-text-light;\r\n}\r\n\r\n@media (orientation: landscape) and (max-width: 1024px) {\r\n  .gym-pass-page {\r\n    .navi-bar {}\r\n\r\n    .gym-pass__container {\r\n      &--header {\r\n        &-logo {\r\n\r\n          img {\r\n            height: 220px;\r\n          }\r\n        }\r\n\r\n        &-text {\r\n          font-size: 77px;\r\n          margin-bottom: 10px;\r\n        }\r\n      }\r\n\r\n      .gym-pass-cards {\r\n        max-width: 968px;\r\n        margin: 0 auto;\r\n\r\n        .gym-pass-card {\r\n          height: 95vh;\r\n        }\r\n      }\r\n\r\n      &--gym-pass {\r\n        margin: 0 auto;\r\n        max-width: 968px;\r\n\r\n        h2 {\r\n          color: $input-main-color;\r\n          font-size: 82px;\r\n          margin: 90px 0;\r\n        }\r\n\r\n        &__info {\r\n          display: flex;\r\n          gap: 15px;\r\n          margin-bottom: 20px;\r\n\r\n          &-text {\r\n            padding: 20px;\r\n\r\n            p {\r\n              text-indent: 20px;\r\n              margin-bottom: 10px;\r\n              font-size: 15px;\r\n            }\r\n          }\r\n\r\n          &-price {\r\n\r\n            height: 100%;\r\n\r\n            p:first-of-type {\r\n              color: $input-text-accent;\r\n              font-size: 82px;\r\n            }\r\n\r\n            p:last-of-type {\r\n              color: $input-text-accent;\r\n              font-size: 26px;\r\n            }\r\n          }\r\n\r\n          af-tile {\r\n            width: 290px;\r\n            height: 290px;\r\n\r\n            ::ng-deep .tile_container {\r\n              height: 290px;\r\n            }\r\n          }\r\n        }\r\n\r\n        &__details {\r\n          padding: 30px 50px;\r\n\r\n          p {\r\n            font-size: 16px;\r\n          }\r\n        }\r\n\r\n        &-health {\r\n          margin-bottom: 100px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
                    "styleUrl": "./gym-pass.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "gymPassesService",
                        "type": "GymPassesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "gymPassesService",
                        "type": "GymPassesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "gymPasses": {
                    "name": "gymPasses",
                    "getSignature": {
                        "name": "gymPasses",
                        "type": "[]",
                        "returnType": "GymPassModel[]",
                        "line": 16
                    }
                }
            },
            "templateData": "<section class=\"gym-pass-page\">\r\n    <div class=\"navi-bar\">\r\n        <af-menuStatic></af-menuStatic>\r\n    </div>\r\n    <section class=\"gym-pass__container\" *ngIf=\"gymPasses\">\r\n        <div class=\"gym-pass__container--header\">\r\n            <div class=\"gym-pass__container--header-logo\">\r\n                <img src=\"../../../assets/logo/logoLightText.svg\" alt=\"logo\">\r\n            </div>\r\n            <h2 class=\"gym-pass__container--header-text\">{{\"MenuPage.passes\" | translate}}</h2>\r\n        </div>\r\n        <div class=\"gym-pass__container--gym-passes\" >\r\n            <div class=\"gym-pass-cards\">\r\n                <ng-container *ngFor=\"let gymPass of gymPasses\">\r\n                    <div class=\"gym-pass-card\">\r\n                    <af-gym-pass-card \r\n                    [title]=\"('gymPass.' + gymPass.name+'Pass' + '.header') | translate\"\r\n                    [subtitle]=\"'gymPass.' + gymPass.name+'Pass' + '.subtitle' | translate\" \r\n                    [price]=\"gymPass.price + 'zł'\"\r\n                    [name]=\"gymPass.name\" \r\n                    [buttonId]=\"gymPass.name\">\r\n                  </af-gym-pass-card>\r\n                </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <div class=\"gym-pass__container--gym-pass\">\r\n            <ng-container *ngFor=\"let gymPass of gymPasses\">\r\n                <af-gym-pass-info\r\n                [title]=\"('gymPass.' + gymPass.name+'Pass' + '.labelHeader') | translate\"\r\n                [price]=\"gymPass.price\"\r\n                [buttonId]=\"gymPass.name\"\r\n                [label1]=\"('gymPass.' + gymPass.name+'Pass' + '.label1') | translate\"\r\n                [label2]=\"('gymPass.' + gymPass.name+'Pass' + '.label2') | translate\"\r\n                ></af-gym-pass-info>\r\n            </ng-container>\r\n        </div>\r\n    </section>\r\n    <af-footer></af-footer>\r\n</section>"
        },
        {
            "name": "GymPassesComponent",
            "id": "component-GymPassesComponent-694ef25a6b7ceaf00bee000777c73b8733cbaa4ec2340b26d06f8454af6a155ec89d6d82b391edcad7c25a28ba62b4aa88a543003b083e843bd57816cafe9ee7",
            "file": "src/app/sites/profile/gym-passes/gym-passes.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-gym-passes",
            "styleUrls": [
                "./gym-passes.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gym-passes.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "changeGymPass",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getGymPasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GymPassesService, ProfileService } from 'src/app/api';\nimport { GymPassModel, userDataModel } from 'src/app/features/models';\n\n@Component({\n  selector: 'app-gym-passes',\n  templateUrl: './gym-passes.component.html',\n  styleUrls: ['./gym-passes.component.scss']\n})\nexport class GymPassesComponent {\n  constructor(\n    private profileService: ProfileService,\n    private gymPassesService: GymPassesService\n    ){}\n  \n    public ngOnInit(): void {\n      this.getGymPasses();\n    }\n\n    public changeGymPass(): void {\n      \n    }\n\n    private getGymPasses(): void{\n      if(this.gymPassesService.gymPasses.length == 0){\n        this.gymPassesService.getGymPasses();\n      }\n      \n    }\n\n    public get userData(): userDataModel {\n      return this.profileService.userData;\n    }\n\n    public get gymPasses(): GymPassModel[]{\n      return this.gymPassesService.gymPasses;\n    }\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../stories/constants/constants.scss\";\r\n\r\n.active-pass{\r\n    height: 80%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    p {\r\n        color: $input-text-dark;\r\n        font-weight: $font-weight-bold;\r\n        font-size: 42px;\r\n        text-align: center;\r\n        margin-bottom:30px ;\r\n        .active-pass-name{\r\n            color: $input-main-color;\r\n        }\r\n       \r\n    }\r\n    &-inactive{\r\n        color: red;\r\n    }\r\n    .gym-pass-cards{\r\n        display: flex;\r\n\r\n        width: 100%;\r\n        gap: 30px;\r\n       .gym-pass-card{\r\n        width: 30%;\r\n       }\r\n    }\r\n}\r\n\r\n.no-active-pass {\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 20px;\r\n    p {\r\n        font-size: 54px;\r\n        font-weight: $font-weight-bold;\r\n        &.change-gyp-pass-button{\r\n            cursor: pointer;\r\n            color: $input-text-dark;\r\n            font-weight: $font-weight-bold;\r\n        }\r\n    }\r\n\r\n}",
                    "styleUrl": "./gym-passes.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "profileService",
                        "type": "ProfileService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "gymPassesService",
                        "type": "GymPassesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "profileService",
                        "type": "ProfileService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "gymPassesService",
                        "type": "GymPassesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "userData": {
                    "name": "userData",
                    "getSignature": {
                        "name": "userData",
                        "type": "",
                        "returnType": "userDataModel",
                        "line": 32
                    }
                },
                "gymPasses": {
                    "name": "gymPasses",
                    "getSignature": {
                        "name": "gymPasses",
                        "type": "[]",
                        "returnType": "GymPassModel[]",
                        "line": 36
                    }
                }
            },
            "templateData": "\n  <div class=\"active-pass\">\n    <p>Your active gym pass: <span class=\"active-pass-name\" *ngIf=\"!userData.activeGymPass; else noActivePass\">{{('gymPass.' + userData.gympassName+'Pass' + '.header') | translate }}</span></p>\n    <div class=\"gym-pass-cards\">\n      <ng-container *ngFor=\"let gymPass of gymPasses\">\n        <div class=\"gym-pass-card\">\n          <af-gym-pass-card \n            [title]=\"('gymPass.' + gymPass.name+'Pass' + '.header') | translate\"\n            [subtitle]=\"'gymPass.' + gymPass.name+'Pass' + '.subtitle' | translate\" \n            [price]=\"gymPass.price + 'zł'\"\n            [name]=\"gymPass.name\" \n            [buttonId]=\"gymPass.name\"\n            [smallerCard]=\"true\"></af-gym-pass-card>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n\n<ng-template #noActivePass>\n    <span class=\"active-pass-inactive\">no active gym pass</span>\n  </ng-template>\n"
        },
        {
            "name": "GymPassInfoComponent",
            "id": "component-GymPassInfoComponent-fd7f5fbe6d26f26087864a92ed91084e509f4be70423894fbdc17bbbcad7c08c37be2fe63bc747303504007191670882742c8df8196666276ca495377f6b9f0c",
            "file": "src/stories/components/gym-pass-info/gym-pass-info.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-gym-pass-info",
            "styleUrls": [
                "./gym-pass-info.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gym-pass-info.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "routeToGymPasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"af-gym-pass-info\",\n  templateUrl: \"./gym-pass-info.component.html\",\n  styleUrls: [\"./gym-pass-info.component.scss\"]\n})\nexport class GymPassInfoComponent {\n @Input() title: string;\n@Input() label1: string;\n@Input() label2: string;\n@Input() price: number;\n@Input() buttonId: string;\n\nconstructor(private router: Router){}\n\npublic routeToGymPasses(): void  {\n  this.router.navigate([\"profile/gym-pass\"]);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../constants/constants.scss\";\r\n\r\n.gym-pass {\r\n  margin: 0 auto;\r\n  max-width: 1205px;\r\n  font-weight: $font-weight-bold;\r\n\r\n  h2 {\r\n    text-align: center;\r\n    color: $input-main-color;\r\n    font-size: 92px;\r\n    margin: 100px 0;\r\n    text-shadow: 1px 1px 3px $background-dark;\r\n  }\r\n\r\n  &__info {\r\n    display: flex;\r\n    gap: 20px;\r\n    margin-bottom: 20px;\r\n\r\n    &-text {\r\n      padding: 20px;\r\n\r\n      p {\r\n        text-indent: 20px;\r\n        margin-bottom: 10px;\r\n        font-size: 18px;\r\n      }\r\n    }\r\n\r\n    &-price {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      flex-direction: column;\r\n      height: 100%;\r\n\r\n      p:first-of-type {\r\n        color: $input-text-accent;\r\n        font-size: 92px;\r\n      }\r\n\r\n      p:last-of-type {\r\n        color: $input-text-accent;\r\n        font-size: 32px;\r\n      }\r\n    }\r\n\r\n    af-tile {\r\n      width: 290px;\r\n      height: 290px;\r\n\r\n      ::ng-deep .tile_container {\r\n        height: 290px;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__details {\r\n    padding: 30px 50px;\r\n\r\n    p {\r\n      margin-bottom: 10px;\r\n      font-size: 18px;\r\n    }\r\n  }\r\n\r\n  &-health {\r\n    margin-bottom: 100px;\r\n  }\r\n}\r\n\r\n@media (orientation: landscape) and (max-width: 1024px) {\r\n\r\n  .gym-pass {\r\n    margin: 0 auto;\r\n    max-width: 968px;\r\n\r\n    h2 {\r\n      color: $input-main-color;\r\n      font-size: 82px;\r\n      margin: 90px 0;\r\n    }\r\n\r\n    &__info {\r\n      display: flex;\r\n      gap: 15px;\r\n      margin-bottom: 20px;\r\n\r\n      &-text {\r\n        padding: 20px;\r\n\r\n        p {\r\n          text-indent: 20px;\r\n          margin-bottom: 10px;\r\n          font-size: 15px;\r\n        }\r\n      }\r\n\r\n      &-price {\r\n\r\n        height: 100%;\r\n\r\n        p:first-of-type {\r\n          color: $input-text-accent;\r\n          font-size: 82px;\r\n        }\r\n\r\n        p:last-of-type {\r\n          color: $input-text-accent;\r\n          font-size: 26px;\r\n        }\r\n      }\r\n\r\n      af-tile {\r\n        width: 290px;\r\n        height: 290px;\r\n\r\n        ::ng-deep .tile_container {\r\n          height: 290px;\r\n        }\r\n      }\r\n    }\r\n\r\n    &__details {\r\n      padding: 30px 50px;\r\n      p {\r\n        font-size: 16px;\r\n      }\r\n    }\r\n    \r\n    &-health {\r\n      margin-bottom: 100px;\r\n    }\r\n  }\r\n}",
                    "styleUrl": "./gym-pass-info.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"gym-pass\">\n  <h2>{{title }}</h2>\n  <div class=\"gym-pass__info\">\n    <af-tile>\n      <div class=\"gym-pass__info-text\">\n        <p>{{ label1 }}</p>\n      </div>\n    </af-tile>\n    <af-tile [darkMode]=\"true\">\n      <div class=\"gym-pass__info-price\">\n        <p>{{price}}</p>\n        <p>zł / msc</p>\n      </div>\n    </af-tile>\n    <af-tile [darkMode]=\"true\"></af-tile>\n    <af-tile [darkMode]=\"true\">\n      <div style=\"display: grid; place-items: center; height: 100%;\" class=\"\">\n        <af-button [label]=\"'button.orderonline' | translate \" [buttonId]=\"buttonId+'info'\" [fontSize]=\"52\"></af-button>\n      </div>\n    </af-tile>\n  </div>\n  <af-tile>\n    <div class=\"gym-pass__details\">\n      <p>{{ label2 }}</p>\n    </div>\n  </af-tile>\n</div>"
        },
        {
            "name": "HomePageComponent",
            "id": "component-HomePageComponent-12b165513c1e653b5c42d0e02b3107873968744025b52a07f81175e1a05723314c75cab19939ba0af5b9a2a901d07ca1c30135787c41f6b64ced9d1b98ee8c26",
            "file": "src/app/sites/homePage/homePage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-homePage",
            "styleUrls": [
                "./homePage.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./homePage.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "gymPassButton",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "trainersButton",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-homePage',\r\n  templateUrl: './homePage.component.html',\r\n  styleUrls: ['./homePage.component.scss'],\r\n})\r\nexport class HomePageComponent {\r\n  constructor(\r\n    private router: Router,\r\n    private translateService: TranslateService\r\n  ) {\r\n    this.translateService.setDefaultLang(\r\n      sessionStorage.getItem('language') || 'en'\r\n    );\r\n  }\r\n\r\n  public gymPassButton(): void {\r\n    this.router.navigate(['/gym-pass']);\r\n  }\r\n\r\n  public trainersButton(): void {\r\n    this.router.navigate(['/trainers']);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../stories/constants/constants.scss\";\r\n\r\n.home-page {\r\n  background-image: url('../../../assets/backgrounds/AF-desktop-main-background.png');\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-attachment: fixed;\r\n\r\n  .navi-bar {\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    left: 0;\r\n    z-index: 1001;\r\n  }\r\n\r\n  .home-page__container {\r\n    max-width: 1357px;\r\n    margin: 0 auto 80px auto;\r\n    min-height: 200vh;\r\n\r\n    &--logo {\r\n      padding-top: 100px;\r\n      text-align: center;\r\n      height: 40vh;\r\n\r\n      img {\r\n        height: 270px;\r\n\r\n      }\r\n    }\r\n\r\n    &--gym-pass {\r\n      height: 60vh;\r\n      position: relative;\r\n\r\n      color: $input-text-light;\r\n      width: 485px;\r\n      font-weight: $font-weight-bold;\r\n\r\n      h2 {\r\n        width: 385px;\r\n        font-size: 62px;\r\n        text-shadow: 1px 1px 3px $background-dark;\r\n      }\r\n\r\n      &--price-info {\r\n        font-size: 42px;\r\n      }\r\n\r\n      &--text {\r\n        color: $input-main-color;\r\n        padding: 10px 0;\r\n        font-size: 18px;\r\n      }\r\n\r\n    }\r\n\r\n    &--trainers {\r\n      max-height: 100vh;\r\n\r\n      h2 {\r\n        margin: 40px 0 40px auto;\r\n        color: $input-text-light;\r\n        width: 385px;\r\n        font-size: 62px;\r\n        text-shadow: 1px 1px 3px $background-dark;\r\n      }\r\n\r\n      &__sliders {\r\n       \r\n        display: flex;\r\n        gap: 20px;\r\n        justify-content: center;\r\n        &--photos {\r\n          max-height: 716px;\r\n          img {\r\n            max-width: 542px;\r\n          }\r\n        }\r\n        &--text{\r\n          max-width: 745px;\r\n          padding: 30px;\r\n          p{\r\n            text-indent: 30px;\r\n            text-align: justify;\r\n            font-weight: $font-weight-bold;\r\n            font-size: 16px;\r\n            letter-spacing: 1px;\r\n            margin-bottom: 10px;\r\n          }\r\n          &__button-trainers{\r\n            margin-top: 20px;\r\n            display: flex;\r\n            justify-content: center;\r\n          }\r\n          \r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n@media (orientation: landscape) and (max-width: 1024px) {\r\n  .home-page {\r\n    .home-page__container {\r\n      max-width: 968px;\r\n      margin: 0 auto 80px auto;\r\n\r\n      &--logo {\r\n        padding-top: 80px;\r\n        height: 40vh;\r\n\r\n        img {\r\n          height: 220px;\r\n        }\r\n      }\r\n\r\n      &--gym-pass {\r\n        width: 485px;\r\n\r\n        h2 {\r\n          width: 305px;\r\n          font-size: 52px;\r\n        }\r\n\r\n        &--price-info {\r\n          font-size: 32px;\r\n        }\r\n\r\n        &--text {\r\n          font-size: 16px;\r\n        }\r\n        af-button{\r\n          ::ng-deep .button__container .p-element .p-button{\r\n            .p-button-label{\r\n              font-size: 29px !important;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      &--trainers {\r\n\r\n        h2 {\r\n          width: 305px;\r\n          margin: 40px 0 40px auto;\r\n          font-size: 52px;\r\n        }\r\n\r\n        &__sliders {\r\n          &--photos {\r\n            max-height: 566px;\r\n\r\n            img {\r\n              max-width: 432px;\r\n            }\r\n          }\r\n\r\n          &--text {\r\n            max-width: 545px;\r\n\r\n            p {\r\n              font-size: 15px;\r\n            }\r\n            &__button-trainers{\r\n              ::ng-deep .button__container .p-element .p-button{\r\n                .p-button-label{\r\n                  font-size: 29px !important;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n@media (orientation: landscape) and (max-width: 942px) {\r\n  .home-page {\r\n    .home-page__container {\r\n      max-width: 842px;\r\n\r\n      &--logo {\r\n        height: 40vh;\r\n\r\n        img {\r\n          height: 180px;\r\n        }\r\n      }\r\n\r\n      &--gym-pass {\r\n        width: 485px;\r\n\r\n        h2 {\r\n          font-size: 42px;\r\n        }\r\n\r\n        &--price-info {\r\n          font-size: 26px;\r\n        }\r\n\r\n        &--text {\r\n          font-size: 14px;\r\n        }\r\n        af-button{\r\n          ::ng-deep .button__container .p-element .p-button{\r\n            .p-button-label{\r\n              font-size: 25px !important;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      &--trainers {\r\n        min-height: 150vh ;\r\n        h2 {\r\n          width: 250px;\r\n          font-size: 42px;\r\n        }\r\n\r\n        &__sliders {\r\n          &--photos {\r\n            max-height: 426px;\r\n\r\n            img {\r\n              max-width: 322px;\r\n            }\r\n          }\r\n\r\n          &--text {\r\n            max-width: 495px;\r\n\r\n            p {\r\n              font-size: 14px;\r\n            }\r\n            &__button-trainers{\r\n              ::ng-deep .button__container .p-element .p-button{\r\n                .p-button-label{\r\n                  font-size: 25px !important;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n@media (orientation: landscape) and (max-width: 768px) {\r\n  .home-page {\r\n    .home-page__container {\r\n      max-width: 688px;\r\n\r\n      &--logo {\r\n        height: 40vh;\r\n\r\n        img {\r\n          height: 160px;\r\n        }\r\n      }\r\n\r\n      &--gym-pass {\r\n        width: 485px;\r\n\r\n        h2 {\r\n          width: 255px;\r\n          font-size: 36px;\r\n        }\r\n\r\n        &--price-info {\r\n          font-size: 22px;\r\n        }\r\n\r\n        &--text {\r\n          font-size: 13px;\r\n        }\r\n        af-button{\r\n          ::ng-deep .button__container .p-element .p-button{\r\n            .p-button-label{\r\n              font-size: 22px !important;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      &--trainers {\r\n        h2 {\r\n          width: 205px;\r\n          font-size: 36px;\r\n        }\r\n\r\n        &__sliders {\r\n          &--photos {\r\n            max-height: 466px;\r\n\r\n            img {\r\n              max-width: 362px;\r\n            }\r\n          }\r\n\r\n          &--text {\r\n            max-width: 495px;\r\n\r\n            p {\r\n              font-size: 13px;\r\n            }\r\n            &__button-trainers{\r\n              ::ng-deep .button__container .p-element .p-button{\r\n                .p-button-label{\r\n                  font-size: 22px !important;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n@media (orientation: landscape) and (max-width: 667px) {\r\n  .home-page {\r\n    .home-page__container {\r\n      max-width: 628px;\r\n\r\n      &--logo {\r\n        height: 40vh;\r\n\r\n        img {\r\n          height: 140px;\r\n        }\r\n      }\r\n\r\n      &--gym-pass {\r\n        padding-top: 40px;\r\n        width: 485px;\r\n\r\n        h2 {\r\n          width: 205px;\r\n          font-size: 32px;\r\n        }\r\n\r\n        &--price-info {\r\n          font-size: 20px;\r\n        }\r\n\r\n        &--text {\r\n          font-size: 12px;\r\n        }\r\n        af-button{\r\n          ::ng-deep .button__container .p-element .p-button{\r\n            .p-button-label{\r\n              font-size: 20px !important;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      &--trainers {\r\n        min-height: 200vh ;\r\n        h2 {\r\n          width: 205px;\r\n          font-size: 32px;\r\n        }\r\n\r\n        &__sliders {\r\n          &--photos {\r\n            max-height: 326px;\r\n\r\n            img {\r\n              max-width: 282px;\r\n            }\r\n          }\r\n\r\n          &--text {\r\n            max-width: 495px;\r\n\r\n            p {\r\n              font-size: 12px;\r\n            }\r\n            &__button-trainers{\r\n              ::ng-deep .button__container .p-element .p-button{\r\n                .p-button-label{\r\n                  font-size: 20px !important;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n\r\n@media (orientation: portrait) and (max-width: 1024px) {\r\n  .home-page {\r\n    .home-page__container {\r\n      max-width: 968px;\r\n      margin: 0 auto ;\r\n\r\n      &--logo {\r\n        padding-top: 80px;\r\n        height: 40vh;\r\n\r\n        img {\r\n          height: 220px;\r\n        }\r\n      }\r\n\r\n      &--gym-pass {\r\n        width: 485px;\r\n        margin: 0 auto;\r\n        h2 {\r\n          width: 305px;\r\n          font-size: 52px;\r\n        }\r\n\r\n        &--price-info {\r\n          font-size: 32px;\r\n        }\r\n\r\n        &--text {\r\n          font-size: 16px;\r\n        }\r\n        af-button{\r\n          ::ng-deep .button__container .p-element .p-button{\r\n            .p-button-label{\r\n              font-size: 29px !important;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      &--trainers {\r\n        width: 620px;\r\n        margin: 0 auto;\r\n        h2 {\r\n          text-align: center;\r\n          font-size: 52px;\r\n          margin: 40px auto;\r\n        }\r\n\r\n        &__sliders {\r\n          flex-direction: column;\r\n          &--photos {\r\n            max-height: 666px;\r\n\r\n            img {\r\n              max-width: 625px;\r\n            }\r\n          }\r\n\r\n          &--text {\r\n            max-width: 625px;\r\n\r\n            p {\r\n              font-size: 15px;\r\n            }\r\n            &__button-trainers{\r\n              ::ng-deep .button__container .p-element .p-button{\r\n                .p-button-label{\r\n                  font-size: 29px !important;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n@media (orientation: portrait) and (max-width: 942px) {\r\n  .home-page {\r\n    .home-page__container {\r\n      &--trainers {\r\n        min-height: 130vh;\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n@media (orientation: portrait) and (max-width: 640px) {\r\n  .home-page {\r\n    .home-page__container {\r\n      &--logo {\r\n        img {\r\n          height: 200px;\r\n        }\r\n      }\r\n\r\n      &--gym-pass {\r\n        width: 485px;\r\n        margin: 0 auto;\r\n        h2 {\r\n          width: 305px;\r\n          font-size: 46px;\r\n        }\r\n\r\n        &--price-info {\r\n          font-size: 28px;\r\n        }\r\n\r\n        &--text {\r\n          font-size: 14px;\r\n        }\r\n        af-button{\r\n          ::ng-deep .button__container .p-element .p-button{\r\n            .p-button-label{\r\n              font-size: 26px !important;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      &--trainers {\r\n        width: 470px;\r\n        min-height: 160vh ;\r\n        h2 {\r\n          font-size: 46px;\r\n\r\n        }\r\n\r\n        &__sliders {\r\n          flex-direction: column;\r\n          &--photos {\r\n            max-height: 446px;\r\n\r\n            img {\r\n              max-width: 475px;\r\n            }\r\n          }\r\n\r\n          &--text {\r\n            max-width: 625px;\r\n\r\n            p {\r\n              font-size: 14px;\r\n            }\r\n            &__button-trainers{\r\n              ::ng-deep .button__container .p-element .p-button{\r\n                .p-button-label{\r\n                  font-size: 26px !important;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n@media (orientation: portrait) and (max-width: 440px) {\r\n  .home-page {\r\n    .home-page__container {\r\n      max-width: 440px;\r\n      margin: 0 auto ;\r\n\r\n      &--logo {\r\n        padding-top: 80px;\r\n        height: 40vh;\r\n\r\n        img {\r\n          height: 170px;\r\n        }\r\n      }\r\n\r\n      &--gym-pass {\r\n        width: 355px;\r\n        margin: 0 auto;\r\n        h2 {\r\n          width: 255px;\r\n          font-size: 38px;\r\n        }\r\n\r\n        &--price-info {\r\n          font-size: 28px;\r\n        }\r\n\r\n        &--text {\r\n          font-size: 13px;\r\n        }\r\n        af-button{\r\n          ::ng-deep .button__container .p-element .p-button{\r\n            .p-button-label{\r\n              font-size: 24px !important;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      &--trainers {\r\n        width: 355px;\r\n        min-height: 160vh ;\r\n        h2 {\r\n          font-size: 46px;\r\n\r\n        }\r\n\r\n        &__sliders {\r\n          flex-direction: column;\r\n          &--photos {\r\n            max-height: 446px;\r\n\r\n            img {\r\n              max-width: 355px;\r\n            }\r\n          }\r\n\r\n          &--text {\r\n            max-width: 625px;\r\n\r\n            p {\r\n              font-size: 13px;\r\n            }\r\n            &__button-trainers{\r\n              ::ng-deep .button__container .p-element .p-button{\r\n                .p-button-label{\r\n                  font-size: 24px !important;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n}",
                    "styleUrl": "./homePage.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<section class=\"home-page\">\r\n    <div class=\"navi-bar\">\r\n        <af-menuStatic></af-menuStatic>\r\n    </div>\r\n    <section class=\"home-page__container\">\r\n       <div class=\"home-page__container--logo\">\r\n        <img src=\"../../../assets/logo/logoLightText.svg\" alt=\"logo\">\r\n       </div>\r\n       <div class=\"home-page__container--gym-pass\">\r\n        <h2>{{\"homepage.startNow\"| translate}}</h2>\r\n        <p class=\"home-page__container--gym-pass--price-info\">{{\"homepage.from\"| translate}}100zł/msc</p>\r\n        <p class=\"home-page__container--gym-pass--text\">{{\"homepage.texta1\"| translate}}</p>\r\n        <af-button  buttonId=\"karnety\" \r\n         [label]=\"'button.passess' | translate \" \r\n         [whiteButton]=\"true\" \r\n         [fontSize]=\"35\"\r\n         (onClick)=\"gymPassButton()\"></af-button>\r\n       </div>\r\n       <div class=\"home-page__container--trainers\">\r\n        <h2>{{\"homepage.trainers\" | translate}}</h2>\r\n        <div class=\"home-page__container--trainers__sliders\">\r\n            <af-tile>\r\n                <div class=\"home-page__container--trainers__sliders--photos\">\r\n                    <img src=\"../../../assets/treners/trener1.jpg\" alt=\"trener1\">\r\n                </div>\r\n            </af-tile>\r\n            <af-tile>\r\n               <div class=\"home-page__container--trainers__sliders--text\">\r\n                <p>{{\"homepage.texta2\"| translate}}</p>\r\n               <p>{{\"homepage.texta3\"| translate}}</p>\r\n               <div class=\"home-page__container--trainers__sliders--text__button-trainers\">\r\n                <af-button  buttonId=\"trenerzy\" \r\n               [label]=\"'homepage.trainers' | translate\" \r\n               [fontSize]=\"40\"\r\n               (onClick)=\"trainersButton()\"></af-button>\r\n               </div>\r\n               </div>\r\n           </af-tile>\r\n        </div>\r\n        \r\n       </div>\r\n    </section>\r\n    <af-footer></af-footer>\r\n</section>"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-b64a7c87b1b8a95cc1eaac6b4b793829e9368a2921deb71f04c91017bf495d557c804f918147d03e51ae15f42512cf9fb5bd73d38c199cc5f40752f40d7b5f0f",
            "file": "src/stories/components/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "af-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "floatLabel",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "floatLabelText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "inputIconConfig | undefined",
                    "decorators": []
                },
                {
                    "name": "placeholderText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "value",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, Input } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { inputIconConfig } from 'src/stories/interfaces/input.model';\r\n\r\n@Component({\r\n  selector: 'af-input',\r\n  templateUrl: './input.component.html',\r\n  styleUrls: ['./input.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => InputComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class InputComponent implements ControlValueAccessor {\r\n  @Input() public floatLabelText: string = '';\r\n  @Input() public placeholderText: string = '';\r\n  @Input() public floatLabel: boolean = false;\r\n  @Input() public iconConfig: inputIconConfig | undefined;\r\n  public value: string = \"\";\r\n\r\n  public onChange = (value: string) => { };\r\n  onTouched = () => { };\r\n\r\n  public writeValue(value: string): void {\r\n    this.value = value || '';\r\n  }\r\n\r\n  public registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  public setDisabledState?(isDisabled: boolean): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../constants/constants.scss\";\r\n\r\n.input__container {\r\n  width: 100%;\r\n\r\n  .p-float-label input:focus~label {\r\n    color: $input-text-accent;\r\n  }\r\n  \r\n  .input__content:not(:has(i.input__content--icon)) .input__content--text {\r\n    padding-left: 20px; \r\n  }\r\n\r\n  .input__content {\r\n    width: 100%;\r\n\r\n    &--icon {\r\n      font-size: 20px;\r\n      color: $input-main-color;\r\n      padding: 12px 16px;\r\n      position: absolute;\r\n      top: 2%;\r\n      &-left {\r\n        left: 0;\r\n        border-right: 2px solid $input-border-color;\r\n      }\r\n\r\n      &-right {\r\n        right: 0;\r\n        border-left: 2px solid $input-border-color;\r\n      }\r\n    }\r\n    &:not(.p-float-label) {\r\n\r\n      .input__content--icon-left,\r\n      .input__content--icon-righ {\r\n        height: 45px;\r\n        border-right: 2px solid $input-border-color;\r\n      }\r\n\r\n      .input__content--icon-left {\r\n        left: 0;\r\n      }\r\n\r\n      .input__content--icon-right {\r\n        right: 0;\r\n      }\r\n    }\r\n\r\n    &--text {\r\n      width: 100%;\r\n      padding: 12px 0 12px 70px;\r\n      border: 2px solid $input-border-color;\r\n      border-radius: 15px;\r\n      background-color: $input-background-color;\r\n      font-family: $font-family;\r\n\r\n      &:focus {\r\n        box-shadow: none;\r\n      }\r\n    }\r\n\r\n    &--label {\r\n      margin-top: -0.5rem;\r\n      font-family: $font-family;\r\n      font-weight: $font-weight-normal;\r\n      padding-left: 70px;\r\n      color: $input-text-light;\r\n    }\r\n\r\n    input::placeholder {\r\n      color: $input-text-light;\r\n    }\r\n  }\r\n}",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<section class=\"input__container\">\r\n  <div *ngIf=\"!floatLabel\">\r\n    <span class=\"input__content\" [class]=\"iconConfig ? iconConfig.iconFloat:''\">\r\n      <i *ngIf=\"iconConfig\" class=\"pi {{ iconConfig.iconClassName }} input__content--icon\"\r\n        [ngClass]=\"iconConfig.iconFloat == 'p-input-icon-right' ? 'input__content--icon-right':'input__content--icon-left'\"></i>\r\n      <input id=\"float-input\" class=\"input__content--text\" type=\"text\" [placeholder]=\"placeholderText\" pInputText [(ngModel)]=\"value\" (ngModelChange)=\"onChange($event)\" (blur)=\"onTouched()\" />\r\n    </span>\r\n  </div>\r\n  <div *ngIf=\"floatLabel\">\r\n    <span class=\"p-float-label input__content\" [class]=\"iconConfig?.iconFloat\">\r\n      \r\n      <p-floatLabel>\r\n        <i class=\"pi {{ iconConfig?.iconClassName }} input__content--icon\"\r\n      [ngClass]=\"iconConfig?.iconFloat == 'p-input-icon-right' ? 'input__content--icon-right':'input__content--icon-left'\"></i>\r\n        <input id=\"float-input\" class=\"input__content--text\" type=\"text\" pInputText [(ngModel)]=\"value\"\r\n          (ngModelChange)=\"onChange($event)\" (blur)=\"onTouched()\" />\r\n        <label for=\"float-input\" class=\"input__content--label\">{{ floatLabelText }}</label>\r\n      </p-floatLabel>\r\n    </span>\r\n  </div>\r\n</section>\r\n"
        },
        {
            "name": "InputTextareaComponent",
            "id": "component-InputTextareaComponent-cc50feee38ca05c391ad4499b82817fa0369ca3ce2aa8c1058e8bb74cdd19f1d4651716efe3a7d85f628196221c48b4928f52d815dc264a4328c18a86b3ffee4",
            "file": "src/stories/components/inputTextarea/inputtextarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputTextareaComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "af-inputTextarea",
            "styleUrls": [
                "./inputtextarea.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./inputtextarea.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoResize",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "floatLabel",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "floatLabelText",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholderText",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "InputTextareaSizeModel",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, Input } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { InputTextareaSizeModel } from 'src/stories/interfaces/inputtextarea.model';\r\n\r\n@Component({\r\n  selector: 'af-inputTextarea',\r\n  templateUrl: './inputtextarea.component.html',\r\n  styleUrls: ['./inputtextarea.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => InputTextareaComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class InputTextareaComponent implements ControlValueAccessor {\r\n  @Input() public autoResize: boolean = false;\r\n  @Input() public floatLabel: boolean = false;\r\n  @Input() public floatLabelText: string = \"\";\r\n  @Input() public placeholderText: string = \"\";\r\n  @Input() public disabled: boolean = false;\r\n  @Input() public size: InputTextareaSizeModel = {};\r\n\r\n  public value: string = '';\r\n\r\n  constructor() {}\r\n\r\n  onChange = (value: string) => {};\r\n  onTouched = () => {};\r\n\r\n  writeValue(value: string): void {\r\n    this.value = value;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../constants/constants.scss\";\r\n.inputtextarea-container{\r\n    margin-top: 20px;\r\n    div{\r\n        textarea{\r\n            padding: 0.75rem 0.75rem;\r\n            border: 2px solid $input-border-color;\r\n            border-radius: 15px;\r\n            width: 100%;\r\n            height: 100%;\r\n            resize: none;\r\n            padding-left: 20px;\r\n            &::placeholder{\r\n                color: $input-text-light;\r\n            }\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./inputtextarea.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 25
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<section class=\"inputtextarea-container\">\r\n    <div *ngIf=\"!floatLabel\">\r\n        <textarea pInputTextarea [(ngModel)]=\"value\"\r\n        [placeholder]=\"placeholderText\"\r\n        [rows]=\"size.rows\"\r\n        [cols]=\"size.cols\" \r\n        [autoResize]=\"autoResize\"\r\n        [disabled]=\"disabled\"\r\n        (ngModelChange)=\"onChange($event)\"></textarea>\r\n    </div>\r\n    <div *ngIf=\"floatLabel\">\r\n    <span class=\"p-float-label\">\r\n       <p-floatLabel>\r\n        <textarea id=\"float-inputtextarea\" pInputTextarea \r\n        [(ngModel)]=\"value\"\r\n        [rows]=\"size.rows\"\r\n        [cols]=\"size.cols\" \r\n        [autoResize]=\"autoResize\"\r\n        [disabled]=\"disabled\"\r\n        (ngModelChange)=\"onChange($event)\"></textarea>\r\n        <label for=\"float-inputtextarea\">{{floatLabelText}}</label>\r\n       </p-floatLabel>\r\n    </span>\r\n    </div>\r\n</section>"
        },
        {
            "name": "KnobComponent",
            "id": "component-KnobComponent-82a3751dac41982881f65fe919654b6ce8dae86ffe1db14a76682d87adead721391437f8b3d16594af439f8314955f13b829546ae852a4fe23effc228bbc5b64",
            "file": "src/stories/components/knob/knob.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-knob",
            "styleUrls": [
                "./knob.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./knob.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "maxValue",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minValue",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'af-knob',\r\n  templateUrl: './knob.component.html',\r\n  styleUrls: ['./knob.component.scss'],\r\n})\r\nexport class KnobComponent {\r\n  @Input() public value: number = 0;\r\n  @Input() public minValue: number = 0;\r\n  @Input() public maxValue: number = 0;\r\n  @Input() public size: number = 0;\r\n  @Input() public readonly:boolean = false;\r\n  @Input() public disabled:boolean = false;\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../constants/constants.scss\";\r\n.knob__container{\r\n   font-family: $font-family; \r\n}",
                    "styleUrl": "./knob.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "templateData": "<section class=\"knob__container\">\r\n  <p-knob\r\n  [(ngModel)]=\"value\"\r\n  [min]=\"minValue\"\r\n  [max]=\"maxValue\"\r\n  [size]=\"size\"\r\n  [readonly]=\"readonly\"\r\n  [disabled]=\"disabled\"\r\n  valueColor=\"#00ADB5\"\r\n  rangeColor=\"#222831\"\r\n></p-knob>\r\n\r\n</section>"
        },
        {
            "name": "LanguageChangerComponent",
            "id": "component-LanguageChangerComponent-7c7624517cbdedd868065d4efdb4972360092b5cf99dd222e1dd0e997bc2ae343a8765ca5e448c76f634680d3e77a90c201d746c9780e154502d4f0b38068e3f",
            "file": "src/stories/components/languageChanger/languageChanger.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-languageChanger",
            "styleUrls": [
                "./languageChanger.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./languageChanger.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "fontSize",
                    "defaultValue": "12",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "languages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LanguageModel[]",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedLanguage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showDropdownOption",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeLanguage",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dropdownOptionsToggler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "targetElement",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:click', ['$event.target']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "targetElement",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "targetElement",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event.target"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LanguageModel } from './language.model';\r\n\r\n@Component({\r\n  selector: 'af-languageChanger',\r\n  templateUrl: './languageChanger.component.html',\r\n  styleUrls: ['./languageChanger.component.scss'],\r\n})\r\nexport class LanguageChangerComponent {\r\n  @Input() fontSize: number = 12;\r\n  public languages: LanguageModel[];\r\n  public showDropdownOption: boolean = false;\r\n  public selectedLanguage: string;\r\n\r\n  constructor(private translateService: TranslateService, private elementRef: ElementRef) {\r\n    this.translateService.setDefaultLang(sessionStorage.getItem('language')!);\r\n    this.selectedLanguage = sessionStorage.getItem('language')!;\r\n    this.languages = [\r\n      { id: 'pl', name: 'polski' },\r\n      { id: 'en', name: 'angielski' },\r\n    ];\r\n  }\r\n  @HostListener('document:click', ['$event.target'])\r\n  onClick(targetElement: any) {\r\n    const clickedInside = this.elementRef.nativeElement.contains(targetElement);\r\n\r\n    if (!clickedInside) {\r\n      this.showDropdownOption = false;\r\n    }\r\n  }\r\n\r\n  public dropdownOptionsToggler(): void {\r\n    this.showDropdownOption = !this.showDropdownOption;\r\n\r\n  }\r\n\r\n  changeLanguage(id: string) {\r\n    sessionStorage.setItem('language', id);\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 100);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../constants/constants.scss\";\r\n.dropdown {\r\n    display: inline-block;\r\n  position: relative;\r\n  &__button {\r\n    background-color: transparent;\r\n    border: none;\r\n    color: $input-main-color;\r\n    cursor: pointer;\r\n  }\r\n  &__options {\r\n    position: absolute;\r\n    margin-top: 5px;\r\n    border: 2px solid $input-main-color;\r\n    color: $input-main-color ;\r\n    border-radius: 15px;\r\n    &--single-option{\r\n      text-align: center;\r\n        padding: 10px 15px;\r\n        font-size: 12px;\r\n        font-weight: $font-weight-bold;\r\n        &:first-of-type{\r\n          border-top-left-radius: 12px;\r\n          border-top-right-radius: 12px;\r\n        }\r\n        &:last-of-type{\r\n          border-bottom-left-radius: 12px;\r\n          border-bottom-right-radius: 12px;\r\n        }\r\n        cursor: pointer;\r\n        transition: .1s;\r\n        &:hover{\r\n          background-color: $input-main-color ;\r\n          color: $input-background-color;\r\n        }\r\n         span{\r\n          display: flex; \r\n          gap: 5px;\r\n          align-items: center;\r\n         }\r\n    }\r\n  }\r\n}",
                    "styleUrl": "./languageChanger.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": " <div class=\"dropdown\" > \r\n    <button class=\"dropdown__button\" (click)=\"dropdownOptionsToggler()\">\r\n      <span class=\"pi pi-language\" [style]=\"'fontSize:' +fontSize +'px'\"></span>\r\n    </button>\r\n    <div *ngIf=\"showDropdownOption\" class=\"dropdown__options\" >\r\n      <div *ngFor=\"let item of languages\" class=\"dropdown__options--single-option\">\r\n        <span (click)=\"changeLanguage(item.id)\" ><img [src]=\"'../../../assets/backgrounds/flags/'+item.id+'.png'\" [alt]=\"item.name\" style=\"max-width: 18px;\">{{item.id.toUpperCase()}}</span>\r\n      </div>\r\n    </div>\r\n  </div>"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-c158b3601b6bbbc7ba3d910256282052f24e2cfcec8c6f3f6f83e3bbbabff1ee29265974863da16d86d947b201ae93c1d4d9e32141ed536b1219c032c8d3b643",
            "file": "src/app/sites/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "remember",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loginData",
                    "defaultValue": "{\r\n    iconClassName: 'pi-user',\r\n    iconFloat: EnumIconFloat.left,\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "inputIconConfig",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "myForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "backToWelcomePage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getRemeberPassword",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "submitLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { catchError, EMPTY, of, tap } from 'rxjs';\r\nimport { LoginService } from 'src/app/api/login.service';\r\nimport { AfMessageService } from 'src/app/features/services/message.service';\r\nimport { EnumIconFloat } from 'src/stories/enums/input.enum';\r\nimport { inputIconConfig } from 'src/stories/interfaces/input.model';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit{\r\n  @Input() public remember: boolean;\r\n  public myForm: FormGroup;\r\n  public loginData: inputIconConfig = {\r\n    iconClassName: 'pi-user',\r\n    iconFloat: EnumIconFloat.left,\r\n  };\r\n\r\n  constructor(private router: Router, \r\n    private message: AfMessageService,\r\n    private translateService: TranslateService,\r\n    private loginServ: LoginService,\r\n    private formBuilder: FormBuilder) {\r\n    this.translateService.setDefaultLang(sessionStorage.getItem(\"language\") || (\"en\"));\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n      this.myForm = this.formBuilder.group({\r\n        login:[\"\",Validators.required],\r\n        password:[\"\",Validators.required],\r\n      })\r\n  }\r\n  \r\n  public submitLogin(): void {\r\n    if (this.myForm.invalid) {\r\n      this.message.addErrorMessage('Uzupełnij Login lub hasło', 'Błąd');\r\n      return;\r\n    }\r\n    const { login, password } = this.myForm.controls\r\n\r\n    this.loginServ.login(login.value, password.value).pipe(tap(res => {\r\n      this.loginServ.setLoggedUserId(res.id);\r\n      this.router.navigate(['/home']);\r\n    }),\r\n      catchError(err => {\r\n        this.message.addErrorMessage('Błędny login lub hasło', 'Błąd');\r\n        console.log(err);\r\n        return EMPTY;\r\n      })).subscribe();\r\n  }\r\n\r\n  public backToWelcomePage(): void {\r\n    this.router.navigate(['/welcome']);\r\n  }\r\n\r\n  public getRemeberPassword(event: any): void {\r\n    console.log(event);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../stories/constants/constants.scss\";\r\n\r\n.bg-img{\r\n  background: url('../../../assets/backgrounds/background-loginPage.jpg');\r\n  background-size: 100%;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  overflow: hidden;\r\n  height: 100vh;\r\n  color:$darker-gray;\r\n}\r\n\r\n.login-container {\r\n  display: grid;\r\n  grid-auto-columns: 1fr;\r\n  grid-auto-rows: 1fr;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 0.5fr 1fr 1fr;\r\n  gap: 20px 0px;\r\n  grid-template-areas:\r\n  \"logo-section logo-section logo-section\"\r\n  \"login-section login-section login-section\";\r\n  justify-items: center;\r\n  align-items: stretch;\r\n  height: 100vh;\r\n  \r\n  .logo-section {\r\n  grid-area: logo-section;\r\n\r\n    &__af{\r\n      padding: 50px;\r\n    }\r\n    img{\r\n      width: 350px;\r\n      filter: invert(1);\r\n    }\r\n  }\r\n\r\n  .login-section {\r\n  grid-area: login-section;\r\n  margin: 5px;\r\n  width: 1000px;\r\n\r\n    &__justify {\r\n    padding: 40px 200px;\r\n    width: 100%;\r\n    form{\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 28px;\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n  af-tile{\r\n    position: relative;\r\n  }\r\n\r\n  .button__language{\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 20px;\r\n  }\r\n\r\n  .button__return-right {\r\n    position: absolute;\r\n    top: 20px;\r\n    right: 20px;\r\n  }\r\n\r\n  .button__mid {\r\n    display: flex;\r\n    justify-content:center;\r\n  }\r\n\r\n\r\n  a {\r\n  margin-top: 20px;\r\n  color: rgb(0, 173, 181);\r\n}\r\n}\r\n\r\n.box-forgot{\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  &__checkbox{\r\n    width:25%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  &__forgot{\r\n    width: 75%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n  }\r\n}\r\n\r\n.account-dont-exist {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.validoation__container{\r\n  position: absolute;\r\n  top: 20px;\r\n  right:20px;\r\n  }\r\n",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "message",
                        "type": "AfMessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loginServ",
                        "type": "LoginService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "message",
                        "type": "AfMessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loginServ",
                        "type": "LoginService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"bg-img\" (keyup.enter)=\"submitLogin()\">\r\n  <section class=\"login-container\">\r\n    <div class=\"logo-section\">\r\n      <div class=\"logo-section__af\">\r\n        <img src=\"../../../assets/logo/logoFt_text.svg\" alt=\"test\">\r\n      </div>\r\n    </div>\r\n    <div class=\"login-section\">\r\n      <af-tile>\r\n        <div class=\"button__language\">\r\n          <af-languageChanger [fontSize]=\"22\"></af-languageChanger>\r\n        </div>\r\n        <div class=\"button__return-right\">\r\n          <af-button iconClassName=\"pi-undo\" iconPos=\"top\" [label]=\"'button.back' | translate\" buttonId=\"undo\" [fontSize]=\"10\" [iconSize]=\"18\"  [transparentButton]=\"true\" (click)=\"backToWelcomePage()\"></af-button>\r\n        </div>\r\n        <div class=\"login-section__justify\">\r\n          <form [formGroup]=\"myForm\">\r\n              <af-input formControlName=\"login\" [iconConfig]=\"loginData\" [floatLabel]=\"true\" [floatLabelText]=\"'registerLogin.login' | translate\" ></af-input>\r\n              <af-password formControlName=\"password\" [floatLabelText]=\"'registerLogin.password' | translate\" ></af-password>\r\n              <div class=\"box-forgot\">\r\n                <div class=\"box-forgot__checkbox\">\r\n                  <af-checkbox (checkedToggler)=\"getRemeberPassword($event)\" [label]=\"'registerLogin.safePassword' | translate\"></af-checkbox>\r\n                </div>\r\n                <div class=\"box-forgot__forgot\">\r\n                  <p>{{'registerLogin.dontRememberPassword' | translate}} <a href=\"#\" class=\"form-group__forgot-password\">{{'registerLogin.RemindPassword' | translate}}</a></p>\r\n                </div>\r\n            </div>\r\n            <div class=\"button__mid\">\r\n              <af-button [label]=\"'registerLogin.log_in' | translate\" buttonId=\"login\" [fontSize]=\"30\"  (click)=\"submitLogin()\"></af-button>\r\n            </div>\r\n          </form>\r\n            <div class=\"account-dont-exist\">\r\n              <p>{{'registerLogin.dontHaveAccount' | translate}} <a routerLink=\"/register\">{{'registerLogin.registerNow' | translate}}</a></p>\r\n            </div>\r\n        </div>\r\n      </af-tile>\r\n    </div>\r\n  </section>\r\n</div>\r\n\r\n<section class=\"validoation__container\">\r\n  <af-messages [closable]=\"true\"></af-messages>\r\n</section>"
        },
        {
            "name": "MenuStaticComponent",
            "id": "component-MenuStaticComponent-25538516c03a1f8bab750ef272c6a3b2fa436937ccc7dd218de6d8361364088b54e35e627d5a491ebbdbfa6248a21d63dc740e6d137b0fb93b4f9d94c65559db",
            "file": "src/stories/components/menuStatic/menuStatic.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-menuStatic",
            "styleUrls": [
                "./menuStatic.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./menuStatic.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeOption",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isMenuOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "blogRouter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "changeLanguage",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "gymPassRouter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "logoutEmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "profileRouter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "startRouter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "toggleMenu",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "workoutsRouter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  TranslateService\r\n} from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'af-menuStatic',\r\n  templateUrl: './menuStatic.component.html',\r\n  styleUrls: ['./menuStatic.component.scss'],\r\n})\r\nexport class MenuStaticComponent {\r\n\r\n  public isMenuOpen: boolean = false;\r\n  public activeOption: string = '';\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  public toggleMenu(event: Event): void {\r\n    const hamburger = document.querySelector(\r\n      '.navigation_container__hamburger'\r\n    ) as HTMLElement;\r\n    if (!hamburger) {\r\n      return;\r\n    }\r\n\r\n    const menuOptions = hamburger.querySelector(\r\n      '.navigation_container__hamburger__options'\r\n    ) as HTMLElement;\r\n    const closeMenu = menuOptions?.querySelector('.close-menu');\r\n\r\n    if (\r\n      menuOptions && menuOptions.contains(event.target as Node) && closeMenu && (event.target === closeMenu || closeMenu.contains(event.target as Node))\r\n    ) {\r\n      this.isMenuOpen = false;\r\n    } else if (hamburger.contains(event.target as Node)) {\r\n      this.isMenuOpen = !this.isMenuOpen;\r\n    } else {\r\n      this.isMenuOpen = false;\r\n    }\r\n  }\r\n\r\n\r\n  public changeLanguage(id: string): void {\r\n    sessionStorage.setItem('language', id);\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 100);\r\n  }\r\n\r\n  public startRouter(): void {\r\n    this.activeOption = \"home\";\r\n    this.router.navigate(['/home']);\r\n  }\r\n  public gymPassRouter(): void {\r\n    this.activeOption = \"gym-pass\";\r\n    this.router.navigate(['/gym-pass']);\r\n  }\r\n  public blogRouter(): void {\r\n    this.activeOption = \"blog\";\r\n    this.router.navigate(['/blog']);\r\n  }\r\n  public workoutsRouter(): void {\r\n    this.activeOption = \"trainers\";\r\n    this.router.navigate(['/trainers']);\r\n  }\r\n  public profileRouter(): void {\r\n    this.activeOption = \"profile\";\r\n    this.router.navigate(['/profile']);\r\n  }\r\n  public logoutEmit(): void {\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/welcome']);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../constants/constants.scss\";\r\n\r\n.navigation_container {\r\n  overflow: hidden;\r\n  box-sizing: border-box;\r\n  padding: 0 20px;\r\n  font-family: $font-family;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 80px;\r\n  background: $darker-gray;\r\n  color: $input-text-light;\r\n  margin: 0;\r\n  z-index: 1001;\r\n  box-shadow: 0px 0px 32px 16px rgba(34, 40, 49, 0.75);\r\n\r\n  &__hamburger {\r\n    display: none;\r\n    cursor: pointer;\r\n\r\n    &__options {\r\n      display: none;\r\n      position: absolute;\r\n      min-height: 100vh;\r\n      top: 75px;\r\n      left: -100%;\r\n      background-color: $darker-gray;\r\n      width: 100%;\r\n      text-align: center;\r\n      transition: 0.5s;\r\n      &--active {\r\n        left: 0;\r\n      }\r\n\r\n      p {\r\n        padding-top: 10px;\r\n        color: $input-text-accent;\r\n        font-size: 32px;\r\n      }\r\n\r\n      &--details {\r\n        display: none;\r\n        p {\r\n          color: $input-text-light;\r\n          padding-right: 10px;\r\n        }\r\n      }\r\n\r\n      &--details.active {\r\n        display: block;\r\n        height: auto;\r\n        color: $input-text-light;\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    transition-delay: 0.2s;\r\n  }\r\n\r\n  &:hover .navigation_container--details {\r\n    top: 80px;\r\n    box-shadow: 0px 0px 32px 16px rgba(34, 40, 49, 0.75);\r\n  }\r\n\r\n  &--logo {\r\n    z-index: 1001;\r\n    background: $darker-gray;\r\n    width: 26%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    cursor: pointer;\r\n\r\n    &__brand {\r\n      &__link {\r\n        &__photo {\r\n          height: 32px;\r\n        }\r\n      }\r\n    }\r\n\r\n    &__header {\r\n      h2 {\r\n        font-size: 18px;\r\n        width: 90px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .navigation_content {\r\n    background: $darker-gray;\r\n    z-index: 1001;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 20px;\r\n    width: 70%;\r\n\r\n    p {\r\n      font-size: 18px;\r\n      font-weight: $font-weight-bold;\r\n      width: 133px;\r\n      cursor: pointer;\r\n      transition: 0.2s;\r\n      &:hover {\r\n        color: $input-text-accent;\r\n      }\r\n    }\r\n  }\r\n\r\n  .navigation_fetures {\r\n    background: $darker-gray;\r\n    z-index: 1001;\r\n    display: flex;\r\n    align-items: flex-end;\r\n\r\n    &--detail {\r\n      width: 40px;\r\n\r\n      &__language {\r\n        display: none;\r\n\r\n        button {\r\n          margin: 0 10px;\r\n          cursor: pointer;\r\n          padding: 0;\r\n          background-color: transparent;\r\n          border: none;\r\n\r\n          img {\r\n            width: 24px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.navigation_container--details {\r\n  display: flex;\r\n  top: -70vh;\r\n  left: 0;\r\n  position: absolute;\r\n  color: $input-text-light;\r\n  background: $darker-gray;\r\n  width: 100%;\r\n  padding: 0;\r\n  transition: 0.7s;\r\n  max-height: auto;\r\n  z-index: -1001;\r\n  padding-left: 26%;\r\n  gap: 20px;\r\n\r\n  p {\r\n    font-size: 18px;\r\n    font-weight: $font-weight-bold;\r\n    padding: 20px 0px;\r\n    width: 133px;\r\n  }\r\n\r\n  &__item {\r\n    margin-left: 1px;\r\n    cursor: default;\r\n  }\r\n\r\n  &__profile {\r\n    color: $input-text-light;\r\n    font-size: 27px;\r\n    text-align: center;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: end;\r\n    div {\r\n      p {\r\n        cursor: pointer;\r\n        transition: 0.2s;\r\n        &:hover {\r\n          color: $input-text-accent;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &__language {\r\n    button {\r\n      margin: 0 10px;\r\n      cursor: pointer;\r\n      padding: 0;\r\n      background-color: transparent;\r\n      border: none;\r\n\r\n      img {\r\n        width: 24px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: 1024px) {\r\n  .navigation_container {\r\n    justify-content: space-between;\r\n    &__hamburger {\r\n      display: block;\r\n\r\n      &__options {\r\n        display: block;\r\n        // height: 140vh;\r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      box-shadow: none;\r\n    }\r\n\r\n    &:hover .navigation_container--details {\r\n      display: none;\r\n    }\r\n\r\n    &--logo {\r\n      &__brand {\r\n        display: none;\r\n\r\n        &__link {\r\n          display: none;\r\n        }\r\n      }\r\n\r\n      &__header {\r\n        display: none;\r\n      }\r\n    }\r\n\r\n    .navigation_content {\r\n      display: none;\r\n    }\r\n\r\n    .navigation_fetures {\r\n      margin-left: 15px;\r\n      &--detail {\r\n        i {\r\n          display: none;\r\n        }\r\n        &__language {\r\n          display: block;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .navigation_container--details {\r\n    display: none;\r\n  }\r\n}\r\n\r\n@media (max-width: 942px) {\r\n  .navigation_container {\r\n    height: 70px;\r\n    &__hamburger {\r\n      &__options {\r\n        height: 10000px;\r\n        top: 70px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .navigation_container {\r\n    height: 65px;\r\n    &__hamburger {\r\n      &__options {\r\n        top: 65px;\r\n        p {\r\n          font-size: 24px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./menuStatic.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<section class=\"navigation_container\">\r\n  <div class=\"navigation_container--logo\">\r\n    <div class=\"navigation_container__hamburger\" (click)=\"toggleMenu($event)\">\r\n      <i class=\"pi pi-bars\"></i>\r\n    </div>\r\n    <div class=\"navigation_container__wrapper\">\r\n      <div class=\"navigation_container__hamburger__options\" [class]=\"isMenuOpen ? 'navigation_container__hamburger__options--active':''\">\r\n        <p (click)=\"profileRouter()\" [ngClass]=\"{'active': activeOption === 'profile'}\">{{\"MenuPage.profile\"| translate}}</p>\r\n        <p (click)=\"startRouter()\" [ngClass]=\"{'active': activeOption === 'home'}\">{{\"MenuPage.start\"| translate}}</p>\r\n        <p (click)=\"gymPassRouter()\" [ngClass]=\"{'active': activeOption === 'gyp-pass'}\">{{\"MenuPage.passes\"| translate}}</p>\r\n        <p (click)=\"workoutsRouter()\" [ngClass]=\"{'active': activeOption === 'trainers'}\">{{\"MenuPage.trainers\"| translate}}</p>\r\n        <p (click)=\"blogRouter()\" [ngClass]=\"{'active': activeOption === 'blog'}\">{{\"MenuPage.blog\"| translate}}</p>\r\n      </div>\r\n    </div>\r\n\r\n      <div class=\"navigation_container--logo\" (click)=\"startRouter()\">\r\n          <div class=\"navigation_container--logo__brand\">\r\n              <a class=\"navigation_container--logo__brand__link\">\r\n                  <img src=\"../../../assets/logo/logoLight.svg\" alt=\"Ambasada Formy\" class=\"navigation_container--logo__brand__link__photo\">\r\n              </a>\r\n          </div>\r\n          <div class=\"navigation_container--logo__header\">\r\n              <h2>\r\n                {{\"footer.header\"| translate}}\r\n              </h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     <div class=\"navigation_content\">\r\n        <p (click)=\"startRouter()\">{{\"MenuPage.start\"| translate}}</p>\r\n        <p (click)=\"gymPassRouter()\">{{\"MenuPage.passes\"| translate}}</p>\r\n        <p (click)=\"workoutsRouter()\">{{\"MenuPage.workouts\"| translate}}</p>\r\n        <p (click)=\"blogRouter()\">{{\"MenuPage.blog\"| translate}}</p>\r\n\r\n     </div>\r\n     <div class=\"navigation_fetures\">\r\n        <div class=\"navigation_fetures--detail\">\r\n            <i class=\"pi pi-language\"></i>\r\n        </div>\r\n        <div class=\"navigation_fetures--detail\">\r\n            <i class=\"pi pi-user\"></i>\r\n        </div>\r\n     </div>\r\n     <div class=\"navigation_container--details\">\r\n        <div class=\"navigation_container--details__item\">\r\n            <p>{{\"MenuPage.showpasses\"| translate}}</p>\r\n            <p>{{\"MenuPage.showtrainers\"| translate}}</p>\r\n         </div>\r\n         <div class=\"navigation_container--details__item\">\r\n            <p>{{\"MenuPage.passdevelopment\"| translate}}</p>\r\n            <p>{{\"MenuPage.passfun\"| translate}}</p>\r\n            <p>{{\"MenuPage.passhealth\"| translate}}</p>\r\n         </div>\r\n         <div class=\"navigation_container--details__profile\">\r\n           <div>\r\n            <p (click)=\"profileRouter()\">{{\"MenuPage.profile\"| translate}}</p>\r\n            <div class=\"navigation_container--details__language\">\r\n                <button (click)=\"changeLanguage('pl')\"><img src=\"../../../assets/backgrounds/flags/pl.png\" alt=\"pl\"></button>\r\n                <button (click)=\"changeLanguage('en')\"><img src=\"../../../assets/backgrounds/flags/en.png\" alt=\"en\"></button>\r\n            </div>\r\n            <p (click)=\"logoutEmit()\">{{\"MenuPage.logout\"| translate}}</p>\r\n           </div>\r\n         </div>\r\n\r\n     </div>\r\n\r\n</section>\r\n"
        },
        {
            "name": "MessagesComponent",
            "id": "component-MessagesComponent-eed0fe58502a03824b6ea70f28717591fc2c995e96ea74a51fd0ad3c1671ca5c18a3493cf9ec1bc559ce1a28d2dbaeebb101ee318867e607da20aa43f6f3def6",
            "file": "src/stories/components/messages/messages.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-messages",
            "styleUrls": [
                "./messages.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./messages.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "closable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "messages",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "Message[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { Message } from 'primeng/api';\r\n@Component({\r\n  selector: 'af-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.scss']\r\n})\r\nexport class MessagesComponent {\r\n@Input() public messages:Message[] = [];\r\n@Input() public closable: boolean = false;\r\n\r\n\r\nconstructor(){\r\n\r\n}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../constants/constants.scss\";\r\n\r\np-messages ::ng-deep{\r\n    max-width: 400px;\r\n    .p-messages{\r\n      .p-message{\r\n        background-color: $darker-gray;\r\n        color:$input-background-color;\r\n        border:none;\r\n        padding: 10px 30px;\r\n        &-wrapper{\r\n          display: flex;\r\n          justify-content: space-between;\r\n          gap: 14px;\r\n        }\r\n        &-icon{\r\n          color:$input-main-color;\r\n        }\r\n        &-close{\r\n          color:$input-background-color;\r\n          &:hover{\r\n            background: none;\r\n            color:$input-main-color;\r\n          }\r\n          &:focus{\r\n            box-shadow: none;\r\n          }\r\n        }\r\n        }\r\n      }\r\n    }",
                    "styleUrl": "./messages.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "templateData": "    <p-messages [(value)]=\"messages\" [enableService]=\"true\" [closable]=\"closable\" [showTransitionOptions]=\"'250ms'\" [hideTransitionOptions]=\"'250ms'\"></p-messages>\r\n"
        },
        {
            "name": "MyProfileComponent",
            "id": "component-MyProfileComponent-8c0b8047aec24e373111c050e6ef00847c44a80649bf035ef7bb6e4f8cd3138ec00d36f9eeedd4120c701e44ee8c5dfd1118bc8272fd56fd386e700972008e27",
            "file": "src/app/sites/profile/my-profile/my-profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-profile",
            "styleUrls": [
                "./my-profile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./my-profile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onUpload",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { userDataModel } from 'src/app/features/models';\nimport { ProfileService } from 'src/app/api';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.scss']\n})\nexport class MyProfileComponent {\n\n  constructor(\n    private router: Router,\n    private profileService: ProfileService,\n  ) {}\n\n\n  public removeUser(): void {\n    this.profileService.removeUser().subscribe(() => {\n      setTimeout(() => {\n        sessionStorage.clear();\n        this.router.navigate(['/welcome']);\n      }, 2000)\n    });\n  }\n  public onUpload(event: any): void {\n    this.profileService.photoUpdate(event).subscribe(() => {\n      window.location.reload();\n    });\n  }\n\n  public get userData(): userDataModel {\n    return this.profileService.userData;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../stories/constants/constants.scss\";\r\n\r\n.profile__information {\r\n  height: 90%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  .profile__information--left {\r\n    h1 {\r\n      margin-bottom: 10px;\r\n      font-size: 27px;\r\n      font-weight: $font-weight-bold;\r\n    }\r\n\r\n    div {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    h2 {\r\n      font-weight: $font-weight-bold;\r\n      font-size: 18px;\r\n    }\r\n\r\n    ul {\r\n      font-weight: $font-weight-normal;\r\n      font-size: 18px;\r\n    }\r\n\r\n    li {\r\n      list-style: none;\r\n    }\r\n  }\r\n\r\n  .profile__information--right {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: 40px;\r\n    padding-top: 80px;\r\n\r\n\r\n    af-button {\r\n      font-size: 18px;\r\n      font-weight: $font-weight-bold;\r\n    }\r\n  }\r\n}\r\n\r\n.my-profile__menu {\r\n  display: flex;\r\n  gap: 20px;\r\n  justify-content: center;\r\n\r\n}",
                    "styleUrl": "./my-profile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "profileService",
                        "type": "ProfileService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "profileService",
                        "type": "ProfileService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "userData": {
                    "name": "userData",
                    "getSignature": {
                        "name": "userData",
                        "type": "",
                        "returnType": "userDataModel",
                        "line": 32
                    }
                }
            },
            "templateData": "<div class=\"profile__information\">\n  <div class=\"profile__information--left\">\n    <h1>Mój profil</h1>\n    <div>\n      <h2>Moje dane:</h2>\n      <ul>\n        <li><strong>Imie Nazwisko:</strong> {{userData.firstName}} {{userData.lastName}}</li>\n        <li><strong>Login:</strong> {{userData.login}}</li>\n        <li><strong>Email:</strong> {{userData.email}}</li>\n      </ul>\n    </div>\n    <div>\n      <h2>Dane kontaktowe:</h2>\n      <ul>\n        <li><strong>Imie Nazwisko:</strong> {{userData.firstName}} {{userData.lastName}}</li>\n        <li><strong>adres:</strong> {{userData.address}}</li>\n        <li><strong>tel:</strong> {{userData.phoneNumber}}</li>\n      </ul>\n    </div>\n    <div>\n      <h2>Dane do faktury:</h2>\n      <ul>\n        <li><strong>Imie Nazwisko:</strong> {{userData.firstName}} {{userData.lastName}}</li>\n        <li><strong>adres:</strong> {{userData.address}}</li>\n        <li><strong>tel:</strong> {{userData.phoneNumber}}</li>\n        <li><strong>email:</strong> {{userData.email}}</li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"my-profile__menu\">\n  <af-photo-uploader (uploadHandler)=\"onUpload($event)\" [customUpload]=\"true\" />\n  <af-button [label]=\"'Zmień hasło'\" iconClassName=\"pi pi-unlock\" />\n  <af-button [label]=\"'Edytuj'\" iconClassName=\"pi pi-userData-edit\" />\n  <af-button [label]=\"'USUŃ KONTO'\" iconClassName=\"pi pi-userData-minus\" (onClick)=\"removeUser()\" />\n</div>\n"
        },
        {
            "name": "NewPostFormComponent",
            "id": "component-NewPostFormComponent-cb7d8519f6e3531d9140121af5bb1921b799dc1eca266e916485c25efbb66bbaaf8b720e3548888509ae69c97fbfd7c1a75c137edfec63a0f51d4b3d0a819cb5",
            "file": "src/app/features/components/new-post-form/new-post-form.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-new-post-form",
            "styleUrls": [
                "./new-post-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-post-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "searchIconConfig",
                    "defaultValue": "{\n  iconClassName: \"pi-search\",\n  iconFloat: EnumIconFloat.left\n}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "inputIconConfig",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addNewPost",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onFileSelected",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { inputIconConfig } from 'src/stories/interfaces/input.model';\nimport { EnumIconFloat } from 'src/stories/enums/input.enum';\nimport { BlogService } from 'src/app/api';\nimport { DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { catchError, EMPTY } from 'rxjs';\n\n@Component({\n  selector: 'app-new-post-form',\n  templateUrl: './new-post-form.component.html',\n  styleUrls: ['./new-post-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NewPostFormComponent implements OnInit{\n public form: FormGroup;\n public searchIconConfig: inputIconConfig = {\n  iconClassName: \"pi-search\",\n  iconFloat: EnumIconFloat.left\n}\n constructor(\n  private formBulider: FormBuilder,\n  private blogService: BlogService,\n  private dialogRef: DynamicDialogRef\n){}\n public ngOnInit(): void {\n   this.initForm();\n  }\n\n  public addNewPost():void {\n    if(this.form.valid){\n      const formData = new FormData();\n      formData.append('title', this.form.get('title')?.value);\n      formData.append('content', this.form.get('content')?.value);\n      formData.append('photo', this.form.get('photo')?.value);\n      this.blogService.addNewPost(formData).subscribe();\n      this.dialogRef.close(this.form.value);\n      this.dialogRef.destroy();\n    }\n  \n  }\n\n  public onFileSelected(event: any):void {\n    const file = event.files[0];\n    this.form.patchValue({ photo: file });\n  }\n\n  private initForm():void {\n   this.form = this.formBulider.group({\n    title: [\"\",Validators.required],\n    content:[\"\",Validators.required],\n    photo:[null]\n   })\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form{\r\n    background-color: transparent;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    margin-bottom: 50px;\r\n    af-inputTextarea{\r\n        display: block;\r\n        height: 200px;\r\n    }\r\n      \r\n}\r\n.buttons{\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 20px;\r\n}",
                    "styleUrl": "./new-post-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBulider",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "blogService",
                        "type": "BlogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "DynamicDialogRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "formBulider",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "blogService",
                        "type": "BlogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogRef",
                        "type": "DynamicDialogRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"form\">\r\n  <div class=\"form\">\r\n    <af-input formControlName=\"title\" [placeholderText]=\"'wwww'\" />\r\n    <af-inputTextarea formControlName=\"content\" [placeholderText]=\"'content'\" />\r\n  </div>\r\n  <div class=\"buttons\">\r\n    <af-button [label]=\"'Send'\" (onClick)=\"addNewPost()\" />\r\n    <af-photo-uploader (onSelect)=\"onFileSelected($event)\" [customUpload]=\"true\"/>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "PasswordComponent",
            "id": "component-PasswordComponent-b147ecae676421a4455e2bc68c3027b7186feb6de4eafaea9abb2e17d5e3e15bfd9f3c7a91fd8daa063dd4302e9a10c0d984639c9af9c70909f38b90d940c993",
            "file": "src/stories/components/password/password.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => PasswordComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "af-password",
            "styleUrls": [
                "./password.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./password.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabledPassword",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "feedback",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "floatLabelText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxLength",
                    "defaultValue": "255",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "mediumLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "strongLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "weakLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "inputValue",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showClear",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addIconToPasswordInput",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "findIcon",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, ChangeDetectionStrategy, Component, EventEmitter, forwardRef, Input, OnInit, Output } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'af-password',\r\n  templateUrl: './password.component.html',\r\n  styleUrls: ['./password.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers:[\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PasswordComponent),\r\n      multi: true,\r\n    },\r\n  ]\r\n})\r\nexport class PasswordComponent implements OnInit, ControlValueAccessor {\r\n  @Input() public floatLabelText: string = '';\r\n  @Input() public weakLabel: string = '';\r\n  @Input() public mediumLabel: string = '';\r\n  @Input() public strongLabel: string = '';\r\n  @Input() public feedback: boolean = false;\r\n  \r\n  @Input() public disabledPassword: boolean = false;\r\n  @Input() public maxLength: number = 255;\r\n  @Output() public inputValue:EventEmitter<string>= new EventEmitter();\r\n\r\n\r\n  public value: string;\r\n  public showClear: boolean = false;\r\n  public onChange = (value: any) => {};\r\n  public onTouched = () => {};\r\n  constructor() {}\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    setTimeout(()=>{\r\n      this.addIconToPasswordInput();\r\n      this.findIcon();\r\n    },0);\r\n  }\r\n\r\n  public getValue():void{\r\n    this.inputValue.emit(this.value);\r\n  }\r\n\r\n  private findIcon():void{\r\n    document.querySelectorAll(\".pi-eye\")?.forEach(element=>{\r\n      element.classList.add(\"password__icon\");\r\n    });\r\n  }\r\n\r\n  private addIconToPasswordInput(): void {\r\n    \r\n    document.querySelectorAll(\"p-password .p-password\")?.forEach(element => {\r\n    const classList: string[] = [\"pi\", \"pi-lock\", \"password__content--lock-icon\"];\r\n    const lockIcon:HTMLElement = document.createElement(\"i\");\r\n    if(element)\r\n      lockIcon.classList.add(...classList);\r\n      element.prepend(lockIcon)\r\n    });\r\n  }\r\n}\r\n\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../constants/constants.scss\";\r\n\r\n.password__container {\r\n  width: 100%;\r\n\r\n  .password__label{\r\n    width: 100%;\r\n  }\r\n\r\n  .p-float-label .p-inputwrapper-focus ~ label{\r\n    color: $input-text-accent;\r\n  }\r\n\r\n  .password__content {\r\n    display: block;\r\n    \r\n\r\n    ::ng-deep .p-component {\r\n      width: 100%;\r\n\r\n      .p-inputtext {\r\n        width: 100%;\r\n        border: 2px solid $input-border-color;\r\n        border-radius: 15px;\r\n        font-family: $font-family;\r\n        background-color: $input-background-color;\r\n        &:focus {\r\n          box-shadow: none;\r\n        }\r\n      }\r\n      .p-password-input{\r\n        padding: 12px 0 12px 70px;\r\n      }\r\n      .p-password-panel {\r\n        background-color: $input-background-color;\r\n        box-shadow: 0 0 3px 1px $input-border-color;\r\n      }\r\n      .password__content--lock-icon {\r\n        position: absolute;\r\n        top: 2%;\r\n        left: 0;\r\n        width: 53px;\r\n        font-size: 20px;\r\n        color: $input-main-color;\r\n        padding: 12px 16px;\r\n        border-right: 2px solid $input-border-color;\r\n    }\r\n      .p-password-clear-icon,\r\n      .password__icon {\r\n        padding: 0 22px;\r\n        color: $input-main-color;\r\n      }\r\n\r\n      .password__icon {\r\n        top: 22px;\r\n        font-size: 20px;\r\n        padding: 0 16px;\r\n      }\r\n      eyeicon{\r\n        margin-top: -0.5rem;\r\n      }\r\n    }\r\n\r\n\r\n    &--label {\r\n      margin-top: -0.5rem;\r\n        padding-left: 40px;\r\n        font-family: $font-family;\r\n        color: $input-text-light;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./password.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 32
            },
            "implements": [
                "OnInit",
                "ControlValueAccessor"
            ],
            "templateData": "<section class=\"password__container\">\r\n  <div *ngIf=\"this.floatLabelText.length == 0\">\r\n  <p-password class=\"password__content\"\r\n  [(ngModel)]=\"value\"\r\n  [weakLabel]=\"weakLabel\"\r\n  [mediumLabel]=\"mediumLabel\"\r\n  [strongLabel]=\"strongLabel\"\r\n  [toggleMask]=\"true\"\r\n  [feedback]=\"feedback\"\r\n  [maxLength]=\"maxLength\"\r\n  [disabled]=\"disabledPassword\"\r\n  (ngModelChange)=\"onChange($event)\">\r\n</p-password>\r\n </div>\r\n  <div *ngIf=\"this.floatLabelText.length !=0\">\r\n  <span class=\"p-float-label password__label p-input-icon-left\">\r\n  <p-password class=\"password__content\"\r\n  id=\"float-password\"\r\n  [(ngModel)]=\"value\"\r\n  [weakLabel]=\"weakLabel\"\r\n  [mediumLabel]=\"mediumLabel\"\r\n  [strongLabel]=\"strongLabel\"\r\n  [toggleMask]=\"true\"\r\n  [feedback]=\"feedback\"\r\n  [maxLength]=\"maxLength\"\r\n  [disabled]=\"disabledPassword\"\r\n  (ngModelChange)=\"onChange($event)\">\r\n</p-password>\r\n<label for=\"float-password\" class=\"password__content--label\">{{ floatLabelText }}</label>\r\n</span>\r\n </div>\r\n</section>\r\n"
        },
        {
            "name": "PersonalTrainerComponent",
            "id": "component-PersonalTrainerComponent-13a1ac8119656c51440b0270ff97f0f7c3f7d0ac63acd7ba9c1ca4414dcc6efc24caae066a6c494a2f9667e34f905de13ea0070dae4400eed85f26167989a54a",
            "file": "src/app/sites/profile/personal-trainer/personal-trainer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-personal-trainer",
            "styleUrls": [
                "./personal-trainer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./personal-trainer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { ProfileService } from 'src/app/api';\nimport { userDataModel } from 'src/app/features';\n\n@Component({\n  selector: 'app-personal-trainer',\n  templateUrl: './personal-trainer.component.html',\n  styleUrls: ['./personal-trainer.component.scss']\n})\nexport class PersonalTrainerComponent {\n\nconstructor(private profileService: ProfileService){}\n\n  public get userData(): userDataModel {\n    return this.profileService.userData;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./personal-trainer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "profileService",
                        "type": "ProfileService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "profileService",
                        "type": "ProfileService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "userData": {
                    "name": "userData",
                    "getSignature": {
                        "name": "userData",
                        "type": "",
                        "returnType": "userDataModel",
                        "line": 14
                    }
                }
            },
            "templateData": "<p>personal-trainer works!</p>\n"
        },
        {
            "name": "PhotoUploaderComponent",
            "id": "component-PhotoUploaderComponent-f9748afe80f28c6699df38eba1c49a466be7a9d87e771cacec9724892d3265a789f4665ad81f64882e48e7b7a9ef750b54a9f510a96c2e0ccbf33c236b86f7e1",
            "file": "src/stories/components/photo-uploader/photo-uploader.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-photo-uploader",
            "styleUrls": [
                "./photo-uploader.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./photo-uploader.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "customUpload",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSelect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "uploadHandler",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onSelectEmitter",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "uploadHandlerEmitter",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'af-photo-uploader',\n  templateUrl: './photo-uploader.component.html',\n  styleUrls: ['./photo-uploader.component.scss']\n})\nexport class PhotoUploaderComponent {\n\n  @Output() uploadHandler:EventEmitter<void> = new EventEmitter();\n  @Output() onSelect:EventEmitter<void> = new EventEmitter();\n  @Input() customUpload: boolean = false;\n\n  constructor(){}\n\n  public onSelectEmitter($event: any):void {\n   this.onSelect.emit($event);\n    }\n\n   public uploadHandlerEmitter($event: any):void {\n    this.uploadHandler.emit($event);\n      }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../constants/constants.scss\";\r\np-fileUpload {\r\n    ::ng-deep .p-button {\r\n      background-color: $darker-gray;\r\n      border-color: transparent;\r\n      box-shadow: 0 0 8px 1px $darker-gray;\r\n      font-family: $font-family;\r\n      font-weight: $font-weight-bold;\r\n      border-radius: 14px;\r\n      padding: 10px 40px;\r\n      transition: .2s;\r\n\r\n      plusicon{\r\n        margin-right: 0.5rem;\r\n        margin-bottom: 2px;\r\n      }\r\n      .p-button-label {\r\n        transition-duration: 0s;\r\n      }\r\n\r\n      &:hover {\r\n        border-color: transparent;\r\n        background-color: $darker-gray;\r\n        color: $input-main-color;\r\n      }\r\n\r\n\r\n    }\r\n\r\n  }",
                    "styleUrl": "./photo-uploader.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "templateData": "<p-fileUpload \nmode=\"advanced\" \n[chooseLabel]=\"'Dodaj Zdjęcie'.toUpperCase()\" \nname=\"photo\" \nmode=\"basic\"\n accept=\"image/*\" \n (onSelect)=\"onSelectEmitter($event)\" \n (uploadHandler)=\"uploadHandlerEmitter($event)\" \n [customUpload]=\"customUpload\"/>\n"
        },
        {
            "name": "PostDetailsComponent",
            "id": "component-PostDetailsComponent-8283298b4a37f06f95a6dc73c38db5d3185f663a850587d11571978256d2ad65fc222de94bbddece0be305cf568aeaefe9a62f63d6b11703d5d77083dc7c3525",
            "file": "src/app/features/components/post-details/post-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-post-details",
            "styleUrls": [
                "./post-details.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./post-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "postData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PostModel",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { PostModel } from 'src/app/features/models';\n\n@Component({\n  selector: 'af-post-details',\n  templateUrl: './post-details.component.html',\n  styleUrls: ['./post-details.component.scss']\n})\nexport class PostDetailsComponent {\npublic postData: PostModel;\n\nconstructor(private dialogService: DynamicDialogConfig){\nthis.postData =this.dialogService.data;\n}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../stories/constants/constants.scss\";\r\n\r\n.post-photo {\r\n  position: absolute;\r\n  inset: 0 0 0 0;\r\n  border-radius: 20px;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: -1;\r\n  object-fit: cover;\r\n}\r\n.content{\r\n    min-height: 30vh;\r\n    position: relative;\r\n    .createAt{\r\n      float: right;\r\n      margin: 20px 0;\r\n      font-style: italic;\r\n    }\r\n}\r\n\r\n::ng-deep .p-dialog {\r\n  .p-dialog-header,\r\n  .p-dialog-content {\r\n    @include transparentBackgroundColorMixin(0.6, $background-dark);\r\n    color: white;\r\n    text-shadow: 1px 1px 2px $background-dark;\r\n  }\r\n\r\n  .p-dialog-header .p-dialog-header-icon {\r\n    background-color: white;\r\n  }\r\n}",
                    "styleUrl": "./post-details.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogService",
                        "type": "DynamicDialogConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "dialogService",
                        "type": "DynamicDialogConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ng-container *ngIf=\"postData\">\n    <img *ngIf=\"postData.photo; else defaultAvatar\" class=\"post-photo\" [src]=\"'data:image/jpeg;base64,' + postData.photo\" alt=\"Post Photo\" />\n      <div class=\"content\">\n          <p class=\"content--text\">{{postData.content}}</p>\n          <p class=\"createAt\">{{\"blog.post.createAt\" | translate}}: {{postData.userName}},\n            {{\"blog.post.date\" | translate}}:\n            {{postData.createdAt ? (postData.createdAt | date: 'dd-MM-yyyy hh:mm'): (\"blog.post.someTimeAgo\" | translate) }}\n          </p>\n      </div>\n\n</ng-container>\n<ng-template #defaultAvatar>\n    <img class=\"post-photo\" src=\"../../../assets/backgrounds/jedzonko.png\" alt=\"image\">\n  </ng-template>\n"
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-060c6736ea07936276ef384fac355e8daaaa4d5408d9a0795bedd75acf30abe7e6dbd37d44734637df6cef51e8e41ed1c53b36fe730413b474512db257421992",
            "file": "src/app/sites/profile/profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-profile",
            "styleUrls": [
                "./profile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "undo",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { userDataModel } from 'src/app/features/models';\r\nimport { ProfileService } from 'src/app/api';\r\n\r\n@Component({\r\n  selector: 'af-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss'],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  constructor(\r\n    private profileService: ProfileService,\r\n    private router: Router,\r\n    private translate: TranslateService) {\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.profileService.getUserData();\r\n    this.translate.use(sessionStorage.getItem(\"language\")!);\r\n  }\r\n  \r\n  public undo(): void {\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n  public get userData(): userDataModel {\r\n    return this.profileService.userData;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../stories/constants/constants.scss\";\r\n@import '~primeicons/primeicons.css';\r\n@import '~@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\n* {\r\n  box-sizing: border-box;\r\n  font-family: $font-family;\r\n}\r\n\r\n.profile {\r\n  background-image: url(\"../../../assets/backgrounds/AF-profile-bg\");\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  height: 100vh;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  padding: 6vh 4vh 2vh 4vh;\r\n  display: flex;\r\n  align-items: stretch;\r\n  justify-content: center;\r\n\r\n  &__container {\r\n    padding: 30px 30px 0 30px;\r\n    width: 60vw;\r\n    position: relative;\r\n    .language-changer {\r\n        position: absolute;\r\n        top: 20px;\r\n        right: 20px;\r\n        ::ng-deep .dropdown{ \r\n          .dropdown__options{\r\n            right:0\r\n          }\r\n        }\r\n    }\r\n  }\r\n\r\n\r\n  &__navigation {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2vh;\r\n    margin-right: 20px;\r\n    width: 15%;\r\n    justify-content: space-between;\r\n\r\n    af-tile {\r\n\r\n      &:nth-child(2) {\r\n        .profile__navigation--information {\r\n          &--main {\r\n            padding: 20px;\r\n            display: flex;\r\n            align-items: flex;\r\n\r\n            .avatar {\r\n                width: 128px;\r\n                height: 128px;\r\n                border-radius: 16px;\r\n                border: #222831 1px solid;\r\n                .custom-avatar{\r\n                  border-radius: 16px;\r\n                    display: block;\r\n                    height: 100%;\r\n                    width: 100%;\r\n                    object-fit: cover;\r\n                    padding: 0;\r\n                }\r\n                img {\r\n                  display: block;\r\n                  height: 128px;\r\n                  padding: 10px;\r\n                  margin: 0 auto;\r\n                }\r\n            }\r\n\r\n            &--fullname {\r\n              display: flex;\r\n              flex-direction: column;\r\n              justify-content: center;\r\n              padding-left: 20px;\r\n\r\n              .name {\r\n                display: flex;\r\n                flex-direction: column;\r\n                font-weight: $font-weight-bold;\r\n              }\r\n\r\n              .lastname {\r\n                display: flex;\r\n                flex-direction: column;\r\n\r\n              }\r\n            }\r\n          }\r\n\r\n          &--other {\r\n            text-align: center;\r\n            font-size: 12px;\r\n\r\n            &--login,\r\n            &--role {\r\n              margin-bottom: 10px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      &:nth-child(3) {\r\n        .af-tile {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: flex-start;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./profile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "profileService",
                        "type": "ProfileService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "profileService",
                        "type": "ProfileService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "userData": {
                    "name": "userData",
                    "getSignature": {
                        "name": "userData",
                        "type": "",
                        "returnType": "userDataModel",
                        "line": 28
                    }
                }
            },
            "templateData": "<section class=\"profile\">\r\n  <div class=\"profile__navigation\" *ngIf=\"userData\">\r\n    <af-tile [darkMode]=\"true\">\r\n      <div class=\"profile__navigatio--logo\">\r\n        <img src=\"../../../assets/logo/logoLightText.svg\">\r\n      </div>\r\n    </af-tile>\r\n    <af-tile>\r\n      <div class=\"profile__navigation--information\">\r\n        <div class=\"profile__navigation--information--main\">\r\n          <div *ngIf=\"userData.photo; else defaultAvatar\" class=\"avatar\">\r\n            <img class=\"custom-avatar\" [src]=\"'data:image/jpeg;base64,' + userData.photo\" alt=\"userData Photo\" />\r\n          </div>\r\n          <div class=\"profile__navigation--information--main--fullname\">\r\n            <p class=\"first-name\">{{userData.firstName}}</p>\r\n            <p class=\"last-name\">{{userData.lastName}}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"profile__navigation--information--other\">\r\n          <p class=\"profile__navigation--information--other--login\">{{userData.email}}</p>\r\n          <div class=\"profile__navigation--information--other--role\">\r\n            <ng-container [ngSwitch]=\"userData.permission\">\r\n              <p *ngSwitchCase=\"'coach'\">Trener</p>\r\n              <p *ngSwitchCase=\"'admin'\">Administrator</p>\r\n              <p *ngSwitchDefault>Klient</p>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </af-tile>\r\n    <af-tile>\r\n      <af-profile-menu (BackEmmiter)=\"undo()\" [isAdmin]=\"userData.permission == 'admin'\" />\r\n    </af-tile>\r\n  </div>\r\n  <af-tile class=\"strech_element--vertically\">\r\n    <section class=\"profile__container\">\r\n      <router-outlet></router-outlet>\r\n      <div class=\"language-changer\">\r\n        <af-languageChanger [fontSize]=\"22\" />\r\n      </div>\r\n    </section>\r\n  </af-tile>\r\n</section>\r\n<ng-template #noData>\r\n  nie ma danych\r\n</ng-template>\r\n<ng-template #defaultAvatar>\r\n  <div class=\"avatar\">\r\n    <img src=\"../../../assets/pictures/avatar.png\" alt=\"userData Photo\" />\r\n  </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "RadioButtonComponent",
            "id": "component-RadioButtonComponent-d3acb2662113205df8735a1ec52b19a2f4a0905c61fdd6febfb998ed5fee1e3aed62d4fe0105fb2fbb8645b4f5c90e00b3f38d2134332afbe6ce250e9473be61",
            "file": "src/stories/components/radiobutton/radiobutton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-radioButtons",
            "styleUrls": [
                "./radiobutton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./radiobutton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "categories",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "Categories[]",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "selectedCategory",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Categories | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output } from '@angular/core';\r\nimport { Categories } from 'src/stories/interfaces/radiobutton.model';\r\n\r\n@Component({\r\n  selector: 'af-radioButtons',\r\n  templateUrl: './radiobutton.component.html',\r\n  styleUrls: ['./radiobutton.component.scss'],\r\n})\r\nexport class RadioButtonComponent {\r\n  @Input() categories: Categories[] = [];\r\n  @Input() disabled: boolean = false;\r\n  @Input() selectedCategory: Categories | null = null;\r\n\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../constants/constants.scss\";\r\n\r\nsection{\r\n \r\n}\r\nlabel{\r\n  margin-left: 12px;\r\n}\r\n.radioButtons{\r\n  font-size: 25px;\r\n  &--container{\r\n    display: flex;\r\n    align-items: center;\r\n  \r\n  }\r\n  &--content{\r\n    margin-left: 10px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./radiobutton.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "templateData": "<section class=\"radioButtons--container\">\r\n  <ng-content class=\"radioButtons\"></ng-content>\r\n  <div *ngFor=\"let category of categories\" class=\"radioButtons--content\">\r\n    <p-radioButton\r\n      [inputId]=\"category.key\"\r\n      name=\"category\"\r\n      [value]=\"category\"\r\n      [(ngModel)]=\"selectedCategory\"\r\n      [disabled]=\"disabled\"\r\n    ></p-radioButton>\r\n    <label [for]=\"category.key\">{{ category.name }}</label>\r\n  </div>\r\n</section>\r\n"
        },
        {
            "name": "RatingComponent",
            "id": "component-RatingComponent-db49311a12a538c88460511ed6354b6d4b2f0a78440ab9629a49f3597c104db00c0066b7d0589a4d64d08a6c71a9a0e5c6a50514462c55387e3bec2da3fdf021",
            "file": "src/stories/components/rating/rating.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-rating",
            "styleUrls": [
                "./rating.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./rating.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cancel",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "stars",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ss",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "val",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'af-rating',\r\n  templateUrl: './rating.component.html',\r\n  styleUrls: ['./rating.component.scss']\r\n})\r\nexport class RatingComponent {\r\n@Input() public label: string = \"\";\r\n@Input() public disable: boolean = false;\r\n@Input() public readonly: boolean = false;\r\n@Input() public cancel: boolean = false;\r\n@Input() public stars: number = 5;\r\npublic val: number = 0;\r\nss: any;\r\nconstructor(){\r\n\r\n}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./rating.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "templateData": "    <p-rating [(ngModel)]=\"val\"\r\n    [stars]=\"stars\"\r\n    [cancel]=\"cancel\"\r\n    >\r\n</p-rating>\r\n"
        },
        {
            "name": "RegisterComponent",
            "id": "component-RegisterComponent-b8a9a1cfec17d2b54404a482ff8d8b41142908163b0365317c5ce56ecaa628cf65830c56f54eaeba7018ceee77de016bf439ff07225d2b68a08314cf2a73b7a1",
            "file": "src/app/sites/register/register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register",
            "styleUrls": [
                "./register.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./register.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accountData",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "userDataModel",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "genderArray",
                    "defaultValue": "[\r\n    { name: 'Male', checked: false, key: genderKey.Male },\r\n    { name: 'Female', checked: false, key: genderKey.Female },\r\n    { name: 'Other', checked: false, key: genderKey.other },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GenderModel[]",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "genderCheckboxDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loginData",
                    "defaultValue": "{\r\n    iconClassName: 'pi-user',\r\n    iconFloat: EnumIconFloat.left,\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "inputIconConfig",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "mailData",
                    "defaultValue": "{\r\n    iconClassName: 'pi-envelope',\r\n    iconFloat: EnumIconFloat.left,\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "inputIconConfig",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "beforeSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "buildForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getGender",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "goToWelcomePage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "validReapeatedPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AfMessageService } from 'src/app/features';\r\nimport { userDataModel } from 'src/app/features/models';\r\nimport { GenderModel, genderKey } from 'src/app/features/models/gender.model';\r\nimport { LoginService, RegisterService } from 'src/app/api';\r\n\r\nimport { EnumIconFloat } from 'src/stories/enums/input.enum';\r\nimport { inputIconConfig } from 'src/stories/interfaces/input.model';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  public loginData: inputIconConfig = {\r\n    iconClassName: 'pi-user',\r\n    iconFloat: EnumIconFloat.left,\r\n  };\r\n\r\n  public mailData: inputIconConfig = {\r\n    iconClassName: 'pi-envelope',\r\n    iconFloat: EnumIconFloat.left,\r\n  };\r\n  public genderCheckboxDisabled: boolean = false;\r\n  public accountData: userDataModel = {};\r\n  public form: FormGroup;\r\n  public genderArray: GenderModel[] = [\r\n    { name: 'Male', checked: false, key: genderKey.Male },\r\n    { name: 'Female', checked: false, key: genderKey.Female },\r\n    { name: 'Other', checked: false, key: genderKey.other },\r\n  ];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private messageService: AfMessageService,\r\n    private translateService: TranslateService,\r\n    private registerService: RegisterService,\r\n    private loginServ: LoginService,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.translateService.setDefaultLang(\r\n      sessionStorage.getItem('language') || 'en'\r\n    );\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n\r\n  public submit(): void {\r\n    this.beforeSubmit();\r\n    if(this.form.invalid){\r\n      this.messageService.addErrorMessage('Nie wszystkie pola są wypełnione');\r\n      return;\r\n    }\r\n      this.registerService.register(this.form.value).subscribe(res=>{\r\n        this.messageService.addSuccesMessage('Zostałeś Zarejestrowany');\r\n        this.loginServ.setLoggedUserId(res.id);\r\n        setTimeout(()=>{\r\n          this.router.navigate(['/home']);\r\n        },2000);\r\n      })\r\n  }\r\n\r\n  public goToWelcomePage(): void {\r\n    this.router.navigate(['/welcome']);\r\n  }\r\n\r\n  public getGender(event: any, id: number): void {\r\n    this.genderArray[id].checked = event;\r\n    this.genderCheckboxDisabled = this.genderArray.some(\r\n      (gender) => gender.checked\r\n    );\r\n    this.form.controls[\"gender\"].setValue(this.genderArray[id].key);  \r\n  }\r\n\r\n\r\n  private beforeSubmit(): void {\r\n    if (this.validReapeatedPassword()) {\r\n      this.messageService.addErrorMessage('Podane hasła nie są identyczne');\r\n     return;\r\n    } \r\n  }\r\n\r\n  private validReapeatedPassword(): boolean {\r\n    const {password, repeatedPassword} = this.form.value;\r\n    return password === repeatedPassword;\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = this.formBuilder.group({\r\n      firstName: [\"\", Validators.required],\r\n      lastName: [\"\", Validators.required],\r\n      login: [\"\", Validators.required],\r\n      email: [\"\", Validators.required],\r\n      password: [\"\", Validators.required],\r\n      repeatPassowrd: [\"\", Validators.required],\r\n      phoneNumber: [\"\", Validators.required],\r\n      address: [\"\", Validators.required],\r\n      gender: [\"\", Validators.required],\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../stories/constants/constants.scss\";\r\n\r\n.bg-img {\r\n  background: url(\"../../../assets/backgrounds/AF-desktop-registerPage-background.png\");\r\n  background-size: 100%;\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  height: 130vh;\r\n}\r\n\r\n.register-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  .logo-section {\r\n    &__af {\r\n      padding: 25px 0 25px 0;\r\n    }\r\n\r\n    img {\r\n      width: 150px;\r\n      filter: invert(1);\r\n    }\r\n  }\r\n\r\n  .register-section {\r\n    width: 700px;\r\n\r\n    af-tile {\r\n      position: relative;\r\n\r\n      .register-content {\r\n        width: 400px;\r\n        margin: 0 auto;\r\n        padding: 30px 0 5px;\r\n\r\n        .register--gender__selection {\r\n\r\n          &__buttons {\r\n            display: flex;\r\n            gap: 20px;\r\n            align-items: center;\r\n\r\n            &--header {\r\n              margin-left: 10px;\r\n              font-size: $checkbox-register;\r\n              font-weight: $font-weight-bold;\r\n            }\r\n\r\n            &--checkbox {\r\n              ::ng-deep .checkbox--container {\r\n                label.p-checkbox-label {\r\n                  font-size: $checkbox-register;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    &__justify {\r\n      width: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 28px;\r\n    }\r\n  }\r\n\r\n  .button__language {\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 20px;\r\n  }\r\n\r\n  .button__return-right {\r\n    position: absolute;\r\n    top: 20px;\r\n    right: 20px;\r\n  }\r\n\r\n  .button__mid {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n}\r\n\r\n.button__mid {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.box-have-account {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-bottom: 10px;\r\n\r\n  &__reference {\r\n    margin-top: 20px;\r\n    color: $input-main-color;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n.validoation__container {\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n}\r\n",
                    "styleUrl": "./register.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "messageService",
                        "type": "AfMessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "registerService",
                        "type": "RegisterService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loginServ",
                        "type": "LoginService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "messageService",
                        "type": "AfMessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "registerService",
                        "type": "RegisterService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loginServ",
                        "type": "LoginService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"bg-img\">\r\n  <section class=\"register-container\">\r\n    <div class=\"logo-section\">\r\n      <div class=\"logo-section__af\">\r\n        <img src=\"../../../assets/logo/logoFt_text.svg\" alt=\"test\">\r\n      </div>\r\n    </div>\r\n    <div class=\"register-section\">\r\n      <af-tile>\r\n        <div class=\"button__language\">\r\n          <af-languageChanger [fontSize]=\"22\"/>\r\n        </div>\r\n        <div class=\"button__return-right\">\r\n          <af-button iconClassName=\"pi-undo\" iconPos=\"top\" [label]=\"'button.back' | translate\" buttonId=\"undo\" [fontSize]=\"10\"\r\n            [iconSize]=\"18\" [transparentButton]=\"true\" (click)=\"goToWelcomePage()\"/>\r\n        </div>\r\n        <div class=\"register-content\">\r\n         <form [formGroup]=\"form\">\r\n          <div class=\"register-section__justify\">\r\n            <af-input formControlName=\"firstName\" id=\"firstName\" [iconConfig]=\"loginData\" [floatLabel]=\"true\" [floatLabelText]=\"'registerLogin.firstName' | translate\" />\r\n            <af-input formControlName=\"lastName\" id=\"firstName\" [iconConfig]=\"loginData\" [floatLabel]=\"true\" [floatLabelText]=\"'registerLogin.lastName' | translate\" />\r\n            <af-input formControlName=\"phoneNumber\" id=\"firstName\" [iconConfig]=\"loginData\" [floatLabel]=\"true\" [floatLabelText]=\"'registerLogin.phoneNumber' | translate\" />\r\n            <af-input formControlName=\"address\" id=\"firstName\" [iconConfig]=\"loginData\" [floatLabel]=\"true\" [floatLabelText]=\"'registerLogin.address' | translate\" />\r\n            <af-input formControlName=\"login\" id=\"firstName\" [iconConfig]=\"loginData\" [floatLabel]=\"true\" [floatLabelText]=\"'registerLogin.login' | translate\" />\r\n            <af-input formControlName=\"email\" id=\"firstName\" [iconConfig]=\"mailData\" [floatLabel]=\"true\" [floatLabelText]=\"'registerLogin.email' | translate\" />\r\n          <div class=\"register--gender__selection\">\r\n            <div class=\"register--gender__selection__buttons\">\r\n              <p class=\"register--gender__selection__buttons--header\">{{'registerLogin.gender' | translate}}</p>\r\n              <div *ngFor=\"let gender of genderArray;  index as id\" [attr.data-index]=\"id\">\r\n                <af-checkbox (checkedToggler)=\"getGender($event, id)\"\r\n                  [disabled]=\"genderCheckboxDisabled && !gender.checked\" [label]=\"gender.name\"\r\n                  class=\"register--gender__selection__buttons--checkbox\"></af-checkbox>\r\n              </div>\r\n          </div>\r\n          </div>\r\n            <af-password formControlName=\"password\" [floatLabelText]=\"'registerLogin.password' | translate\"/>\r\n            <af-password formControlName=\"repeatPassowrd\" [floatLabelText]=\"'registerLogin.repeatPassowrd' | translate\"/>\r\n          <div class=\"button__mid\">\r\n            <af-button [label]=\"'registerLogin.register' | translate\" buttonId=\"register\" [fontSize]=\"30\" (click)=\"submit()\"/>\r\n          </div>\r\n          <div class=\"box-have-account\">\r\n            <p>{{'registerLogin.haveAccount' | translate}} <a routerLink=\"/login\" class=\"box-have-account__reference\">{{'registerLogin.log_in' | translate}}</a></p>\r\n          </div>\r\n        </div>\r\n         </form>\r\n        </div>\r\n      </af-tile>\r\n    </div>\r\n  </section>\r\n</div>\r\n\r\n<section class=\"validoation__container\">\r\n  <af-messages [closable]=\"true\"/>\r\n</section>"
        },
        {
            "name": "TileComponent",
            "id": "component-TileComponent-c6e94b1989a768adcca7ed51c83277e442f5f82b057ac29fabc55259c461622ac457ac1921244f5b0af6b7e6cb8505ec1dcc68bfa27fc63651b5fc3e58e510b6",
            "file": "src/stories/components/tile/tile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "af-tile",
            "styleUrls": [
                "./tile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "darkMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'af-tile',\r\n  templateUrl: './tile.component.html',\r\n  styleUrls: ['./tile.component.scss']\r\n})\r\nexport class TileComponent {\r\n  @Input() public darkMode:boolean = false;\r\nconstructor(){}\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../constants/constants.scss\";\r\n\r\n:host(.strech_element--vertically) {\r\n  .tile_container{\r\n    display: block;\r\n    height: 100%;\r\n  }\r\n  \r\n  \r\n}\r\n.tile_container {\r\n  overflow: hidden;\r\n  box-shadow: 0 0 20px 1px $darker-gray;\r\n  border-radius: 15px;\r\n  min-width: 100px;\r\n  min-height: 100px;\r\n\r\n  &--light {\r\n    background-color: $background-white-opacity;\r\n  }\r\n\r\n  &--dark {\r\n    background-color: $darker-gray;\r\n  }\r\n}\r\n",
                    "styleUrl": "./tile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<section class=\"tile_container\" [ngClass]=\"darkMode ? 'tile_container--dark': 'tile_container--light'\">\r\n  <ng-content></ng-content>\r\n</section>"
        },
        {
            "name": "TrainersComponent",
            "id": "component-TrainersComponent-24adcfada6206bdae79a456f53675d347a6cfdf60061dd2bd78d37515efaf97c63060854899ff03c324aa2dcf84eef7a94c30fe247a8e44775bd0e3545d0742b",
            "file": "src/app/sites/trainers/trainers.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-trainers",
            "styleUrls": [
                "./trainers.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./trainers.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "trainers$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<userDataModel[]>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { userDataModel } from 'src/app/features/models';\nimport { TrainersService } from 'src/app/api';\n\n@Component({\n  selector: 'app-trainers',\n  templateUrl: './trainers.component.html',\n  styleUrls: ['./trainers.component.scss']\n})\nexport class TrainersComponent {\n  public trainers$: Observable<userDataModel[]>;\n  constructor( private trainersService: TrainersService){\n    this.trainers$ = this.trainersService.getTrainers();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../stories/constants/constants.scss\";\r\n\r\n.backgroud {\r\n  background-image: url('../../../assets/backgrounds/AF-desktop-main-background.png');\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-attachment: fixed;\r\n\r\n  .header{\r\n    @include header-style;\r\n  }\r\n\r\n.navi-bar {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  z-index: 1001;\r\n}\r\n\r\n.logo {\r\n  display: block;\r\n  margin: 0 auto;\r\n  padding-top: 100px;\r\n  text-align: center;\r\n  height: 40vh;\r\n}\r\n\r\n.trainers {\r\n  min-height: 100vh;\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 20px;  \r\n  padding: 50px; \r\n\r\n  .trainer{\r\n    padding-bottom: 10px;\r\n    min-height: 30vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    &>div{\r\n    padding: 10px;\r\n    cursor: default;\r\n    }\r\n    &-name{\r\n        flex: 1;\r\n        width: 100%;\r\n        background-color: $background-dark;\r\n        color: $input-text-accent;\r\n        font-weight: $font-weight-bold;\r\n        font-size: 32px;\r\n        text-align: center;\r\n        &--info{\r\n            margin-top: 40px;\r\n            font-size: 20px;\r\n        }\r\n    }\r\n    &-info{\r\n        flex: 2;\r\n        font-size: 18px;\r\n        h3{\r\n            padding-top: 8px;\r\n        }\r\n    }\r\n  }\r\n  \r\n}\r\n}",
                    "styleUrl": "./trainers.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "trainersService",
                        "type": "TrainersService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "trainersService",
                        "type": "TrainersService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"backgroud\">\n  <div class=\"navi-bar\">\n    <af-menuStatic></af-menuStatic>\n  </div>\n  <img class=\"logo\" src=\"../../../assets/logo/logoLightText.svg\" alt=\"logo\">\n  <h1 class=\"header\">{{\"trainers.header\" | translate}}</h1>\n  <section class=\"trainers\">\n    <ng-container *ngIf=\"trainers$ | async as trainers\">\n      <af-tile *ngFor=\"let trainer of trainers\">\n        <div class=\"trainer\">\n          <div class=\"trainer-name\">\n            <p> {{trainer.firstName}} {{trainer.lastName}}</p>\n            <p class=\"trainer-name--info\"> Koszt wynajęcia trenera ustalacie indywidualnie</p>\n          </div>\n          <div class=\"trainer-info\">\n           \n            <h3>Kontakt:</h3>\n            <p><strong>Email:</strong> {{trainer.email}}</p>\n            <p><strong>Numer Telefonu:</strong> {{trainer.phoneNumber}}</p>\n          </div>\n        </div>\n      </af-tile>\n    </ng-container>\n  </section>\n  <af-footer></af-footer>\n</div>"
        },
        {
            "name": "WelcomePageComponent",
            "id": "component-WelcomePageComponent-599f4a8a196b4489a5dabf808186580619953acd682755b8d799d57d8329aaf226a46b098c18911ff841732585ffcd300f4c001eaad519496acaa3ad381855ec",
            "file": "src/app/sites/welcomePage/welcomePage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-welcomePage",
            "styleUrls": [
                "./welcomePage.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./welcomePage.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "goToLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "goToRegister",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-welcomePage',\r\n  templateUrl: './welcomePage.component.html',\r\n  styleUrls: ['./welcomePage.component.scss']\r\n})\r\nexport class WelcomePageComponent {\r\n  constructor(private router: Router, private translateService: TranslateService) { \r\n    sessionStorage.setItem('language',sessionStorage.getItem(\"language\") || (\"en\"));\r\n    this.translateService.setDefaultLang(sessionStorage.getItem(\"language\")!);\r\n  }\r\n\r\n  public goToLogin(): void {\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n  public goToRegister(): void {\r\n    this.router.navigate(['/register']);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "*, body, html{\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.row{\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-image: url('../../../assets/backgrounds/AF-desktop-wellcomePage-background.png');\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n\r\n}\r\n\r\n\r\n.homePage-container {\r\n  display: grid;\r\n  grid-template-columns: 0.8fr 1.1fr 1.1fr;\r\n  grid-template-rows: 1fr 1fr 1fr;\r\n  gap: 20px 20px;\r\n  grid-template-areas:\r\n    \"slajdy panel__login-register panel__login-register\"\r\n    \"slajdy panel__login-register panel__login-register\"\r\n    \"slajdy signUs other\";\r\n  margin: auto;\r\n  width: 1280px;\r\n}\r\n\r\n.slajdy {\r\n  grid-area: slajdy;\r\n\r\n  &__content {\r\n  height: 700px;\r\n  background: url('../../../assets/backgrounds/victor-freitas-WvDYdXDzkhs-unsplash.jpg');\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n  border-radius: 15px;\r\n  }\r\n}\r\n\r\n.panel {\r\n  &__login-register {\r\n    grid-area: panel__login-register;\r\n    position: relative;\r\n    .button__language{\r\n      position: absolute;\r\n      top: 20px;\r\n      right: 20px;\r\n      ::ng-deep .dropdown{ \r\n        .dropdown__options{\r\n          right:0\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &__logo {\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 50px 0 0 0;\r\n\r\n    img {\r\n      max-height: 150px;\r\n    }\r\n  }\r\n\r\n  &__center {\r\n    display: inline-flexbox;\r\n    padding: 60px;\r\n\r\n      &-btn{\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        padding: 10px;\r\n        ::ng-deep .button__content{\r\n          .p-button{\r\n            width: 440px;\r\n            letter-spacing: 2px;\r\n          }\r\n        }\r\n    }\r\n  }\r\n}\r\n\r\n.signUs {\r\n  grid-area: signUs;\r\n\r\n  &__content {\r\n    display: flex;\r\n    justify-content: center;\r\n    color: #fff;\r\n    font-size: 5em;\r\n    text-align: center;\r\n    padding: 10px 85px;\r\n  }\r\n}\r\n\r\n.other {\r\n  grid-area: other;\r\n\r\n  &__content {\r\n    display: flex;\r\n    justify-content: center;\r\n    color: #fff;\r\n    padding: 20px 100px;\r\n    font-size: 3em;\r\n    text-align: center;\r\n  }\r\n}\r\n",
                    "styleUrl": "./welcomePage.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"row\">\r\n  <section class=\"homePage-container\">\r\n    <af-tile class=\"slajdy\">\r\n      <div class=\"slajdy__content\">\r\n      </div>\r\n    </af-tile>\r\n    <af-tile class=\"panel__login-register\">\r\n      <div class=\"button__language\">\r\n        <af-languageChanger [fontSize]=\"22\"></af-languageChanger>\r\n      </div>\r\n      <div class=\"panel__logo\">\r\n        <img src=\"../assets/logo/logoColor.svg\" alt=\"Ambasada Formy logo\">\r\n      </div>\r\n      <div class=\"panel__center\">\r\n        <div class=\"panel__center-btn\">\r\n          <af-button [label]=\"'welcomePage.login' | translate\" (click)=\"goToLogin()\" buttonId=\"login\" [fontSize]=\"27\"></af-button>\r\n        </div>\r\n        <div class=\"panel__center-btn\">\r\n          <af-button [label]=\"'welcomePage.register' | translate\" (click)=\"goToRegister()\" buttonId=\"register\" [fontSize]=\"27\"></af-button>\r\n        </div>\r\n      </div>\r\n    </af-tile>\r\n    <af-tile [darkMode]=\"true\" class=\"signUs\">\r\n      <h3 class=\"signUs__content\">{{'welcomePage.joinUs' | translate}}</h3>\r\n    </af-tile>\r\n    <af-tile [darkMode]=\"true\" class=\"other\">\r\n      <h3 class=\"other__content\">{{'welcomePage.workEffectsGoals' | translate}}</h3>\r\n    </af-tile>\r\n  </section>\r\n</div>\r\n<af-footer></af-footer>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AFAvatarModule",
            "id": "module-AFAvatarModule-465bce4a36871627b132197a1982c2d936155224555a9eab3d288e94b8b679e9866ad18b8455f0ce2a16d486f454cd3947edd33652df0958f0a9b9bb9975342c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/avatar/avatar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AvatarComponent } from './avatar.component';\r\nimport { AvatarModule } from 'primeng/avatar';\r\nimport { FormsModule } from '@angular/forms';\r\n@NgModule({\r\n  declarations: [AvatarComponent],\r\n  imports: [CommonModule, AvatarModule, FormsModule],\r\n  exports: [AvatarComponent],\r\n})\r\nexport class AFAvatarModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AvatarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AvatarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AFButtonModule",
            "id": "module-AFButtonModule-c2159b9ef84d5cc5a70cb895590696d86f915c6ea73d23858631427193a9b802fe71c04a77b85efdf9078fc8aa084e9e606bbc7cceefe6fb0bd5b3ddead5db91",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/button/button.module.ts",
            "methods": [],
            "sourceCode": "import {  NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonComponent } from './button.component';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ButtonComponent\r\n  ],\r\n  exports: [\r\n    ButtonComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ButtonModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n})\r\nexport class AFButtonModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AfCheckboxModule",
            "id": "module-AfCheckboxModule-994bdf1b03c1dd188c5d0f633ed02c5e7132b988a86aa4df664c36dff4e674f962a9448bc2ec500cb61a3e8cf037933e20220ea3a7699a536fc2a75e2af258c5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/checkbox/checkbox.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CheckboxComponent } from './checkbox.component';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CheckboxComponent\r\n  ],\r\n  exports: [\r\n    CheckboxComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    CheckboxModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n})\r\nexport class AfCheckboxModule {\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AFDropdownModule",
            "id": "module-AFDropdownModule-a9324b870a052f2428187733d6cc6a776173c8912aa174854d04c68a6cdc40cfd57da80b09d844c567c506b357850b8f153662472423915169ad0e9ea25a1f8a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/dropdown/dropdown.model.ts",
            "methods": [],
            "sourceCode": "import {  NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DropdownComponent } from './dropdown.component';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DropdownComponent\r\n  ],\r\n  exports: [\r\n    DropdownComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DropdownModule,\r\n    FormsModule\r\n  ],\r\n})\r\nexport class AFDropdownModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DropdownComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DropdownComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AFGymPassCardModule",
            "id": "module-AFGymPassCardModule-8b44678c63905c2971bb399d9b6fc8b73261e1c829dd2839d732e5d56976cdf16a4b231ad72955885c30bdba7d6d404a40fc3c9dc117d5c406293d9d09488676",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/gym-pass-card/gym-pass-card.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AFGymPassCardComponent } from './gym-pass-card.component';\r\nimport { AFButtonModule } from '../button/button.module';\r\nimport { AFTileModule } from '../tile/tile.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [AFGymPassCardComponent],\r\n  imports: [CommonModule,\r\n    AFButtonModule,\r\n    AFTileModule,\r\n    TranslateModule.forChild()\r\n  ],\r\n  exports: [AFGymPassCardComponent],\r\n})\r\nexport class AFGymPassCardModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AFGymPassCardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AFButtonModule"
                        },
                        {
                            "name": "AFTileModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AFGymPassCardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AFIconShadowModule",
            "id": "module-AFIconShadowModule-bf94d7f73366b9b99a8d92951d4c9737fcc5369e44341e93635327e426cc952e6941e725006b56c8f7449aa22c8bc5664c4eb6bd7f1bc9c4c137148fb36247c4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/iconShadow/iconShadow.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AFIconShadowComponent } from './iconShadow.component';\r\n\r\n@NgModule({\r\n  declarations: [AFIconShadowComponent],\r\n  imports: [CommonModule],\r\n  exports: [AFIconShadowComponent],\r\n})\r\nexport class AFIconShadowModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AFIconShadowComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AFIconShadowComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AfInputTextareaModule",
            "id": "module-AfInputTextareaModule-3b6ca4de59b8044f9606cc0e2b5460739634f704c121b09a48db75135c81c32bed5e6802b4319e69a70ba3d395a3a332b59d8bdd2587991c35f7509230e25d22",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/inputTextarea/inputtextarea.module.ts",
            "methods": [],
            "sourceCode": "import {  NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InputTextareaComponent } from './inputtextarea.component';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FloatLabelModule } from 'primeng/floatlabel';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    InputTextareaComponent\r\n  ],\r\n  exports: [\r\n    InputTextareaComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    InputTextareaModule,\r\n    FormsModule,\r\n    FloatLabelModule\r\n  ],\r\n})\r\nexport class AfInputTextareaModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InputTextareaComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "InputTextareaComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AFKnobModule",
            "id": "module-AFKnobModule-4f6c0aaa63858c834ec668892d57c6c9ff01d3accece5d115f3f70a9ae5a6f5b436afacb8b2f9ee01e33900b5f50ae9d0fe039e0dcc4eac35eed0be2156cea4c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/knob/knob.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { KnobComponent } from './knob.component';\r\nimport { KnobModule } from 'primeng/knob';\r\nimport { FormsModule } from '@angular/forms';\r\n@NgModule({\r\n  declarations: [KnobComponent],\r\n  imports: [CommonModule, KnobModule, FormsModule],\r\n  exports: [KnobComponent],\r\n})\r\nexport class AFKnobModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "KnobComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "KnobComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AfMessagesModule",
            "id": "module-AfMessagesModule-f2fa2de18cd73d9d4697bd2cf101383f3bb8b0373f64b326f12d65ee8ec70962b5b161f56c7c86fcdd20494835d35a1479360c78ebe5827cf13f47197839dec2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/messages/messages.module.ts",
            "methods": [],
            "sourceCode": "import {  NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MessagesComponent } from './messages.component';\r\nimport { MessagesModule } from 'primeng/messages';\r\n@NgModule({\r\n  declarations: [\r\n    MessagesComponent\r\n  ],\r\n  exports: [\r\n    MessagesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MessagesModule,\r\n  ],\r\n})\r\nexport class AfMessagesModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MessagesComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MessagesComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AfPasswordModule",
            "id": "module-AfPasswordModule-6d01f32a6a077eddd61466899272a2fb17a44f7277fa3299d6dbf11ae834c566c61342950af5cd9f2406443b08ec9312e20b08733afff402a556561420b2eec8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/password/password.module.ts",
            "methods": [],
            "sourceCode": "import { forwardRef, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PasswordComponent } from './password.component';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { DividerModule } from 'primeng/divider';\r\n@NgModule({\r\n  declarations: [PasswordComponent],\r\n  exports: [PasswordComponent],\r\n  imports: [CommonModule, PasswordModule, FormsModule,DividerModule],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PasswordComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class AfPasswordModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PasswordComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PasswordComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AFPhotoUploaderModule",
            "id": "module-AFPhotoUploaderModule-f2a8eb178a4b156833f39fb2c191bdd404397609c130c979939709e5eb69a411658cf88945c88b8fb16b3bbb2a8e998970e4b0ccda465b25b5e3caf095f33f8c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/photo-uploader/photo-uploader.module.ts",
            "methods": [],
            "sourceCode": "import {  NgModule} from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { PhotoUploaderComponent } from './photo-uploader.component';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PhotoUploaderComponent\r\n  ],\r\n  exports: [\r\n    PhotoUploaderComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FileUploadModule,\r\n    TranslateModule.forChild(),\r\n  ],\r\n})\r\nexport class AFPhotoUploaderModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PhotoUploaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PhotoUploaderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AFProfileMenuModule",
            "id": "module-AFProfileMenuModule-7fce4e87f6a1d5799eede621f1506cb514941e9e01c4e99451647be4d5b9729bec23cf7e04561a23718d813226f721272a270caa54e6f2f49a7369bae6a835f7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/profile-menu/profile-menu.module.ts",
            "methods": [],
            "sourceCode": "import {  NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AFProfileMenuComponent } from './profile-menu.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AFButtonModule } from '../button/button.module';\r\nimport { AppRoutingModule } from 'src/app/app-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AFProfileMenuComponent\r\n  ],\r\n  exports: [\r\n    AFProfileMenuComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AFButtonModule,\r\n    TranslateModule.forChild(),\r\n    AppRoutingModule,\r\n  ],\r\n})\r\nexport class AFProfileMenuModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AFProfileMenuComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AFButtonModule"
                        },
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AFProfileMenuComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AFRadiobuttonModule",
            "id": "module-AFRadiobuttonModule-16031431ddb3032d9a8a8688491b1f4ba32e29c88cea354475548d756373f9871efc25ee296704e9e74131c8bd66ec4018544ab3d8ea001b7cc7e8230fc5b58e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/radiobutton/radiobutton.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RadioButtonComponent } from './radiobutton.component';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [RadioButtonComponent],\r\n  imports: [CommonModule, RadioButtonModule, FormsModule],\r\n  exports: [RadioButtonComponent],\r\n})\r\nexport class AFRadiobuttonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RadioButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RadioButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AFRatingModule",
            "id": "module-AFRatingModule-3d810d63d4ffb254afcb56227450ca2e24e687e43ca2b09bbb84f17e8c1fd42688f840451bf077dc17acd0b978319aac850112e1fe401d036957859bb7ce565c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/rating/rating.module.ts",
            "methods": [],
            "sourceCode": "import {  NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RatingComponent } from './rating.component';\r\nimport {RatingModule} from 'primeng/rating';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RatingComponent\r\n  ],\r\n  exports: [\r\n    RatingComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RatingModule,\r\n    FormsModule\r\n  ],\r\n})\r\nexport class AFRatingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RatingComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RatingComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AFTableModule",
            "id": "module-AFTableModule-b7659c9b3c479820dbbe46b049448e3e984618becf5f1800250e5d8d98c2c2b006b9c670370fb4cc801955119f023dfdde6af41508abce970b9aba30b34f1645",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/table/table.module.ts",
            "methods": [],
            "sourceCode": "import {  NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AFTableComponent } from './table.component';\r\nimport { TableModule } from 'primeng/table';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AFTableComponent\r\n  ],\r\n  exports: [\r\n    AFTableComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TableModule,\r\n    FormsModule\r\n  ],\r\n})\r\nexport class AFTableModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AFTableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AFTableComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AFTileModule",
            "id": "module-AFTileModule-f3e4fa6736970af441bf2c1cc244d7fff4e1385d5c2d645962a819e59ff13da1f9de09423b8399744cf126909529a4b6ec1f8a0ee18ecd0a26ece5bde6e9a5f6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/tile/tile.module.ts",
            "methods": [],
            "sourceCode": "import {  NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TileComponent } from './tile.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TileComponent\r\n  ],\r\n  exports: [\r\n    TileComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n})\r\nexport class AFTileModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TileComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TileComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppCalendarModule",
            "id": "module-AppCalendarModule-811f72b7748597cf6226f857c04d56c2eb7f3054323d7505e0e725b08ad095a1484e76a9d6e1de6a2bc9393ed327cd24e8889d00e8a7722eef3c77568c5c4716",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/calendar/calendar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CalendarComponent } from './calendar.component';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CalendarComponent\r\n  ],\r\n  exports: [\r\n    CalendarComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CalendarModule,\r\n    FormsModule,\r\n  ],\r\n})\r\nexport class AppCalendarModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CalendarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CalendarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-904493f4870275b5275715b6e68c7a213377cdc21055bb0b3f9dcde205636bb7e55739a9bed44182860ee9aaccab7e69b219bbf865f5a494d1b2de5893143279",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AFButtonModule } from 'src/stories/components/button/button.module';\nimport { InputModule } from 'src/stories/components/input/input.module';\nimport { AFTileModule } from 'src/stories/components/tile/tile.module';\nimport { HttpClient, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { FooterModule } from 'src/stories/components/footer/footer.module';\nimport { AFRadiobuttonModule } from \"../stories/components/radiobutton/radiobutton.module\";\nimport { MessagesModule } from 'primeng/messages';\nimport { AfMessagesModule } from 'src/stories/components/messages/messages.module';\nimport { AfPasswordModule } from 'src/stories/components/password/password.module';\nimport { AfMessageService } from './features/services/message.service';\nimport { MessageService } from 'primeng/api';\nimport { LanguageChangerModule } from \"../stories/components/languageChanger/languageChanger.module\";\nimport { MenuStaticModule } from \"../stories/components/menuStatic/menuStatic.module\";\nimport { PaginatorModule } from 'primeng/paginator';\nimport { AfCheckboxModule } from 'src/stories/components/checkbox/checkbox.module';\nimport { WelcomePageComponent, LoginComponent, RegisterComponent, HomePageComponent, GymPassComponent, MyProfileComponent, BlogComponent, ProfileComponent, GymPassesComponent, PersonalTrainerComponent, DietsComponent } from './sites';\nimport { AFProfileMenuModule } from \"../stories/components/profile-menu/profile-menu.module\";\nimport { HttpLoaderFactory } from 'src/shared/untils';\nimport { AvatarModule } from 'primeng/avatar';\nimport { TrainersComponent } from './sites/trainers/trainers.component';\nimport { AdminPageComponent } from './sites/profile/admin-page/admin-page.component';\nimport { AfInputTextareaModule } from 'src/stories/components/inputTextarea/inputtextarea.module';\nimport { DialogService, DynamicDialogModule } from 'primeng/dynamicdialog';\nimport { NewPostFormComponent } from './features/components';\nimport { AFPhotoUploaderModule } from 'src/stories/components/photo-uploader/photo-uploader.module';\nimport { AFGymPassCardModule } from 'src/stories/components/gym-pass-card/gym-pass-card.module';\nimport { GymPassInfoModule } from 'src/stories/components/gym-pass-info/gym-pass-info.module';\nimport { PostDetailsComponent } from './features/components/post-details/post-details.component';\nimport { DatePipe } from '@angular/common';\n@NgModule({ declarations: [\n        AppComponent,\n        WelcomePageComponent,\n        LoginComponent,\n        HomePageComponent,\n        GymPassComponent,\n        MyProfileComponent,\n        ProfileComponent,\n        GymPassesComponent,\n        PersonalTrainerComponent,\n        DietsComponent,\n        TrainersComponent,\n        AdminPageComponent,\n        NewPostFormComponent,\n        BlogComponent,\n        RegisterComponent,\n        PostDetailsComponent\n    ],\n    bootstrap: [AppComponent], \n    imports: [AFPhotoUploaderModule,\n        AvatarModule,\n        ReactiveFormsModule,\n        PaginatorModule,\n        AfPasswordModule,\n        AfMessagesModule,\n        MessagesModule,\n        FooterModule,\n        BrowserModule,\n        AppRoutingModule,\n        FormsModule,\n        AfCheckboxModule,\n        DynamicDialogModule,\n        AFButtonModule,\n        InputModule,\n        AFTileModule,\n        AfInputTextareaModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient]\n            }\n        }),\n        AFRadiobuttonModule,\n        LanguageChangerModule,\n        MenuStaticModule,\n        AFProfileMenuModule,\n        AFGymPassCardModule,\n        GymPassInfoModule], \n        providers: [\n            AfMessageService, \n            MessageService, \n            DialogService, \n            provideHttpClient(withInterceptorsFromDi())] })\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AfMessageService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AdminPageComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "BlogComponent"
                        },
                        {
                            "name": "DietsComponent"
                        },
                        {
                            "name": "GymPassComponent"
                        },
                        {
                            "name": "GymPassesComponent"
                        },
                        {
                            "name": "HomePageComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "MyProfileComponent"
                        },
                        {
                            "name": "NewPostFormComponent"
                        },
                        {
                            "name": "PersonalTrainerComponent"
                        },
                        {
                            "name": "PostDetailsComponent"
                        },
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "RegisterComponent"
                        },
                        {
                            "name": "TrainersComponent"
                        },
                        {
                            "name": "WelcomePageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AFButtonModule"
                        },
                        {
                            "name": "AFGymPassCardModule"
                        },
                        {
                            "name": "AFPhotoUploaderModule"
                        },
                        {
                            "name": "AFProfileMenuModule"
                        },
                        {
                            "name": "AFRadiobuttonModule"
                        },
                        {
                            "name": "AFTileModule"
                        },
                        {
                            "name": "AfCheckboxModule"
                        },
                        {
                            "name": "AfInputTextareaModule"
                        },
                        {
                            "name": "AfMessagesModule"
                        },
                        {
                            "name": "AfPasswordModule"
                        },
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "FooterModule"
                        },
                        {
                            "name": "GymPassInfoModule"
                        },
                        {
                            "name": "InputModule"
                        },
                        {
                            "name": "LanguageChangerModule"
                        },
                        {
                            "name": "MenuStaticModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-a506b2ad4923749216ca43809b017c7c90d883359b533a8d6ddd76f6b37f2d309e77bb841e3a3382d1e5f463495e62b6a4f2aa5c6af9c70076756b9e734c9692",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { AdminPageComponent, BlogComponent, DietsComponent, GymPassComponent, GymPassesComponent, HomePageComponent, LoginComponent, MyProfileComponent, PersonalTrainerComponent, ProfileComponent, RegisterComponent, TrainersComponent, WelcomePageComponent } from './sites';\r\n\r\nconst routes: Routes = [\r\n{ path: '', redirectTo: '/welcome', pathMatch: 'full' },\r\n{ path: 'welcome', component: WelcomePageComponent },\r\n{ path: 'login', component: LoginComponent },\r\n{ path: 'register', component: RegisterComponent },\r\n{ path: 'home', component: HomePageComponent ,canActivate: [AuthGuard]},\r\n{ path: 'gym-pass', component: GymPassComponent,canActivate: [AuthGuard] },\r\n{ path: 'blog', component: BlogComponent,canActivate: [AuthGuard] },\r\n{ path: 'trainers', component: TrainersComponent,canActivate: [AuthGuard] },\r\n{ \r\n  path: 'profile',\r\n  component: ProfileComponent, canActivate: [AuthGuard],\r\n  children: [\r\n    { path: 'my-profile', component: MyProfileComponent },\r\n    { path: 'personal-trainers', component: PersonalTrainerComponent },\r\n    { path: 'gym-pass', component: GymPassesComponent },\r\n    { path: 'diets', component: DietsComponent },\r\n    { path: 'admin', component: AdminPageComponent },\r\n    { path: '', redirectTo: 'my-profile', pathMatch: 'full' } \r\n  ]\r\n},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\n\r\n\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AutocompeteModule",
            "id": "module-AutocompeteModule-9b49f3ca594a0e8ca823d81dccbc75ad9e00b78fcc0299ecd6624aaa237113bca03d530596f0b0f1e6e7e59bd2f51a208391057ad2eb3b246d5eeded62b86575",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/autocompete/autocomplete.module.ts",
            "methods": [],
            "sourceCode": "import { CUSTOM_ELEMENTS_SCHEMA, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\nimport { AutocompleteComponent } from './autocomplete.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ AutocompleteComponent ],\r\n  imports: [\r\n    CommonModule,\r\n    AutoCompleteModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [ AutocompleteComponent ],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA,\r\n    NO_ERRORS_SCHEMA\r\n  ],\r\n})\r\nexport class AutocompeteModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AutocompleteComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AutocompleteComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChartBarsModule",
            "id": "module-ChartBarsModule-fcedc7d1a24deef250729935419ba8ebdcbe4285c61e07ff5030811df9006280f8138074aed1ce740f8ceba672c7e79be6fc43d3218a7717d2261cad40a0f444",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/chart-bars/chart-bars.module.ts",
            "methods": [],
            "sourceCode": "import {  NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { ChartBarsComponent } from './chart-bars.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ChartBarsComponent\r\n  ],\r\n  exports: [\r\n    ChartBarsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ChartModule,\r\n  ],\r\n})\r\nexport class ChartBarsModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ChartBarsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ChartBarsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FooterModule",
            "id": "module-FooterModule-a283b28ecc01e0e9de6a15e8bee7d147ddb69e8edc54ba31b570c4894129b922b96a4b7ea5cc4e917814f71f5140568cc684ae554fc99d14cdb6ec1a46d69bb0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/footer/footer.module.ts",
            "methods": [],
            "sourceCode": "import {  NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FooterComponent } from './footer.component';\r\nimport { HttpClient, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\n@NgModule({ declarations: [\n        FooterComponent\n    ],\n    exports: [\n        FooterComponent\n    ], imports: [CommonModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: (handler: HttpClient) => { return new TranslateHttpLoader(handler, './assets/i18n/', '.json'); },\n                deps: [HttpClient]\n            }\n        })], providers: [provideHttpClient(withInterceptorsFromDi())] })\r\nexport class FooterModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FooterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FooterComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "GymPassInfoModule",
            "id": "module-GymPassInfoModule-1955bb43c180e5dfc0b6c2d1562df948bd2678c03481fe38c082f707bf89843e72df32f2ad7c678edac2d6d5772c623681e31f7558179f953c48ffa588366b14",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/gym-pass-info/gym-pass-info.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AFButtonModule } from '../button/button.module';\r\nimport { AFTileModule } from '../tile/tile.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { GymPassInfoComponent } from './gym-pass-info.component';\r\n\r\n@NgModule({\r\n  declarations: [GymPassInfoComponent],\r\n  imports: [CommonModule,\r\n    AFButtonModule,\r\n    AFTileModule,\r\n    TranslateModule.forChild()\r\n  ],\r\n  exports: [GymPassInfoComponent],\r\n})\r\nexport class GymPassInfoModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "GymPassInfoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AFButtonModule"
                        },
                        {
                            "name": "AFTileModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "GymPassInfoComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InputModule",
            "id": "module-InputModule-9b0afed7e409800c9cd6c1d07c34b8922e3ea86e6c82539ce7223edc27df8d4b331b9da7a90e2ba8bbd52c793b3a6b7c40ac43c5a88f14f9506b43e1cf788700",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/input/input.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InputComponent } from './input.component';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FloatLabelModule } from 'primeng/floatlabel';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    InputComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    InputTextModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    FloatLabelModule\r\n  ],\r\n  exports: [\r\n    InputComponent\r\n  ]\r\n})\r\n\r\nexport class InputModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "InputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LanguageChangerModule",
            "id": "module-LanguageChangerModule-2251c0fd494f9e0f103b4e4a190e7a613529ecd96d95e7d289c86b832461e5a924a8d0fdc8168d2589d07864f2cb495750f1cbf4078381e4a1b1d662d6f79403",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/languageChanger/languageChanger.module.ts",
            "methods": [],
            "sourceCode": "import {  NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LanguageChangerComponent } from './languageChanger.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { HttpClient, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\n@NgModule({ declarations: [\n        LanguageChangerComponent\n    ],\n    exports: [\n        LanguageChangerComponent\n    ], imports: [CommonModule,\n        FormsModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: (handler: HttpClient) => { return new TranslateHttpLoader(handler, './assets/i18n/', '.json'); },\n                deps: [HttpClient]\n            }\n        })], providers: [provideHttpClient(withInterceptorsFromDi())] })\r\nexport class LanguageChangerModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LanguageChangerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LanguageChangerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MenuStaticModule",
            "id": "module-MenuStaticModule-703b8764a1616cb201250dce9ccca944fdaff005a0b9c3ddec09b6cf4532d4d5b89000ce34bdff7ab83cd0ca4c464152dc66e4611157000f5be2894e322949a3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/components/menuStatic/menuStatic.module.ts",
            "methods": [],
            "sourceCode": "import {  NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MenuStaticComponent } from './menuStatic.component';\r\nimport { HttpClient, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { LanguageChangerModule } from \"../languageChanger/languageChanger.module\";\r\n\r\n@NgModule({ declarations: [\n        MenuStaticComponent\n    ],\n    exports: [\n        MenuStaticComponent\n    ], imports: [CommonModule,\n        TranslateModule.forChild(),\n        LanguageChangerModule], providers: [provideHttpClient(withInterceptorsFromDi())] })\r\nexport class MenuStaticModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MenuStaticComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "LanguageChangerModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MenuStaticComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "BackgorundGymStructure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n  <div>\r\n    <img src=\"assets/backgrounds/Gym-structure-1080x675.png\" alt=\"\" style=\"display: blok; max-width: 50%;\">\r\n</div>\r\n  `,\r\n})"
            },
            {
                "name": "BarBackground",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n  <div>\r\n  <img src=\"assets/backgrounds/victor-freitas-Yuv-iwByVRQ-unsplash.jpg\" alt=\"\" style=\"display: blok; max-width: 50%;\">\r\n</div>\r\n  `,\r\n})"
            },
            {
                "name": "CustomLabels",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/radiobutton/radiobutton.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DarkTile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tile/tile.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    template:`<div style=\" blue; height: 80vh;padding: 50px\">\r\n    <af-tile [darkMode]=\"darkMode\">\r\n    <p style=\"text-align:center; color: #fff\">przykładowe body</p>\r\n    </af-tile>\r\n    </div>`,\r\n  props: {\r\n    darkMode:true\r\n  },\r\n})"
            },
            {
                "name": "DeadliftBackground",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n  <div>\r\n  <img src=\"assets/backgrounds/victor-freitas-qZ-U9z4TQ6A-unsplash.jpg\" alt=\"\" style=\"display: blok; max-width: 50%;\">\r\n</div>\r\n  `,\r\n})"
            },
            {
                "name": "defaultData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "inputIconConfig",
                "defaultValue": "{\r\n  iconClassName: 'pi-search',\r\n  iconFloat: EnumIconFloat.left,\r\n}"
            },
            {
                "name": "dialogConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/features/constants/dialog-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "DynamicDialogConfig",
                "defaultValue": "{\r\n    width: '50%',\r\n    contentStyle: { overflow: 'auto' },\r\n    baseZIndex: 10000,\r\n    modal:true,\r\n    breakpoints: {\r\n    '960px': '75vw',\r\n    '640px': '90vw'\r\n},\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/dropdown/dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/knob/knob.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/messages/messages.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "exampleData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/autocompete/autocomplete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "examplePersonalTrainerModel[]",
                "defaultValue": "[\r\n  {\r\n    id:1,\r\n    name: 'Adam',\r\n    age: '23 lata',\r\n    trainerSkills: 1,\r\n    maxClients: 8,\r\n  },\r\n  {\r\n    id:2,\r\n    name: 'Michał',\r\n    age: '28 lata',\r\n    trainerSkills: 2,\r\n    maxClients: 4,\r\n  },\r\n  {\r\n    id:3,\r\n    name: 'Janina',\r\n    age: '31 lata',\r\n    trainerSkills: 3,\r\n    maxClients: 10,\r\n  },\r\n]"
            },
            {
                "name": "ExapmleValues",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/knob/knob.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FewButtons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "()=>({\r\n  template:`\r\n  <af-button [label]=\"label\" [buttonId]=\"'pierwszy'\" [fontSize]=\"30\"></af-button>\r\n  <br/>\r\n  <af-button [label]=\"label\" [buttonId]=\"'drugi'\" [fontSize]=\"10\"></af-button>\r\n  `,\r\n  props:{\r\n    label: 'Button',\r\n    fontSize: 30\r\n  }\r\n})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/messages/messages.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/avatar/avatar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LightTile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tile/tile.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    template:`<div style=\"background-color: blue; height: 80vh;padding: 50px\">\r\n    <af-tile>\r\n    <p style=\"text-align:center\">przykładowe body</p>\r\n    </af-tile>\r\n    </div>`,\r\n  props: {\r\n    \r\n  },\r\n})"
            },
            {
                "name": "Logo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n  <div style=\"width: 30%; margin:0 auto\">\r\n    <img src=\"assets/logo/logo.svg\" alt=\"\">\r\n</div>\r\n  `,\r\n})"
            },
            {
                "name": "LogoColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n<div style=\"width: 30%; margin:0 auto\">\r\n<img src=\"assets/logo/logoColor.svg\" alt=\"\">\r\n</div>\r\n  `,\r\n})"
            },
            {
                "name": "LogoFTText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n  <div style=\"width: 30%; margin:0 auto\">\r\n  <img src=\"assets/logo/logoFt_text.svg\" alt=\"\">\r\n</div>\r\n  `,\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/backgrounds/checkered-background/checkered-background.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n<section \r\nstyle=\"\r\nheight: 70vh;  \r\nbackground-color: #0e0e0e;  \r\nbackground-image: \r\nlinear-gradient(0deg, #000 5%, transparent 5%, transparent 99%, #000 99%, #000), \r\nlinear-gradient(90deg, #000 5%, #0e0e0e 5%, #0e0e0e 99%, #000 99%, #000);  \r\nbackground-size: 50px 50px;\"\r\n></section>\r\n\r\n`,\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/autocompete/autocomplete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/calendar/calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chart-bars/chart-bars.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/dropdown/dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/footer/footer.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/gym-pass-card/gym-pass-card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/iconShadow/iconShadow.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/inputTextarea/inputtextarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/languageChanger/languageChanger.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menuStatic/menuStatic.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/password/password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/profile-menu/profile-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/radiobutton/radiobutton.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/rating/rating.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Readonly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/knob/knob.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/calendar/calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/password/password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/radiobutton/radiobutton.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SecondDeadliftBackground",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n  <div>\r\n  <img src=\"assets/backgrounds/victor-freitas-WvDYdXDzkhs-unsplash.jpg\" alt=\"\" style=\"display: blok; max-width: 50%;\">\r\n</div>\r\n  `,\r\n})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/avatar/avatar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/messages/messages.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/autocompete/autocomplete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/avatar/avatar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/calendar/calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/chart-bars/chart-bars.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/dropdown/dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/footer/footer.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/gym-pass-card/gym-pass-card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/iconShadow/iconShadow.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/inputTextarea/inputtextarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/knob/knob.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/languageChanger/languageChanger.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menuStatic/menuStatic.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/messages/messages.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/password/password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/profile-menu/profile-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n    template:`\r\n    <section style=\" background-color: grey; height:100vh;\">\r\n    <div style=\" width: 25%; padding: 40px\">\r\n        <af-tile>\r\n            <af-profile-menu />\r\n        </af-tile>\r\n    </div>\r\n    </section>\r\n    `,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/radiobutton/radiobutton.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/rating/rating.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
            },
            {
                "name": "TransparentButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TransparentButtonWithIconOnTop",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/messages/messages.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WhiteButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithButtonBar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/calendar/calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/calendar/calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithReadOnlyInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/calendar/calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithSeconds",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/calendar/calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithShowTime",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/calendar/calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Xlarge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/avatar/avatar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [
            {
                "name": "HttpLoaderFactory",
                "file": "src/shared/untils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "OneRequiredValidator",
                "file": "src/app/features/validators/one-required.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "ValidatorFn"
            }
        ],
        "typealiases": [
            {
                "name": "ApiPostsModel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/features/models/blog.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "ButtonIconPosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
                "file": "src/stories/enums/button.enum.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "GenderModel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/features/models/gender.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "GymPassModel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/features/models/gym-pass.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "LoginModel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/features/models/login.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "PageEventModel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/features/models/page-event.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "PostModel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/features/models/blog.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "PostSearchModel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/features/models/blog.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "shapeType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"square\" | \"circle\" | undefined",
                "file": "src/stories/components/avatar/avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "userDataModel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/features/models/user.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            }
        ],
        "enumerations": [
            {
                "name": "ChartBarsType",
                "childs": [
                    {
                        "name": "bar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pie",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "doughnut",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "line",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "polarArea",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "radar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/stories/interfaces/chartBars.model.ts"
            },
            {
                "name": "EnumIconFloat",
                "childs": [
                    {
                        "name": "left",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "p-input-icon-left"
                    },
                    {
                        "name": "right",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "p-input-icon-right"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/stories/enums/input.enum.ts"
            },
            {
                "name": "genderKey",
                "childs": [
                    {
                        "name": "Male",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "male"
                    },
                    {
                        "name": "Female",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "female"
                    },
                    {
                        "name": "other",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "other"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/features/models/gender.model.ts"
            },
            {
                "name": "trainerSkillsModel",
                "childs": [
                    {
                        "name": "high",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 3
                    },
                    {
                        "name": "medium",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 2
                    },
                    {
                        "name": "low",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 1
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/stories/interfaces/autocomplete.model.ts"
            }
        ],
        "groupedVariables": {
            "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts": [
                {
                    "name": "BackgorundGymStructure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n  <div>\r\n    <img src=\"assets/backgrounds/Gym-structure-1080x675.png\" alt=\"\" style=\"display: blok; max-width: 50%;\">\r\n</div>\r\n  `,\r\n})"
                },
                {
                    "name": "BarBackground",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n  <div>\r\n  <img src=\"assets/backgrounds/victor-freitas-Yuv-iwByVRQ-unsplash.jpg\" alt=\"\" style=\"display: blok; max-width: 50%;\">\r\n</div>\r\n  `,\r\n})"
                },
                {
                    "name": "DeadliftBackground",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n  <div>\r\n  <img src=\"assets/backgrounds/victor-freitas-qZ-U9z4TQ6A-unsplash.jpg\" alt=\"\" style=\"display: blok; max-width: 50%;\">\r\n</div>\r\n  `,\r\n})"
                },
                {
                    "name": "Logo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n  <div style=\"width: 30%; margin:0 auto\">\r\n    <img src=\"assets/logo/logo.svg\" alt=\"\">\r\n</div>\r\n  `,\r\n})"
                },
                {
                    "name": "LogoColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n<div style=\"width: 30%; margin:0 auto\">\r\n<img src=\"assets/logo/logoColor.svg\" alt=\"\">\r\n</div>\r\n  `,\r\n})"
                },
                {
                    "name": "LogoFTText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n  <div style=\"width: 30%; margin:0 auto\">\r\n  <img src=\"assets/logo/logoFt_text.svg\" alt=\"\">\r\n</div>\r\n  `,\r\n})"
                },
                {
                    "name": "SecondDeadliftBackground",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n  <div>\r\n  <img src=\"assets/backgrounds/victor-freitas-WvDYdXDzkhs-unsplash.jpg\" alt=\"\" style=\"display: blok; max-width: 50%;\">\r\n</div>\r\n  `,\r\n})"
                }
            ],
            "src/stories/components/radiobutton/radiobutton.component.stories.ts": [
                {
                    "name": "CustomLabels",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/radiobutton/radiobutton.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/radiobutton/radiobutton.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/radiobutton/radiobutton.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/radiobutton/radiobutton.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/stories/components/tile/tile.component.stories.ts": [
                {
                    "name": "DarkTile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tile/tile.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    template:`<div style=\" blue; height: 80vh;padding: 50px\">\r\n    <af-tile [darkMode]=\"darkMode\">\r\n    <p style=\"text-align:center; color: #fff\">przykładowe body</p>\r\n    </af-tile>\r\n    </div>`,\r\n  props: {\r\n    darkMode:true\r\n  },\r\n})"
                },
                {
                    "name": "LightTile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tile/tile.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    template:`<div style=\"background-color: blue; height: 80vh;padding: 50px\">\r\n    <af-tile>\r\n    <p style=\"text-align:center\">przykładowe body</p>\r\n    </af-tile>\r\n    </div>`,\r\n  props: {\r\n    \r\n  },\r\n})"
                }
            ],
            "src/stories/components/input/input.component.stories.ts": [
                {
                    "name": "defaultData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "inputIconConfig",
                    "defaultValue": "{\r\n  iconClassName: 'pi-search',\r\n  iconFloat: EnumIconFloat.left,\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/app/features/constants/dialog-config.ts": [
                {
                    "name": "dialogConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/features/constants/dialog-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicDialogConfig",
                    "defaultValue": "{\r\n    width: '50%',\r\n    contentStyle: { overflow: 'auto' },\r\n    baseZIndex: 10000,\r\n    modal:true,\r\n    breakpoints: {\r\n    '960px': '75vw',\r\n    '640px': '90vw'\r\n},\r\n}"
                }
            ],
            "src/stories/components/button/button.component.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "FewButtons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "()=>({\r\n  template:`\r\n  <af-button [label]=\"label\" [buttonId]=\"'pierwszy'\" [fontSize]=\"30\"></af-button>\r\n  <br/>\r\n  <af-button [label]=\"label\" [buttonId]=\"'drugi'\" [fontSize]=\"10\"></af-button>\r\n  `,\r\n  props:{\r\n    label: 'Button',\r\n    fontSize: 30\r\n  }\r\n})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                },
                {
                    "name": "TransparentButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TransparentButtonWithIconOnTop",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WhiteButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/components/dropdown/dropdown.component.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/dropdown/dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/dropdown/dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/dropdown/dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
                }
            ],
            "src/stories/components/knob/knob.component.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/knob/knob.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ExapmleValues",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/knob/knob.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Readonly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/knob/knob.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/knob/knob.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/stories/components/messages/messages.component.stories.ts": [
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/messages/messages.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/messages/messages.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/messages/messages.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/messages/messages.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
                },
                {
                    "name": "Warm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/messages/messages.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/components/autocompete/autocomplete.component.stories.ts": [
                {
                    "name": "exampleData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/autocompete/autocomplete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "examplePersonalTrainerModel[]",
                    "defaultValue": "[\r\n  {\r\n    id:1,\r\n    name: 'Adam',\r\n    age: '23 lata',\r\n    trainerSkills: 1,\r\n    maxClients: 8,\r\n  },\r\n  {\r\n    id:2,\r\n    name: 'Michał',\r\n    age: '28 lata',\r\n    trainerSkills: 2,\r\n    maxClients: 4,\r\n  },\r\n  {\r\n    id:3,\r\n    name: 'Janina',\r\n    age: '31 lata',\r\n    trainerSkills: 3,\r\n    maxClients: 10,\r\n  },\r\n]"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/autocompete/autocomplete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/autocompete/autocomplete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
                }
            ],
            "src/stories/components/avatar/avatar.component.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/avatar/avatar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/avatar/avatar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/avatar/avatar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                },
                {
                    "name": "Xlarge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/avatar/avatar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/backgrounds/checkered-background/checkered-background.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/backgrounds/checkered-background/checkered-background.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n<section \r\nstyle=\"\r\nheight: 70vh;  \r\nbackground-color: #0e0e0e;  \r\nbackground-image: \r\nlinear-gradient(0deg, #000 5%, transparent 5%, transparent 99%, #000 99%, #000), \r\nlinear-gradient(90deg, #000 5%, #0e0e0e 5%, #0e0e0e 99%, #000 99%, #000);  \r\nbackground-size: 50px 50px;\"\r\n></section>\r\n\r\n`,\r\n})"
                }
            ],
            "src/stories/components/calendar/calendar.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/calendar/calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/calendar/calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/calendar/calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
                },
                {
                    "name": "WithButtonBar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/calendar/calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/calendar/calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithReadOnlyInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/calendar/calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithSeconds",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/calendar/calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithShowTime",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/calendar/calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/components/chart-bars/chart-bars.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chart-bars/chart-bars.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/chart-bars/chart-bars.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
                }
            ],
            "src/stories/components/checkbox/checkbox.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
                }
            ],
            "src/stories/components/footer/footer.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/footer/footer.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/footer/footer.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
                }
            ],
            "src/stories/components/gym-pass-card/gym-pass-card.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/gym-pass-card/gym-pass-card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/gym-pass-card/gym-pass-card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/stories/components/iconShadow/iconShadow.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/iconShadow/iconShadow.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/iconShadow/iconShadow.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/stories/components/inputTextarea/inputtextarea.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/inputTextarea/inputtextarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/inputTextarea/inputtextarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
                }
            ],
            "src/stories/components/languageChanger/languageChanger.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/languageChanger/languageChanger.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/languageChanger/languageChanger.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
                }
            ],
            "src/stories/components/menuStatic/menuStatic.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menuStatic/menuStatic.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menuStatic/menuStatic.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
                }
            ],
            "src/stories/components/password/password.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/password/password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/password/password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/password/password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/stories/components/profile-menu/profile-menu.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/profile-menu/profile-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/profile-menu/profile-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n    template:`\r\n    <section style=\" background-color: grey; height:100vh;\">\r\n    <div style=\" width: 25%; padding: 40px\">\r\n        <af-tile>\r\n            <af-profile-menu />\r\n        </af-tile>\r\n    </div>\r\n    </section>\r\n    `,\r\n})"
                }
            ],
            "src/stories/components/rating/rating.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/rating/rating.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/rating/rating.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
                }
            ],
            "src/stories/components/table/table.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n  props:{\r\n    ...args\r\n  }\r\n})"
                }
            ]
        },
        "groupedFunctions": {
            "src/shared/untils.ts": [
                {
                    "name": "HttpLoaderFactory",
                    "file": "src/shared/untils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "http",
                            "type": "HttpClient",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "http",
                            "type": "HttpClient",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/features/validators/one-required.validator.ts": [
                {
                    "name": "OneRequiredValidator",
                    "file": "src/app/features/validators/one-required.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "ValidatorFn"
                }
            ]
        },
        "groupedEnumerations": {
            "src/stories/interfaces/chartBars.model.ts": [
                {
                    "name": "ChartBarsType",
                    "childs": [
                        {
                            "name": "bar",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pie",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "doughnut",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "line",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "polarArea",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "radar",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/stories/interfaces/chartBars.model.ts"
                }
            ],
            "src/stories/enums/input.enum.ts": [
                {
                    "name": "EnumIconFloat",
                    "childs": [
                        {
                            "name": "left",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "p-input-icon-left"
                        },
                        {
                            "name": "right",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "p-input-icon-right"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/stories/enums/input.enum.ts"
                }
            ],
            "src/app/features/models/gender.model.ts": [
                {
                    "name": "genderKey",
                    "childs": [
                        {
                            "name": "Male",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "male"
                        },
                        {
                            "name": "Female",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "female"
                        },
                        {
                            "name": "other",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "other"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/features/models/gender.model.ts"
                }
            ],
            "src/stories/interfaces/autocomplete.model.ts": [
                {
                    "name": "trainerSkillsModel",
                    "childs": [
                        {
                            "name": "high",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 3
                        },
                        {
                            "name": "medium",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 2
                        },
                        {
                            "name": "low",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 1
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/stories/interfaces/autocomplete.model.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/features/models/blog.model.ts": [
                {
                    "name": "ApiPostsModel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/features/models/blog.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "PostModel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/features/models/blog.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "PostSearchModel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/features/models/blog.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/stories/enums/button.enum.ts": [
                {
                    "name": "ButtonIconPosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
                    "file": "src/stories/enums/button.enum.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/features/models/gender.model.ts": [
                {
                    "name": "GenderModel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/features/models/gender.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/features/models/gym-pass.model.ts": [
                {
                    "name": "GymPassModel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/features/models/gym-pass.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/features/models/login.model.ts": [
                {
                    "name": "LoginModel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/features/models/login.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/features/models/page-event.model.ts": [
                {
                    "name": "PageEventModel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/features/models/page-event.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/stories/components/avatar/avatar.component.ts": [
                {
                    "name": "shapeType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"square\" | \"circle\" | undefined",
                    "file": "src/stories/components/avatar/avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/features/models/user.model.ts": [
                {
                    "name": "userDataModel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/features/models/user.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "/welcome",
                        "pathMatch": "full"
                    },
                    {
                        "path": "welcome",
                        "component": "WelcomePageComponent"
                    },
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "register",
                        "component": "RegisterComponent"
                    },
                    {
                        "path": "home",
                        "component": "HomePageComponent",
                        "canActivate": [
                            "AuthGuard"
                        ]
                    },
                    {
                        "path": "gym-pass",
                        "component": "GymPassComponent",
                        "canActivate": [
                            "AuthGuard"
                        ]
                    },
                    {
                        "path": "blog",
                        "component": "BlogComponent",
                        "canActivate": [
                            "AuthGuard"
                        ]
                    },
                    {
                        "path": "trainers",
                        "component": "TrainersComponent",
                        "canActivate": [
                            "AuthGuard"
                        ]
                    },
                    {
                        "path": "profile",
                        "component": "ProfileComponent",
                        "canActivate": [
                            "AuthGuard"
                        ],
                        "children": [
                            {
                                "path": "my-profile",
                                "component": "MyProfileComponent"
                            },
                            {
                                "path": "personal-trainers",
                                "component": "PersonalTrainerComponent"
                            },
                            {
                                "path": "gym-pass",
                                "component": "GymPassesComponent"
                            },
                            {
                                "path": "diets",
                                "component": "DietsComponent"
                            },
                            {
                                "path": "admin",
                                "component": "AdminPageComponent"
                            },
                            {
                                "path": "",
                                "redirectTo": "my-profile",
                                "pathMatch": "full"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/api/blog.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BlogService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/api/gym-passes.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GymPassesService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/api/login.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LoginService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/api/profile.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProfileService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/api/register.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RegisterService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/api/trainers.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TrainersService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.guard.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/features/components/new-post-form/new-post-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewPostFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/features/components/post-details/post-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PostDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/features/constants/dialog-config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dialogConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/services/message.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AfMessageService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/validators/one-required.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "OneRequiredValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sites/blog/blog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/sites/gym-pass/gym-pass.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GymPassComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sites/homePage/homePage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sites/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/sites/profile/admin-page/admin-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdminPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sites/profile/diets/diets.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DietsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sites/profile/gym-passes/gym-passes.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GymPassesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sites/profile/my-profile/my-profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MyProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sites/profile/personal-trainer/personal-trainer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PersonalTrainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sites/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sites/register/register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/sites/trainers/trainers.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TrainersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sites/welcomePage/welcomePage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WelcomePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/shared/untils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "HttpLoaderFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/backgrounds/checkered-background/checkered-background.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BackgorundGymStructure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BarBackground",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeadliftBackground",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Logo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LogoColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LogoFTText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/backgrounds/photo-backgrounds/photo-backgrounds.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SecondDeadliftBackground",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/autocompete/autocomplete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "exampleData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/autocompete/autocomplete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/autocompete/autocomplete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/autocompete/autocomplete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AutocompleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/avatar/avatar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/avatar/avatar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/avatar/avatar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/avatar/avatar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Xlarge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/avatar/avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FewButtons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TransparentButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TransparentButtonWithIconOnTop",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WhiteButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/calendar/calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/calendar/calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/calendar/calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/calendar/calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithButtonBar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/calendar/calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/calendar/calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithReadOnlyInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/calendar/calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithSeconds",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/calendar/calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithShowTime",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/calendar/calendar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CalendarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chart-bars/chart-bars.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chart-bars/chart-bars.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/chart-bars/chart-bars.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartBarsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/dropdown/dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/dropdown/dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/dropdown/dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/dropdown/dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/footer/footer.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/footer/footer.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/gym-pass-card/gym-pass-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/gym-pass-card/gym-pass-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/gym-pass-card/gym-pass-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AFGymPassCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/gym-pass-info/gym-pass-info.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GymPassInfoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/iconShadow/iconShadow.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/iconShadow/iconShadow.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/iconShadow/iconShadow.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AFIconShadowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/inputTextarea/inputtextarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/inputTextarea/inputtextarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/inputTextarea/inputtextarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputTextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/knob/knob.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/knob/knob.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExapmleValues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/knob/knob.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Readonly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/knob/knob.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/knob/knob.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KnobComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/languageChanger/language.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LanguageModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/languageChanger/languageChanger.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/languageChanger/languageChanger.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/languageChanger/languageChanger.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LanguageChangerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menuStatic/menuStatic.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menuStatic/menuStatic.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menuStatic/menuStatic.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuStaticComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/messages/messages.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/messages/messages.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/messages/messages.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/messages/messages.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/messages/messages.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/messages/messages.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MessagesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/password/password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/password/password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/password/password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/password/password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/photo-uploader/photo-uploader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PhotoUploaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/profile-menu/profile-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/profile-menu/profile-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/profile-menu/profile-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AFProfileMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/radiobutton/radiobutton.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomLabels",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/radiobutton/radiobutton.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/radiobutton/radiobutton.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/radiobutton/radiobutton.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/radiobutton/radiobutton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/rating/rating.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/rating/rating.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/rating/rating.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RatingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AFTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tile/tile.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DarkTile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tile/tile.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LightTile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tile/tile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/interfaces/autocomplete.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "examplePersonalTrainerModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/interfaces/input.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "inputIconConfig",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/interfaces/inputtextarea.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InputTextareaSizeModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/interfaces/radiobutton.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Categories",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/interfaces/table.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TableHeaderModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            }
        ]
    }
}